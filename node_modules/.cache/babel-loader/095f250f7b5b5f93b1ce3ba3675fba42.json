{"ast":null,"code":"import { Color } from '@progress/kendo-drawing';\nimport { Class, defined, deepExtend, setDefaultOptions, valueOrDefault, getSpacing, styleValue } from '../../common';\nimport { SHOW_TOOLTIP, HIDE_TOOLTIP } from '../constants';\n\nvar BaseTooltip = function (Class) {\n  function BaseTooltip(chartService, options) {\n    Class.call(this);\n    this.chartService = chartService;\n    this.options = deepExtend({}, this.options, options);\n  }\n\n  if (Class) BaseTooltip.__proto__ = Class;\n  BaseTooltip.prototype = Object.create(Class && Class.prototype);\n  BaseTooltip.prototype.constructor = BaseTooltip;\n\n  BaseTooltip.prototype.getStyle = function getStyle(options, point) {\n    var background = options.background;\n    var border = options.border.color;\n\n    if (point) {\n      var pointColor = point.color || point.options.color;\n      background = valueOrDefault(background, pointColor);\n      border = valueOrDefault(border, pointColor);\n    }\n\n    var padding = getSpacing(options.padding || {}, \"auto\");\n    return {\n      backgroundColor: background,\n      borderColor: border,\n      font: options.font,\n      color: options.color,\n      opacity: options.opacity,\n      borderWidth: styleValue(options.border.width),\n      paddingTop: styleValue(padding.top),\n      paddingBottom: styleValue(padding.bottom),\n      paddingLeft: styleValue(padding.left),\n      paddingRight: styleValue(padding.right)\n    };\n  };\n\n  BaseTooltip.prototype.show = function show(options, tooltipOptions, point) {\n    options.format = tooltipOptions.format;\n    var style = this.getStyle(tooltipOptions, point);\n    options.style = style;\n\n    if (!defined(tooltipOptions.color) && new Color(style.backgroundColor).percBrightness() > 180) {\n      options.className = \"k-chart-tooltip-inverse\";\n    }\n\n    this.chartService.notify(SHOW_TOOLTIP, options);\n    this.visible = true;\n  };\n\n  BaseTooltip.prototype.hide = function hide() {\n    if (this.chartService) {\n      this.chartService.notify(HIDE_TOOLTIP);\n    }\n\n    this.visible = false;\n  };\n\n  BaseTooltip.prototype.destroy = function destroy() {\n    delete this.chartService;\n  };\n\n  return BaseTooltip;\n}(Class);\n\nsetDefaultOptions(BaseTooltip, {\n  border: {\n    width: 1\n  },\n  opacity: 1\n});\nexport default BaseTooltip;","map":{"version":3,"sources":["/Users/lazybaccha/Documents/Honeywell/SBE/node_modules/@progress/kendo-charts/dist/es/chart/tooltip/base-tooltip.js"],"names":["Color","Class","defined","deepExtend","setDefaultOptions","valueOrDefault","getSpacing","styleValue","SHOW_TOOLTIP","HIDE_TOOLTIP","BaseTooltip","chartService","options","call","__proto__","prototype","Object","create","constructor","getStyle","point","background","border","color","pointColor","padding","backgroundColor","borderColor","font","opacity","borderWidth","width","paddingTop","top","paddingBottom","bottom","paddingLeft","left","paddingRight","right","show","tooltipOptions","format","style","percBrightness","className","notify","visible","hide","destroy"],"mappings":"AAAA,SAASA,KAAT,QAAsB,yBAAtB;AAEA,SAASC,KAAT,EAAgBC,OAAhB,EAAyBC,UAAzB,EAAqCC,iBAArC,EAAwDC,cAAxD,EAAwEC,UAAxE,EAAoFC,UAApF,QAAsG,cAAtG;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,cAA3C;;AAEA,IAAIC,WAAW,GAAI,UAAUT,KAAV,EAAiB;AAChC,WAASS,WAAT,CAAqBC,YAArB,EAAmCC,OAAnC,EAA4C;AACxCX,IAAAA,KAAK,CAACY,IAAN,CAAW,IAAX;AAEA,SAAKF,YAAL,GAAoBA,YAApB;AACA,SAAKC,OAAL,GAAeT,UAAU,CAAC,EAAD,EAAK,KAAKS,OAAV,EAAmBA,OAAnB,CAAzB;AACH;;AAED,MAAKX,KAAL,EAAaS,WAAW,CAACI,SAAZ,GAAwBb,KAAxB;AACbS,EAAAA,WAAW,CAACK,SAAZ,GAAwBC,MAAM,CAACC,MAAP,CAAehB,KAAK,IAAIA,KAAK,CAACc,SAA9B,CAAxB;AACAL,EAAAA,WAAW,CAACK,SAAZ,CAAsBG,WAAtB,GAAoCR,WAApC;;AAEAA,EAAAA,WAAW,CAACK,SAAZ,CAAsBI,QAAtB,GAAiC,SAASA,QAAT,CAAmBP,OAAnB,EAA4BQ,KAA5B,EAAmC;AAChE,QAAIC,UAAU,GAAGT,OAAO,CAACS,UAAzB;AACA,QAAIC,MAAM,GAAGV,OAAO,CAACU,MAAR,CAAeC,KAA5B;;AAEA,QAAIH,KAAJ,EAAW;AACP,UAAII,UAAU,GAAGJ,KAAK,CAACG,KAAN,IAAeH,KAAK,CAACR,OAAN,CAAcW,KAA9C;AACAF,MAAAA,UAAU,GAAGhB,cAAc,CAACgB,UAAD,EAAaG,UAAb,CAA3B;AACAF,MAAAA,MAAM,GAAGjB,cAAc,CAACiB,MAAD,EAASE,UAAT,CAAvB;AACH;;AAED,QAAIC,OAAO,GAAGnB,UAAU,CAACM,OAAO,CAACa,OAAR,IAAmB,EAApB,EAAwB,MAAxB,CAAxB;AAEA,WAAO;AACHC,MAAAA,eAAe,EAAEL,UADd;AAEHM,MAAAA,WAAW,EAAEL,MAFV;AAGHM,MAAAA,IAAI,EAAEhB,OAAO,CAACgB,IAHX;AAIHL,MAAAA,KAAK,EAAEX,OAAO,CAACW,KAJZ;AAKHM,MAAAA,OAAO,EAAEjB,OAAO,CAACiB,OALd;AAMHC,MAAAA,WAAW,EAAEvB,UAAU,CAACK,OAAO,CAACU,MAAR,CAAeS,KAAhB,CANpB;AAOHC,MAAAA,UAAU,EAAEzB,UAAU,CAACkB,OAAO,CAACQ,GAAT,CAPnB;AAQHC,MAAAA,aAAa,EAAE3B,UAAU,CAACkB,OAAO,CAACU,MAAT,CARtB;AASHC,MAAAA,WAAW,EAAE7B,UAAU,CAACkB,OAAO,CAACY,IAAT,CATpB;AAUHC,MAAAA,YAAY,EAAE/B,UAAU,CAACkB,OAAO,CAACc,KAAT;AAVrB,KAAP;AAYH,GAxBD;;AA0BA7B,EAAAA,WAAW,CAACK,SAAZ,CAAsByB,IAAtB,GAA6B,SAASA,IAAT,CAAe5B,OAAf,EAAwB6B,cAAxB,EAAwCrB,KAAxC,EAA+C;AACxER,IAAAA,OAAO,CAAC8B,MAAR,GAAiBD,cAAc,CAACC,MAAhC;AAEA,QAAIC,KAAK,GAAG,KAAKxB,QAAL,CAAcsB,cAAd,EAA8BrB,KAA9B,CAAZ;AACAR,IAAAA,OAAO,CAAC+B,KAAR,GAAgBA,KAAhB;;AAEA,QAAI,CAACzC,OAAO,CAACuC,cAAc,CAAClB,KAAhB,CAAR,IAAkC,IAAIvB,KAAJ,CAAU2C,KAAK,CAACjB,eAAhB,EAAiCkB,cAAjC,KAAoD,GAA1F,EAA+F;AAC3FhC,MAAAA,OAAO,CAACiC,SAAR,GAAoB,yBAApB;AACH;;AAED,SAAKlC,YAAL,CAAkBmC,MAAlB,CAAyBtC,YAAzB,EAAuCI,OAAvC;AAEA,SAAKmC,OAAL,GAAe,IAAf;AACH,GAbD;;AAeArC,EAAAA,WAAW,CAACK,SAAZ,CAAsBiC,IAAtB,GAA6B,SAASA,IAAT,GAAiB;AAC1C,QAAI,KAAKrC,YAAT,EAAuB;AACnB,WAAKA,YAAL,CAAkBmC,MAAlB,CAAyBrC,YAAzB;AACH;;AAED,SAAKsC,OAAL,GAAe,KAAf;AACH,GAND;;AAQArC,EAAAA,WAAW,CAACK,SAAZ,CAAsBkC,OAAtB,GAAgC,SAASA,OAAT,GAAoB;AAChD,WAAO,KAAKtC,YAAZ;AACH,GAFD;;AAIA,SAAOD,WAAP;AACH,CAlEkB,CAkEjBT,KAlEiB,CAAnB;;AAoEAG,iBAAiB,CAACM,WAAD,EAAc;AAC3BY,EAAAA,MAAM,EAAE;AACJS,IAAAA,KAAK,EAAE;AADH,GADmB;AAI3BF,EAAAA,OAAO,EAAE;AAJkB,CAAd,CAAjB;AAOA,eAAenB,WAAf","sourcesContent":["import { Color } from '@progress/kendo-drawing';\n\nimport { Class, defined, deepExtend, setDefaultOptions, valueOrDefault, getSpacing, styleValue } from '../../common';\nimport { SHOW_TOOLTIP, HIDE_TOOLTIP } from '../constants';\n\nvar BaseTooltip = (function (Class) {\n    function BaseTooltip(chartService, options) {\n        Class.call(this);\n\n        this.chartService = chartService;\n        this.options = deepExtend({}, this.options, options);\n    }\n\n    if ( Class ) BaseTooltip.__proto__ = Class;\n    BaseTooltip.prototype = Object.create( Class && Class.prototype );\n    BaseTooltip.prototype.constructor = BaseTooltip;\n\n    BaseTooltip.prototype.getStyle = function getStyle (options, point) {\n        var background = options.background;\n        var border = options.border.color;\n\n        if (point) {\n            var pointColor = point.color || point.options.color;\n            background = valueOrDefault(background, pointColor);\n            border = valueOrDefault(border, pointColor);\n        }\n\n        var padding = getSpacing(options.padding || {}, \"auto\");\n\n        return {\n            backgroundColor: background,\n            borderColor: border,\n            font: options.font,\n            color: options.color,\n            opacity: options.opacity,\n            borderWidth: styleValue(options.border.width),\n            paddingTop: styleValue(padding.top),\n            paddingBottom: styleValue(padding.bottom),\n            paddingLeft: styleValue(padding.left),\n            paddingRight: styleValue(padding.right)\n        };\n    };\n\n    BaseTooltip.prototype.show = function show (options, tooltipOptions, point) {\n        options.format = tooltipOptions.format;\n\n        var style = this.getStyle(tooltipOptions, point);\n        options.style = style;\n\n        if (!defined(tooltipOptions.color) && new Color(style.backgroundColor).percBrightness() > 180) {\n            options.className = \"k-chart-tooltip-inverse\";\n        }\n\n        this.chartService.notify(SHOW_TOOLTIP, options);\n\n        this.visible = true;\n    };\n\n    BaseTooltip.prototype.hide = function hide () {\n        if (this.chartService) {\n            this.chartService.notify(HIDE_TOOLTIP);\n        }\n\n        this.visible = false;\n    };\n\n    BaseTooltip.prototype.destroy = function destroy () {\n        delete this.chartService;\n    };\n\n    return BaseTooltip;\n}(Class));\n\nsetDefaultOptions(BaseTooltip, {\n    border: {\n        width: 1\n    },\n    opacity: 1\n});\n\nexport default BaseTooltip;\n"]},"metadata":{},"sourceType":"module"}