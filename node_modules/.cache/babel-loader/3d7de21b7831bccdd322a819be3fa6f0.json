{"ast":null,"code":"import { drawing as draw } from '@progress/kendo-drawing';\nimport AreaSegment from '../area-chart/area-segment';\n\nvar RangeAreaSegment = function (AreaSegment) {\n  function RangeAreaSegment() {\n    AreaSegment.apply(this, arguments);\n  }\n\n  if (AreaSegment) RangeAreaSegment.__proto__ = AreaSegment;\n  RangeAreaSegment.prototype = Object.create(AreaSegment && AreaSegment.prototype);\n  RangeAreaSegment.prototype.constructor = RangeAreaSegment;\n\n  RangeAreaSegment.prototype.createStrokeSegments = function createStrokeSegments() {\n    return this.segmentsFromPoints(this.toGeometryPoints(this.toPoints()));\n  };\n\n  RangeAreaSegment.prototype.stackSegments = function stackSegments() {\n    var fromSegments = this.fromSegments;\n\n    if (!this.fromSegments) {\n      fromSegments = this.fromSegments = this.segmentsFromPoints(this.toGeometryPoints(this.fromPoints().reverse()));\n    }\n\n    return fromSegments;\n  };\n\n  RangeAreaSegment.prototype.createStroke = function createStroke(style) {\n    var toPath = new draw.Path(style);\n    var fromPath = new draw.Path(style);\n    toPath.segments.push.apply(toPath.segments, this.strokeSegments());\n    fromPath.segments.push.apply(fromPath.segments, this.stackSegments());\n    this.visual.append(toPath);\n    this.visual.append(fromPath);\n  };\n\n  RangeAreaSegment.prototype.hasStackSegment = function hasStackSegment() {\n    return true;\n  };\n\n  RangeAreaSegment.prototype.fromPoints = function fromPoints() {\n    return this.linePoints.map(function (point) {\n      return point.fromPoint;\n    });\n  };\n\n  RangeAreaSegment.prototype.toPoints = function toPoints() {\n    return this.linePoints.map(function (point) {\n      return point.toPoint;\n    });\n  };\n\n  return RangeAreaSegment;\n}(AreaSegment);\n\nexport default RangeAreaSegment;","map":{"version":3,"sources":["/Users/lazybaccha/Documents/Honeywell/SBE/node_modules/@progress/kendo-charts/dist/es/chart/range-area-chart/range-area-segment.js"],"names":["drawing","draw","AreaSegment","RangeAreaSegment","apply","arguments","__proto__","prototype","Object","create","constructor","createStrokeSegments","segmentsFromPoints","toGeometryPoints","toPoints","stackSegments","fromSegments","fromPoints","reverse","createStroke","style","toPath","Path","fromPath","segments","push","strokeSegments","visual","append","hasStackSegment","linePoints","map","point","fromPoint","toPoint"],"mappings":"AAAA,SAASA,OAAO,IAAIC,IAApB,QAAgC,yBAAhC;AACA,OAAOC,WAAP,MAAwB,4BAAxB;;AAEA,IAAIC,gBAAgB,GAAI,UAAUD,WAAV,EAAuB;AAC3C,WAASC,gBAAT,GAA6B;AACzBD,IAAAA,WAAW,CAACE,KAAZ,CAAkB,IAAlB,EAAwBC,SAAxB;AACH;;AAED,MAAKH,WAAL,EAAmBC,gBAAgB,CAACG,SAAjB,GAA6BJ,WAA7B;AACnBC,EAAAA,gBAAgB,CAACI,SAAjB,GAA6BC,MAAM,CAACC,MAAP,CAAeP,WAAW,IAAIA,WAAW,CAACK,SAA1C,CAA7B;AACAJ,EAAAA,gBAAgB,CAACI,SAAjB,CAA2BG,WAA3B,GAAyCP,gBAAzC;;AAEAA,EAAAA,gBAAgB,CAACI,SAAjB,CAA2BI,oBAA3B,GAAkD,SAASA,oBAAT,GAAiC;AAC/E,WAAO,KAAKC,kBAAL,CAAwB,KAAKC,gBAAL,CAAsB,KAAKC,QAAL,EAAtB,CAAxB,CAAP;AACH,GAFD;;AAIAX,EAAAA,gBAAgB,CAACI,SAAjB,CAA2BQ,aAA3B,GAA2C,SAASA,aAAT,GAA0B;AACjE,QAAIC,YAAY,GAAG,KAAKA,YAAxB;;AACA,QAAI,CAAC,KAAKA,YAAV,EAAwB;AACpBA,MAAAA,YAAY,GAAG,KAAKA,YAAL,GAAoB,KAAKJ,kBAAL,CAAwB,KAAKC,gBAAL,CAAsB,KAAKI,UAAL,GAAkBC,OAAlB,EAAtB,CAAxB,CAAnC;AACH;;AAED,WAAOF,YAAP;AACH,GAPD;;AASAb,EAAAA,gBAAgB,CAACI,SAAjB,CAA2BY,YAA3B,GAA0C,SAASA,YAAT,CAAuBC,KAAvB,EAA8B;AACpE,QAAIC,MAAM,GAAG,IAAIpB,IAAI,CAACqB,IAAT,CAAcF,KAAd,CAAb;AACA,QAAIG,QAAQ,GAAG,IAAItB,IAAI,CAACqB,IAAT,CAAcF,KAAd,CAAf;AAEAC,IAAAA,MAAM,CAACG,QAAP,CAAgBC,IAAhB,CAAqBrB,KAArB,CAA2BiB,MAAM,CAACG,QAAlC,EAA4C,KAAKE,cAAL,EAA5C;AACAH,IAAAA,QAAQ,CAACC,QAAT,CAAkBC,IAAlB,CAAuBrB,KAAvB,CAA6BmB,QAAQ,CAACC,QAAtC,EAAgD,KAAKT,aAAL,EAAhD;AAEA,SAAKY,MAAL,CAAYC,MAAZ,CAAmBP,MAAnB;AACA,SAAKM,MAAL,CAAYC,MAAZ,CAAmBL,QAAnB;AACH,GATD;;AAWApB,EAAAA,gBAAgB,CAACI,SAAjB,CAA2BsB,eAA3B,GAA6C,SAASA,eAAT,GAA4B;AACrE,WAAO,IAAP;AACH,GAFD;;AAIA1B,EAAAA,gBAAgB,CAACI,SAAjB,CAA2BU,UAA3B,GAAwC,SAASA,UAAT,GAAuB;AAC3D,WAAO,KAAKa,UAAL,CAAgBC,GAAhB,CAAoB,UAAUC,KAAV,EAAiB;AAAE,aAAOA,KAAK,CAACC,SAAb;AAAyB,KAAhE,CAAP;AACH,GAFD;;AAIA9B,EAAAA,gBAAgB,CAACI,SAAjB,CAA2BO,QAA3B,GAAsC,SAASA,QAAT,GAAqB;AACvD,WAAO,KAAKgB,UAAL,CAAgBC,GAAhB,CAAoB,UAAUC,KAAV,EAAiB;AAAE,aAAOA,KAAK,CAACE,OAAb;AAAuB,KAA9D,CAAP;AACH,GAFD;;AAIA,SAAO/B,gBAAP;AACH,CA9CuB,CA8CtBD,WA9CsB,CAAxB;;AAgDA,eAAeC,gBAAf","sourcesContent":["import { drawing as draw } from '@progress/kendo-drawing';\nimport AreaSegment from '../area-chart/area-segment';\n\nvar RangeAreaSegment = (function (AreaSegment) {\n    function RangeAreaSegment () {\n        AreaSegment.apply(this, arguments);\n    }\n\n    if ( AreaSegment ) RangeAreaSegment.__proto__ = AreaSegment;\n    RangeAreaSegment.prototype = Object.create( AreaSegment && AreaSegment.prototype );\n    RangeAreaSegment.prototype.constructor = RangeAreaSegment;\n\n    RangeAreaSegment.prototype.createStrokeSegments = function createStrokeSegments () {\n        return this.segmentsFromPoints(this.toGeometryPoints(this.toPoints()));\n    };\n\n    RangeAreaSegment.prototype.stackSegments = function stackSegments () {\n        var fromSegments = this.fromSegments;\n        if (!this.fromSegments) {\n            fromSegments = this.fromSegments = this.segmentsFromPoints(this.toGeometryPoints(this.fromPoints().reverse()));\n        }\n\n        return fromSegments;\n    };\n\n    RangeAreaSegment.prototype.createStroke = function createStroke (style) {\n        var toPath = new draw.Path(style);\n        var fromPath = new draw.Path(style);\n\n        toPath.segments.push.apply(toPath.segments, this.strokeSegments());\n        fromPath.segments.push.apply(fromPath.segments, this.stackSegments());\n\n        this.visual.append(toPath);\n        this.visual.append(fromPath);\n    };\n\n    RangeAreaSegment.prototype.hasStackSegment = function hasStackSegment () {\n        return true;\n    };\n\n    RangeAreaSegment.prototype.fromPoints = function fromPoints () {\n        return this.linePoints.map(function (point) { return point.fromPoint; });\n    };\n\n    RangeAreaSegment.prototype.toPoints = function toPoints () {\n        return this.linePoints.map(function (point) { return point.toPoint; });\n    };\n\n    return RangeAreaSegment;\n}(AreaSegment));\n\nexport default RangeAreaSegment;"]},"metadata":{},"sourceType":"module"}