{"ast":null,"code":"import _slicedToArray from\"/Users/lazybaccha/Documents/Honeywell/SBE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import{Chart,ChartSeries,ChartSeriesItem,ChartCategoryAxis,ChartCategoryAxisItem,ChartTitle,ChartTooltip}from\"@progress/kendo-react-charts\";import{getPerformance}from\"../services/dataService\";import Loading from\"../layout/Loading\";var renderTooltip=function renderTooltip(e){return/*#__PURE__*/React.createElement(\"div\",null,e.point?\"$\"+e.point.value.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g,\"$1,\"):\"\");};export default function PerformancePanel(){var _React$useState=React.useState(),_React$useState2=_slicedToArray(_React$useState,2),data=_React$useState2[0],setData=_React$useState2[1];React.useEffect(function(){getPerformance().then(function(results){setData(results);});},[]);return/*#__PURE__*/React.createElement(React.Fragment,null,!data&&/*#__PURE__*/React.createElement(Loading,null),/*#__PURE__*/React.createElement(Chart,{style:{opacity:data?\"1\":\"0\"}},/*#__PURE__*/React.createElement(ChartTitle,{text:\"Energy Usage\"}),/*#__PURE__*/React.createElement(ChartCategoryAxis,null,/*#__PURE__*/React.createElement(ChartCategoryAxisItem,{categories:[\"2014\",\"2015\",\"2016\",\"2017\",\"2018\",\"2019\",\"2020\"]})),/*#__PURE__*/React.createElement(ChartSeries,null,/*#__PURE__*/React.createElement(ChartSeriesItem,{type:\"line\",data:data})),/*#__PURE__*/React.createElement(ChartTooltip,{render:renderTooltip})));}","map":{"version":3,"sources":["/Users/lazybaccha/Documents/Honeywell/SBE/src/panels/PerformancePanel.tsx"],"names":["React","Chart","ChartSeries","ChartSeriesItem","ChartCategoryAxis","ChartCategoryAxisItem","ChartTitle","ChartTooltip","getPerformance","Loading","renderTooltip","e","point","value","replace","PerformancePanel","useState","data","setData","useEffect","then","results","opacity"],"mappings":"gKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OACEC,KADF,CAEEC,WAFF,CAGEC,eAHF,CAIEC,iBAJF,CAKEC,qBALF,CAMEC,UANF,CAOEC,YAPF,KAQO,8BARP,CAUA,OAASC,cAAT,KAA+B,yBAA/B,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,CAAD,CAAY,CAChC,mBACE,+BACGA,CAAC,CAACC,KAAF,CACC,IAAMD,CAAC,CAACC,KAAF,CAAQC,KAAR,CAAcC,OAAd,CAAsB,yBAAtB,CAAiD,KAAjD,CADP,CACiE,EAFpE,CADF,CAMD,CAPD,CASA,cAAe,SAASC,CAAAA,gBAAT,EAA4B,qBACjBf,KAAK,CAACgB,QAAN,EADiB,oDAClCC,IADkC,qBAC5BC,OAD4B,qBAEzClB,KAAK,CAACmB,SAAN,CAAgB,UAAM,CACpBX,cAAc,GAAGY,IAAjB,CAAsB,SAACC,OAAD,CAAuB,CAC3CH,OAAO,CAACG,OAAD,CAAP,CACD,CAFD,EAGD,CAJD,CAIG,EAJH,EAMA,mBACE,wCACG,CAACJ,IAAD,eAAS,oBAAC,OAAD,MADZ,cAEE,oBAAC,KAAD,EAAO,KAAK,CAAE,CAAEK,OAAO,CAAEL,IAAI,CAAG,GAAH,CAAS,GAAxB,CAAd,eACE,oBAAC,UAAD,EAAY,IAAI,CAAC,cAAjB,EADF,cAEE,oBAAC,iBAAD,mBACE,oBAAC,qBAAD,EAAuB,UAAU,CAAE,CAAC,MAAD,CAAS,MAAT,CAAiB,MAAjB,CAAyB,MAAzB,CAAiC,MAAjC,CAAyC,MAAzC,CAAiD,MAAjD,CAAnC,EADF,CAFF,cAKE,oBAAC,WAAD,mBACE,oBAAC,eAAD,EAAiB,IAAI,CAAC,MAAtB,CAA6B,IAAI,CAAEA,IAAnC,EADF,CALF,cAQE,oBAAC,YAAD,EAAc,MAAM,CAAEP,aAAtB,EARF,CAFF,CADF,CAeD","sourcesContent":["import React from \"react\";\nimport {\n  Chart,\n  ChartSeries,\n  ChartSeriesItem,\n  ChartCategoryAxis,\n  ChartCategoryAxisItem,\n  ChartTitle,\n  ChartTooltip,\n} from \"@progress/kendo-react-charts\";\n\nimport { getPerformance } from \"../services/dataService\";\nimport Loading from \"../layout/Loading\";\n\nconst renderTooltip = (e: any) => {\n  return (\n    <div>\n      {e.point ?\n        \"$\" + e.point.value.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\") : \"\"}\n    </div>\n  );\n};\n\nexport default function PerformancePanel() {\n  const [data, setData] = React.useState<string[]>();\n  React.useEffect(() => {\n    getPerformance().then((results: string[]) => {\n      setData(results);\n    })\n  }, []);\n\n  return (\n    <>\n      {!data && <Loading />}\n      <Chart style={{ opacity: data ? \"1\" : \"0\" }}>\n        <ChartTitle text=\"Energy Usage\" />\n        <ChartCategoryAxis>\n          <ChartCategoryAxisItem categories={[\"2014\", \"2015\", \"2016\", \"2017\", \"2018\", \"2019\", \"2020\"]} />\n        </ChartCategoryAxis>\n        <ChartSeries>\n          <ChartSeriesItem type=\"line\" data={data} />\n        </ChartSeries>\n        <ChartTooltip render={renderTooltip} />\n      </Chart>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}