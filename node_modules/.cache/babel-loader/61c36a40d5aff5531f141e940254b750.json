{"ast":null,"code":"import { geometry as geom } from '@progress/kendo-drawing';\nimport Point from './point';\nimport { X, Y, TOP, BOTTOM, LEFT, RIGHT, CENTER, WIDTH, HEIGHT } from '../common/constants';\nimport { Class, defined, getSpacing, inArray, isArray, rad } from '../common';\n\nvar Box = function (Class) {\n  function Box(x1, y1, x2, y2) {\n    Class.call(this);\n    this.x1 = x1 || 0;\n    this.y1 = y1 || 0;\n    this.x2 = x2 || 0;\n    this.y2 = y2 || 0;\n  }\n\n  if (Class) Box.__proto__ = Class;\n  Box.prototype = Object.create(Class && Class.prototype);\n  Box.prototype.constructor = Box;\n\n  Box.prototype.equals = function equals(box) {\n    return this.x1 === box.x1 && this.x2 === box.x2 && this.y1 === box.y1 && this.y2 === box.y2;\n  };\n\n  Box.prototype.width = function width() {\n    return this.x2 - this.x1;\n  };\n\n  Box.prototype.height = function height() {\n    return this.y2 - this.y1;\n  };\n\n  Box.prototype.translate = function translate(dx, dy) {\n    this.x1 += dx;\n    this.x2 += dx;\n    this.y1 += dy;\n    this.y2 += dy;\n    return this;\n  };\n\n  Box.prototype.move = function move(x, y) {\n    var height = this.height();\n    var width = this.width();\n\n    if (defined(x)) {\n      this.x1 = x;\n      this.x2 = this.x1 + width;\n    }\n\n    if (defined(y)) {\n      this.y1 = y;\n      this.y2 = this.y1 + height;\n    }\n\n    return this;\n  };\n\n  Box.prototype.wrap = function wrap(targetBox) {\n    this.x1 = Math.min(this.x1, targetBox.x1);\n    this.y1 = Math.min(this.y1, targetBox.y1);\n    this.x2 = Math.max(this.x2, targetBox.x2);\n    this.y2 = Math.max(this.y2, targetBox.y2);\n    return this;\n  };\n\n  Box.prototype.wrapPoint = function wrapPoint(point) {\n    var arrayPoint = isArray(point);\n    var x = arrayPoint ? point[0] : point.x;\n    var y = arrayPoint ? point[1] : point.y;\n    this.wrap(new Box(x, y, x, y));\n    return this;\n  };\n\n  Box.prototype.snapTo = function snapTo(targetBox, axis) {\n    if (axis === X || !axis) {\n      this.x1 = targetBox.x1;\n      this.x2 = targetBox.x2;\n    }\n\n    if (axis === Y || !axis) {\n      this.y1 = targetBox.y1;\n      this.y2 = targetBox.y2;\n    }\n\n    return this;\n  };\n\n  Box.prototype.alignTo = function alignTo(targetBox, anchor) {\n    var height = this.height();\n    var width = this.width();\n    var axis = anchor === TOP || anchor === BOTTOM ? Y : X;\n    var offset = axis === Y ? height : width;\n\n    if (anchor === CENTER) {\n      var targetCenter = targetBox.center();\n      var center = this.center();\n      this.x1 += targetCenter.x - center.x;\n      this.y1 += targetCenter.y - center.y;\n    } else if (anchor === TOP || anchor === LEFT) {\n      this[axis + 1] = targetBox[axis + 1] - offset;\n    } else {\n      this[axis + 1] = targetBox[axis + 2];\n    }\n\n    this.x2 = this.x1 + width;\n    this.y2 = this.y1 + height;\n    return this;\n  };\n\n  Box.prototype.shrink = function shrink(dw, dh) {\n    this.x2 -= dw;\n    this.y2 -= dh;\n    return this;\n  };\n\n  Box.prototype.expand = function expand(dw, dh) {\n    this.shrink(-dw, -dh);\n    return this;\n  };\n\n  Box.prototype.pad = function pad(padding) {\n    var spacing = getSpacing(padding);\n    this.x1 -= spacing.left;\n    this.x2 += spacing.right;\n    this.y1 -= spacing.top;\n    this.y2 += spacing.bottom;\n    return this;\n  };\n\n  Box.prototype.unpad = function unpad(padding) {\n    var spacing = getSpacing(padding);\n    spacing.left = -spacing.left;\n    spacing.top = -spacing.top;\n    spacing.right = -spacing.right;\n    spacing.bottom = -spacing.bottom;\n    return this.pad(spacing);\n  };\n\n  Box.prototype.clone = function clone() {\n    return new Box(this.x1, this.y1, this.x2, this.y2);\n  };\n\n  Box.prototype.center = function center() {\n    return new Point(this.x1 + this.width() / 2, this.y1 + this.height() / 2);\n  };\n\n  Box.prototype.containsPoint = function containsPoint(point) {\n    return point.x >= this.x1 && point.x <= this.x2 && point.y >= this.y1 && point.y <= this.y2;\n  };\n\n  Box.prototype.points = function points() {\n    return [new Point(this.x1, this.y1), new Point(this.x2, this.y1), new Point(this.x2, this.y2), new Point(this.x1, this.y2)];\n  };\n\n  Box.prototype.getHash = function getHash() {\n    return [this.x1, this.y1, this.x2, this.y2].join(\",\");\n  };\n\n  Box.prototype.overlaps = function overlaps(box) {\n    return !(box.y2 < this.y1 || this.y2 < box.y1 || box.x2 < this.x1 || this.x2 < box.x1);\n  };\n\n  Box.prototype.rotate = function rotate(rotation) {\n    var width = this.width();\n    var height = this.height();\n    var ref = this.center();\n    var cx = ref.x;\n    var cy = ref.y;\n    var r1 = rotatePoint(0, 0, cx, cy, rotation);\n    var r2 = rotatePoint(width, 0, cx, cy, rotation);\n    var r3 = rotatePoint(width, height, cx, cy, rotation);\n    var r4 = rotatePoint(0, height, cx, cy, rotation);\n    width = Math.max(r1.x, r2.x, r3.x, r4.x) - Math.min(r1.x, r2.x, r3.x, r4.x);\n    height = Math.max(r1.y, r2.y, r3.y, r4.y) - Math.min(r1.y, r2.y, r3.y, r4.y);\n    this.x2 = this.x1 + width;\n    this.y2 = this.y1 + height;\n    return this;\n  };\n\n  Box.prototype.toRect = function toRect() {\n    return new geom.Rect([this.x1, this.y1], [this.width(), this.height()]);\n  };\n\n  Box.prototype.hasSize = function hasSize() {\n    return this.width() !== 0 && this.height() !== 0;\n  };\n\n  Box.prototype.align = function align(targetBox, axis, alignment) {\n    var c1 = axis + 1;\n    var c2 = axis + 2;\n    var sizeFunc = axis === X ? WIDTH : HEIGHT;\n    var size = this[sizeFunc]();\n\n    if (inArray(alignment, [LEFT, TOP])) {\n      this[c1] = targetBox[c1];\n      this[c2] = this[c1] + size;\n    } else if (inArray(alignment, [RIGHT, BOTTOM])) {\n      this[c2] = targetBox[c2];\n      this[c1] = this[c2] - size;\n    } else if (alignment === CENTER) {\n      this[c1] = targetBox[c1] + (targetBox[sizeFunc]() - size) / 2;\n      this[c2] = this[c1] + size;\n    }\n  };\n\n  return Box;\n}(Class);\n\nfunction rotatePoint(x, y, cx, cy, angle) {\n  var theta = rad(angle);\n  return new Point(cx + (x - cx) * Math.cos(theta) + (y - cy) * Math.sin(theta), cy - (x - cx) * Math.sin(theta) + (y - cy) * Math.cos(theta));\n}\n\nexport default Box;","map":{"version":3,"sources":["/Users/lazybaccha/Documents/Honeywell/SBE/node_modules/@progress/kendo-charts/dist/es/core/box.js"],"names":["geometry","geom","Point","X","Y","TOP","BOTTOM","LEFT","RIGHT","CENTER","WIDTH","HEIGHT","Class","defined","getSpacing","inArray","isArray","rad","Box","x1","y1","x2","y2","call","__proto__","prototype","Object","create","constructor","equals","box","width","height","translate","dx","dy","move","x","y","wrap","targetBox","Math","min","max","wrapPoint","point","arrayPoint","snapTo","axis","alignTo","anchor","offset","targetCenter","center","shrink","dw","dh","expand","pad","padding","spacing","left","right","top","bottom","unpad","clone","containsPoint","points","getHash","join","overlaps","rotate","rotation","ref","cx","cy","r1","rotatePoint","r2","r3","r4","toRect","Rect","hasSize","align","alignment","c1","c2","sizeFunc","size","angle","theta","cos","sin"],"mappings":"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","sourcesContent":["import { geometry as geom } from '@progress/kendo-drawing';\n\nimport Point from './point';\n\nimport { X, Y, TOP, BOTTOM, LEFT, RIGHT, CENTER, WIDTH, HEIGHT } from '../common/constants';\nimport { Class, defined, getSpacing, inArray, isArray, rad } from '../common';\n\nvar Box = (function (Class) {\n    function Box(x1, y1, x2, y2) {\n        Class.call(this);\n\n        this.x1 = x1 || 0;\n        this.y1 = y1 || 0;\n        this.x2 = x2 || 0;\n        this.y2 = y2 || 0;\n    }\n\n    if ( Class ) Box.__proto__ = Class;\n    Box.prototype = Object.create( Class && Class.prototype );\n    Box.prototype.constructor = Box;\n\n    Box.prototype.equals = function equals (box) {\n        return this.x1 === box.x1 && this.x2 === box.x2 &&\n            this.y1 === box.y1 && this.y2 === box.y2;\n    };\n\n    Box.prototype.width = function width () {\n        return this.x2 - this.x1;\n    };\n\n    Box.prototype.height = function height () {\n        return this.y2 - this.y1;\n    };\n\n    Box.prototype.translate = function translate (dx, dy) {\n        this.x1 += dx;\n        this.x2 += dx;\n        this.y1 += dy;\n        this.y2 += dy;\n\n        return this;\n    };\n\n    Box.prototype.move = function move (x, y) {\n        var height = this.height();\n        var width = this.width();\n\n        if (defined(x)) {\n            this.x1 = x;\n            this.x2 = this.x1 + width;\n        }\n\n        if (defined(y)) {\n            this.y1 = y;\n            this.y2 = this.y1 + height;\n        }\n\n        return this;\n    };\n\n    Box.prototype.wrap = function wrap (targetBox) {\n        this.x1 = Math.min(this.x1, targetBox.x1);\n        this.y1 = Math.min(this.y1, targetBox.y1);\n        this.x2 = Math.max(this.x2, targetBox.x2);\n        this.y2 = Math.max(this.y2, targetBox.y2);\n\n        return this;\n    };\n\n    Box.prototype.wrapPoint = function wrapPoint (point) {\n        var arrayPoint = isArray(point);\n        var x = arrayPoint ? point[0] : point.x;\n        var y = arrayPoint ? point[1] : point.y;\n        this.wrap(new Box(x, y, x, y));\n\n        return this;\n    };\n\n    Box.prototype.snapTo = function snapTo (targetBox, axis) {\n\n        if (axis === X || !axis) {\n            this.x1 = targetBox.x1;\n            this.x2 = targetBox.x2;\n        }\n\n        if (axis === Y || !axis) {\n            this.y1 = targetBox.y1;\n            this.y2 = targetBox.y2;\n        }\n\n        return this;\n    };\n\n    Box.prototype.alignTo = function alignTo (targetBox, anchor) {\n        var height = this.height();\n        var width = this.width();\n        var axis = anchor === TOP || anchor === BOTTOM ? Y : X;\n        var offset = axis === Y ? height : width;\n\n        if (anchor === CENTER) {\n            var targetCenter = targetBox.center();\n            var center = this.center();\n\n            this.x1 += targetCenter.x - center.x;\n            this.y1 += targetCenter.y - center.y;\n        } else if (anchor === TOP || anchor === LEFT) {\n            this[axis + 1] = targetBox[axis + 1] - offset;\n        } else {\n            this[axis + 1] = targetBox[axis + 2];\n        }\n\n        this.x2 = this.x1 + width;\n        this.y2 = this.y1 + height;\n\n        return this;\n    };\n\n    Box.prototype.shrink = function shrink (dw, dh) {\n\n        this.x2 -= dw;\n        this.y2 -= dh;\n\n        return this;\n    };\n\n    Box.prototype.expand = function expand (dw, dh) {\n        this.shrink(-dw, -dh);\n        return this;\n    };\n\n    Box.prototype.pad = function pad (padding) {\n        var spacing = getSpacing(padding);\n\n        this.x1 -= spacing.left;\n        this.x2 += spacing.right;\n        this.y1 -= spacing.top;\n        this.y2 += spacing.bottom;\n\n        return this;\n    };\n\n    Box.prototype.unpad = function unpad (padding) {\n        var spacing = getSpacing(padding);\n\n        spacing.left = -spacing.left;\n        spacing.top = -spacing.top;\n        spacing.right = -spacing.right;\n        spacing.bottom = -spacing.bottom;\n\n        return this.pad(spacing);\n    };\n\n    Box.prototype.clone = function clone () {\n        return new Box(this.x1, this.y1, this.x2, this.y2);\n    };\n\n    Box.prototype.center = function center () {\n        return new Point(\n            this.x1 + this.width() / 2,\n            this.y1 + this.height() / 2\n        );\n    };\n\n    Box.prototype.containsPoint = function containsPoint (point) {\n\n        return point.x >= this.x1 && point.x <= this.x2 &&\n               point.y >= this.y1 && point.y <= this.y2;\n    };\n\n    Box.prototype.points = function points () {\n        return [\n            new Point(this.x1, this.y1),\n            new Point(this.x2, this.y1),\n            new Point(this.x2, this.y2),\n            new Point(this.x1, this.y2)\n        ];\n    };\n\n    Box.prototype.getHash = function getHash () {\n        return [ this.x1, this.y1, this.x2, this.y2 ].join(\",\");\n    };\n\n    Box.prototype.overlaps = function overlaps (box) {\n        return !(box.y2 < this.y1 || this.y2 < box.y1 || box.x2 < this.x1 || this.x2 < box.x1);\n    };\n\n    Box.prototype.rotate = function rotate (rotation) {\n        var width = this.width();\n        var height = this.height();\n        var ref = this.center();\n        var cx = ref.x;\n        var cy = ref.y;\n\n        var r1 = rotatePoint(0, 0, cx, cy, rotation);\n        var r2 = rotatePoint(width, 0, cx, cy, rotation);\n        var r3 = rotatePoint(width, height, cx, cy, rotation);\n        var r4 = rotatePoint(0, height, cx, cy, rotation);\n\n        width = Math.max(r1.x, r2.x, r3.x, r4.x) - Math.min(r1.x, r2.x, r3.x, r4.x);\n        height = Math.max(r1.y, r2.y, r3.y, r4.y) - Math.min(r1.y, r2.y, r3.y, r4.y);\n\n        this.x2 = this.x1 + width;\n        this.y2 = this.y1 + height;\n\n        return this;\n    };\n\n    Box.prototype.toRect = function toRect () {\n        return new geom.Rect([ this.x1, this.y1 ], [ this.width(), this.height() ]);\n    };\n\n    Box.prototype.hasSize = function hasSize () {\n        return this.width() !== 0 && this.height() !== 0;\n    };\n\n    Box.prototype.align = function align (targetBox, axis, alignment) {\n        var c1 = axis + 1;\n        var c2 = axis + 2;\n        var sizeFunc = axis === X ? WIDTH : HEIGHT;\n        var size = this[sizeFunc]();\n\n        if (inArray(alignment, [ LEFT, TOP ])) {\n            this[c1] = targetBox[c1];\n            this[c2] = this[c1] + size;\n        } else if (inArray(alignment, [ RIGHT, BOTTOM ])) {\n            this[c2] = targetBox[c2];\n            this[c1] = this[c2] - size;\n        } else if (alignment === CENTER) {\n            this[c1] = targetBox[c1] + (targetBox[sizeFunc]() - size) / 2;\n            this[c2] = this[c1] + size;\n        }\n    };\n\n    return Box;\n}(Class));\n\nfunction rotatePoint(x, y, cx, cy, angle) {\n    var theta = rad(angle);\n\n    return new Point(\n        cx + (x - cx) * Math.cos(theta) + (y - cy) * Math.sin(theta),\n        cy - (x - cx) * Math.sin(theta) + (y - cy) * Math.cos(theta)\n    );\n}\n\nexport default Box;\n"]},"metadata":{},"sourceType":"module"}