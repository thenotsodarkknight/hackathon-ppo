{"ast":null,"code":"import ChartElement from './chart-element';\nimport Box from './box';\nimport { X, Y, WIDTH, HEIGHT, RIGHT, BOTTOM, CENTER } from '../common/constants';\nimport { round, setDefaultOptions } from '../common';\n\nvar FloatElement = function (ChartElement) {\n  function FloatElement(options) {\n    ChartElement.call(this, options);\n\n    this._initDirection();\n  }\n\n  if (ChartElement) FloatElement.__proto__ = ChartElement;\n  FloatElement.prototype = Object.create(ChartElement && ChartElement.prototype);\n  FloatElement.prototype.constructor = FloatElement;\n\n  FloatElement.prototype._initDirection = function _initDirection() {\n    var options = this.options;\n\n    if (options.vertical) {\n      this.groupAxis = X;\n      this.elementAxis = Y;\n      this.groupSizeField = WIDTH;\n      this.elementSizeField = HEIGHT;\n      this.groupSpacing = options.spacing;\n      this.elementSpacing = options.vSpacing;\n    } else {\n      this.groupAxis = Y;\n      this.elementAxis = X;\n      this.groupSizeField = HEIGHT;\n      this.elementSizeField = WIDTH;\n      this.groupSpacing = options.vSpacing;\n      this.elementSpacing = options.spacing;\n    }\n  };\n\n  FloatElement.prototype.reflow = function reflow(targetBox) {\n    this.box = targetBox.clone();\n    this.reflowChildren();\n  };\n\n  FloatElement.prototype.reflowChildren = function reflowChildren() {\n    var this$1 = this;\n    var ref = this;\n    var box = ref.box;\n    var elementAxis = ref.elementAxis;\n    var groupAxis = ref.groupAxis;\n    var elementSizeField = ref.elementSizeField;\n    var groupSizeField = ref.groupSizeField;\n    var ref$1 = this.groupOptions();\n    var groups = ref$1.groups;\n    var groupsSize = ref$1.groupsSize;\n    var maxGroupElementsSize = ref$1.maxGroupElementsSize;\n    var groupsCount = groups.length;\n    var groupsStart = box[groupAxis + 1] + this.alignStart(groupsSize, box[groupSizeField]());\n\n    if (groupsCount) {\n      var groupStart = groupsStart;\n\n      for (var groupIdx = 0; groupIdx < groupsCount; groupIdx++) {\n        var group = groups[groupIdx];\n        var groupElements = group.groupElements;\n        var elementStart = box[elementAxis + 1];\n        var groupElementsCount = groupElements.length;\n\n        for (var idx = 0; idx < groupElementsCount; idx++) {\n          var element = groupElements[idx];\n          var elementSize = this$1.elementSize(element);\n          var groupElementStart = groupStart + this$1.alignStart(elementSize[groupSizeField], group.groupSize);\n          var elementBox = new Box();\n          elementBox[groupAxis + 1] = groupElementStart;\n          elementBox[groupAxis + 2] = groupElementStart + elementSize[groupSizeField];\n          elementBox[elementAxis + 1] = elementStart;\n          elementBox[elementAxis + 2] = elementStart + elementSize[elementSizeField];\n          element.reflow(elementBox);\n          elementStart += elementSize[elementSizeField] + this$1.elementSpacing;\n        }\n\n        groupStart += group.groupSize + this$1.groupSpacing;\n      }\n\n      box[groupAxis + 1] = groupsStart;\n      box[groupAxis + 2] = groupsStart + groupsSize;\n      box[elementAxis + 2] = box[elementAxis + 1] + maxGroupElementsSize;\n    }\n  };\n\n  FloatElement.prototype.alignStart = function alignStart(size, maxSize) {\n    var start = 0;\n    var align = this.options.align;\n\n    if (align === RIGHT || align === BOTTOM) {\n      start = maxSize - size;\n    } else if (align === CENTER) {\n      start = (maxSize - size) / 2;\n    }\n\n    return start;\n  };\n\n  FloatElement.prototype.groupOptions = function groupOptions() {\n    var this$1 = this;\n    var ref = this;\n    var box = ref.box;\n    var children = ref.children;\n    var elementSizeField = ref.elementSizeField;\n    var groupSizeField = ref.groupSizeField;\n    var elementSpacing = ref.elementSpacing;\n    var groupSpacing = ref.groupSpacing;\n    var maxSize = round(box[elementSizeField]());\n    var childrenCount = children.length;\n    var groups = [];\n    var groupSize = 0;\n    var groupElementsSize = 0;\n    var groupsSize = 0;\n    var maxGroupElementsSize = 0;\n    var groupElements = [];\n\n    for (var idx = 0; idx < childrenCount; idx++) {\n      var element = children[idx];\n\n      if (!element.box) {\n        element.reflow(box);\n      }\n\n      var elementSize = this$1.elementSize(element);\n\n      if (this$1.options.wrap && round(groupElementsSize + elementSpacing + elementSize[elementSizeField]) > maxSize) {\n        groups.push({\n          groupElements: groupElements,\n          groupSize: groupSize,\n          groupElementsSize: groupElementsSize\n        });\n        maxGroupElementsSize = Math.max(maxGroupElementsSize, groupElementsSize);\n        groupsSize += groupSpacing + groupSize;\n        groupSize = 0;\n        groupElementsSize = 0;\n        groupElements = [];\n      }\n\n      groupSize = Math.max(groupSize, elementSize[groupSizeField]);\n\n      if (groupElementsSize > 0) {\n        groupElementsSize += elementSpacing;\n      }\n\n      groupElementsSize += elementSize[elementSizeField];\n      groupElements.push(element);\n    }\n\n    groups.push({\n      groupElements: groupElements,\n      groupSize: groupSize,\n      groupElementsSize: groupElementsSize\n    });\n    maxGroupElementsSize = Math.max(maxGroupElementsSize, groupElementsSize);\n    groupsSize += groupSize;\n    return {\n      groups: groups,\n      groupsSize: groupsSize,\n      maxGroupElementsSize: maxGroupElementsSize\n    };\n  };\n\n  FloatElement.prototype.elementSize = function elementSize(element) {\n    return {\n      width: element.box.width(),\n      height: element.box.height()\n    };\n  };\n\n  FloatElement.prototype.createVisual = function createVisual() {};\n\n  return FloatElement;\n}(ChartElement);\n\nsetDefaultOptions(FloatElement, {\n  vertical: true,\n  wrap: true,\n  vSpacing: 0,\n  spacing: 0\n});\nexport default FloatElement;","map":{"version":3,"sources":["/Users/lazybaccha/Documents/Honeywell/SBE/node_modules/@progress/kendo-charts/dist/es/core/float-element.js"],"names":["ChartElement","Box","X","Y","WIDTH","HEIGHT","RIGHT","BOTTOM","CENTER","round","setDefaultOptions","FloatElement","options","call","_initDirection","__proto__","prototype","Object","create","constructor","vertical","groupAxis","elementAxis","groupSizeField","elementSizeField","groupSpacing","spacing","elementSpacing","vSpacing","reflow","targetBox","box","clone","reflowChildren","this$1","ref","ref$1","groupOptions","groups","groupsSize","maxGroupElementsSize","groupsCount","length","groupsStart","alignStart","groupStart","groupIdx","group","groupElements","elementStart","groupElementsCount","idx","element","elementSize","groupElementStart","groupSize","elementBox","size","maxSize","start","align","children","childrenCount","groupElementsSize","wrap","push","Math","max","width","height","createVisual"],"mappings":"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","sourcesContent":["import ChartElement from './chart-element';\nimport Box from './box';\n\nimport { X, Y, WIDTH, HEIGHT, RIGHT, BOTTOM, CENTER } from '../common/constants';\nimport { round, setDefaultOptions } from '../common';\n\nvar FloatElement = (function (ChartElement) {\n    function FloatElement(options) {\n        ChartElement.call(this, options);\n        this._initDirection();\n    }\n\n    if ( ChartElement ) FloatElement.__proto__ = ChartElement;\n    FloatElement.prototype = Object.create( ChartElement && ChartElement.prototype );\n    FloatElement.prototype.constructor = FloatElement;\n\n    FloatElement.prototype._initDirection = function _initDirection () {\n        var options = this.options;\n        if (options.vertical) {\n            this.groupAxis = X;\n            this.elementAxis = Y;\n            this.groupSizeField = WIDTH;\n            this.elementSizeField = HEIGHT;\n            this.groupSpacing = options.spacing;\n            this.elementSpacing = options.vSpacing;\n        } else {\n            this.groupAxis = Y;\n            this.elementAxis = X;\n            this.groupSizeField = HEIGHT;\n            this.elementSizeField = WIDTH;\n            this.groupSpacing = options.vSpacing;\n            this.elementSpacing = options.spacing;\n        }\n    };\n\n    FloatElement.prototype.reflow = function reflow (targetBox) {\n        this.box = targetBox.clone();\n        this.reflowChildren();\n    };\n\n    FloatElement.prototype.reflowChildren = function reflowChildren () {\n        var this$1 = this;\n\n        var ref = this;\n        var box = ref.box;\n        var elementAxis = ref.elementAxis;\n        var groupAxis = ref.groupAxis;\n        var elementSizeField = ref.elementSizeField;\n        var groupSizeField = ref.groupSizeField;\n        var ref$1 = this.groupOptions();\n        var groups = ref$1.groups;\n        var groupsSize = ref$1.groupsSize;\n        var maxGroupElementsSize = ref$1.maxGroupElementsSize;\n        var groupsCount = groups.length;\n        var groupsStart = box[groupAxis + 1] + this.alignStart(groupsSize, box[groupSizeField]());\n\n        if (groupsCount) {\n            var groupStart = groupsStart;\n\n            for (var groupIdx = 0; groupIdx < groupsCount; groupIdx++) {\n                var group = groups[groupIdx];\n                var groupElements = group.groupElements;\n                var elementStart = box[elementAxis + 1];\n                var groupElementsCount = groupElements.length;\n\n                for (var idx = 0; idx < groupElementsCount; idx++) {\n                    var element = groupElements[idx];\n                    var elementSize = this$1.elementSize(element);\n                    var groupElementStart = groupStart + this$1.alignStart(elementSize[groupSizeField], group.groupSize);\n\n                    var elementBox = new Box();\n                    elementBox[groupAxis + 1] = groupElementStart;\n                    elementBox[groupAxis + 2] = groupElementStart + elementSize[groupSizeField];\n                    elementBox[elementAxis + 1] = elementStart;\n                    elementBox[elementAxis + 2] = elementStart + elementSize[elementSizeField];\n\n                    element.reflow(elementBox);\n\n                    elementStart += elementSize[elementSizeField] + this$1.elementSpacing;\n                }\n                groupStart += group.groupSize + this$1.groupSpacing;\n            }\n            box[groupAxis + 1] = groupsStart;\n            box[groupAxis + 2] = groupsStart + groupsSize;\n            box[elementAxis + 2] = box[elementAxis + 1] + maxGroupElementsSize;\n        }\n    };\n\n    FloatElement.prototype.alignStart = function alignStart (size, maxSize) {\n        var start = 0;\n        var align = this.options.align;\n        if (align === RIGHT || align === BOTTOM) {\n            start = maxSize - size;\n        } else if (align === CENTER) {\n            start = (maxSize - size) / 2;\n        }\n        return start;\n    };\n\n    FloatElement.prototype.groupOptions = function groupOptions () {\n        var this$1 = this;\n\n        var ref = this;\n        var box = ref.box;\n        var children = ref.children;\n        var elementSizeField = ref.elementSizeField;\n        var groupSizeField = ref.groupSizeField;\n        var elementSpacing = ref.elementSpacing;\n        var groupSpacing = ref.groupSpacing;\n        var maxSize = round(box[elementSizeField]());\n        var childrenCount = children.length;\n        var groups = [];\n\n        var groupSize = 0;\n        var groupElementsSize = 0;\n        var groupsSize = 0;\n        var maxGroupElementsSize = 0;\n        var groupElements = [];\n\n        for (var idx = 0; idx < childrenCount; idx++) {\n            var element = children[idx];\n            if (!element.box) {\n                element.reflow(box);\n            }\n\n            var elementSize = this$1.elementSize(element);\n            if (this$1.options.wrap && round(groupElementsSize + elementSpacing + elementSize[elementSizeField]) > maxSize) {\n                groups.push({\n                    groupElements: groupElements,\n                    groupSize: groupSize,\n                    groupElementsSize: groupElementsSize\n                });\n                maxGroupElementsSize = Math.max(maxGroupElementsSize, groupElementsSize);\n                groupsSize += groupSpacing + groupSize;\n                groupSize = 0;\n                groupElementsSize = 0;\n                groupElements = [];\n            }\n            groupSize = Math.max(groupSize, elementSize[groupSizeField]);\n            if (groupElementsSize > 0) {\n                groupElementsSize += elementSpacing;\n            }\n            groupElementsSize += elementSize[elementSizeField];\n            groupElements.push(element);\n        }\n\n        groups.push({\n            groupElements: groupElements,\n            groupSize: groupSize,\n            groupElementsSize: groupElementsSize\n        });\n        maxGroupElementsSize = Math.max(maxGroupElementsSize, groupElementsSize);\n        groupsSize += groupSize;\n\n        return {\n            groups: groups,\n            groupsSize: groupsSize,\n            maxGroupElementsSize: maxGroupElementsSize\n        };\n    };\n\n    FloatElement.prototype.elementSize = function elementSize (element) {\n        return {\n            width: element.box.width(),\n            height: element.box.height()\n        };\n    };\n\n    FloatElement.prototype.createVisual = function createVisual () {};\n\n    return FloatElement;\n}(ChartElement));\n\nsetDefaultOptions(FloatElement, {\n    vertical: true,\n    wrap: true,\n    vSpacing: 0,\n    spacing: 0\n});\n\nexport default FloatElement;"]},"metadata":{},"sourceType":"module"}