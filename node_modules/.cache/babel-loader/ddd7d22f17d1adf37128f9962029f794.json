{"ast":null,"code":"import getField from './utils/get-field';\nimport { VALUE } from '../common/constants';\nimport { Class, defined } from '../common';\n\nvar SeriesBinder = function (Class) {\n  function SeriesBinder() {\n    Class.call(this);\n    this._valueFields = {};\n    this._otherFields = {};\n    this._nullValue = {};\n    this._undefinedValue = {};\n  }\n\n  if (Class) SeriesBinder.__proto__ = Class;\n  SeriesBinder.prototype = Object.create(Class && Class.prototype);\n  SeriesBinder.prototype.constructor = SeriesBinder;\n\n  SeriesBinder.prototype.register = function register(seriesTypes, valueFields, otherFields) {\n    var this$1 = this;\n    if (valueFields === void 0) valueFields = [VALUE];\n    if (otherFields === void 0) otherFields = {};\n\n    for (var i = 0; i < seriesTypes.length; i++) {\n      var type = seriesTypes[i];\n      this$1._valueFields[type] = valueFields;\n      this$1._otherFields[type] = otherFields;\n      this$1._nullValue[type] = this$1._makeValue(valueFields, null);\n      this$1._undefinedValue[type] = this$1._makeValue(valueFields, undefined);\n    }\n  };\n\n  SeriesBinder.prototype.canonicalFields = function canonicalFields(series) {\n    return this.valueFields(series).concat(this.otherFields(series));\n  };\n\n  SeriesBinder.prototype.valueFields = function valueFields(series) {\n    return this._valueFields[series.type] || [VALUE];\n  };\n\n  SeriesBinder.prototype.otherFields = function otherFields(series) {\n    return this._otherFields[series.type] || [VALUE];\n  };\n\n  SeriesBinder.prototype.bindPoint = function bindPoint(series, pointIx, item) {\n    var data = series.data;\n    var pointData = defined(item) ? item : data[pointIx];\n    var result = {\n      valueFields: {\n        value: pointData\n      }\n    };\n    var valueFields = this.valueFields(series);\n    var otherFields = this._otherFields[series.type];\n    var fields, value;\n\n    if (pointData === null) {\n      value = this._nullValue[series.type];\n    } else if (!defined(pointData)) {\n      value = this._undefinedValue[series.type];\n    } else if (Array.isArray(pointData)) {\n      var fieldData = pointData.slice(valueFields.length);\n      value = this._bindFromArray(pointData, valueFields);\n      fields = this._bindFromArray(fieldData, otherFields);\n    } else if (typeof pointData === \"object\") {\n      var srcValueFields = this.sourceFields(series, valueFields);\n      var srcPointFields = this.sourceFields(series, otherFields);\n      value = this._bindFromObject(pointData, valueFields, srcValueFields);\n      fields = this._bindFromObject(pointData, otherFields, srcPointFields);\n    }\n\n    if (defined(value)) {\n      if (valueFields.length === 1) {\n        result.valueFields.value = value[valueFields[0]];\n      } else {\n        result.valueFields = value;\n      }\n    }\n\n    result.fields = fields || {};\n    return result;\n  };\n\n  SeriesBinder.prototype._makeValue = function _makeValue(fields, initialValue) {\n    var value = {};\n    var length = fields.length;\n\n    for (var i = 0; i < length; i++) {\n      var fieldName = fields[i];\n      value[fieldName] = initialValue;\n    }\n\n    return value;\n  };\n\n  SeriesBinder.prototype._bindFromArray = function _bindFromArray(array, fields) {\n    var value = {};\n\n    if (fields) {\n      var length = Math.min(fields.length, array.length);\n\n      for (var i = 0; i < length; i++) {\n        value[fields[i]] = array[i];\n      }\n    }\n\n    return value;\n  };\n\n  SeriesBinder.prototype._bindFromObject = function _bindFromObject(object, fields, srcFields) {\n    if (srcFields === void 0) srcFields = fields;\n    var value = {};\n\n    if (fields) {\n      var length = fields.length;\n\n      for (var i = 0; i < length; i++) {\n        var fieldName = fields[i];\n        var srcFieldName = srcFields[i];\n\n        if (srcFieldName !== null) {\n          value[fieldName] = getField(srcFieldName, object);\n        }\n      }\n    }\n\n    return value;\n  };\n\n  SeriesBinder.prototype.sourceFields = function sourceFields(series, canonicalFields) {\n    var sourceFields = [];\n\n    if (canonicalFields) {\n      var length = canonicalFields.length;\n\n      for (var i = 0; i < length; i++) {\n        var fieldName = canonicalFields[i];\n        var sourceFieldName = fieldName === VALUE ? \"field\" : fieldName + \"Field\";\n        sourceFields.push(series[sourceFieldName] !== null ? series[sourceFieldName] || fieldName : null);\n      }\n    }\n\n    return sourceFields;\n  };\n\n  return SeriesBinder;\n}(Class);\n\nSeriesBinder.current = new SeriesBinder();\nexport default SeriesBinder;","map":{"version":3,"sources":["/Users/lazybaccha/Documents/Honeywell/SBE/node_modules/@progress/kendo-charts/dist/es/chart/series-binder.js"],"names":["getField","VALUE","Class","defined","SeriesBinder","call","_valueFields","_otherFields","_nullValue","_undefinedValue","__proto__","prototype","Object","create","constructor","register","seriesTypes","valueFields","otherFields","this$1","i","length","type","_makeValue","undefined","canonicalFields","series","concat","bindPoint","pointIx","item","data","pointData","result","value","fields","Array","isArray","fieldData","slice","_bindFromArray","srcValueFields","sourceFields","srcPointFields","_bindFromObject","initialValue","fieldName","array","Math","min","object","srcFields","srcFieldName","sourceFieldName","push","current"],"mappings":"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","sourcesContent":["import getField from './utils/get-field';\nimport { VALUE } from '../common/constants';\nimport { Class, defined } from '../common';\n\nvar SeriesBinder = (function (Class) {\n    function SeriesBinder() {\n        Class.call(this);\n\n        this._valueFields = {};\n        this._otherFields = {};\n        this._nullValue = {};\n        this._undefinedValue = {};\n    }\n\n    if ( Class ) SeriesBinder.__proto__ = Class;\n    SeriesBinder.prototype = Object.create( Class && Class.prototype );\n    SeriesBinder.prototype.constructor = SeriesBinder;\n\n    SeriesBinder.prototype.register = function register (seriesTypes, valueFields, otherFields) {\n        var this$1 = this;\n        if ( valueFields === void 0 ) valueFields = [ VALUE ];\n        if ( otherFields === void 0 ) otherFields = {};\n\n\n        for (var i = 0; i < seriesTypes.length; i++) {\n            var type = seriesTypes[i];\n\n            this$1._valueFields[type] = valueFields;\n            this$1._otherFields[type] = otherFields;\n            this$1._nullValue[type] = this$1._makeValue(valueFields, null);\n            this$1._undefinedValue[type] = this$1._makeValue(valueFields, undefined);\n        }\n    };\n\n    SeriesBinder.prototype.canonicalFields = function canonicalFields (series) {\n        return this.valueFields(series).concat(this.otherFields(series));\n    };\n\n    SeriesBinder.prototype.valueFields = function valueFields (series) {\n        return this._valueFields[series.type] || [ VALUE ];\n    };\n\n    SeriesBinder.prototype.otherFields = function otherFields (series) {\n        return this._otherFields[series.type] || [ VALUE ];\n    };\n\n    SeriesBinder.prototype.bindPoint = function bindPoint (series, pointIx, item) {\n        var data = series.data;\n        var pointData = defined(item) ? item : data[pointIx];\n        var result = { valueFields: { value: pointData } };\n        var valueFields = this.valueFields(series);\n        var otherFields = this._otherFields[series.type];\n        var fields, value;\n\n        if (pointData === null) {\n            value = this._nullValue[series.type];\n        } else if (!defined(pointData)) {\n            value = this._undefinedValue[series.type];\n        } else if (Array.isArray(pointData)) {\n            var fieldData = pointData.slice(valueFields.length);\n            value = this._bindFromArray(pointData, valueFields);\n            fields = this._bindFromArray(fieldData, otherFields);\n        } else if (typeof pointData === \"object\") {\n            var srcValueFields = this.sourceFields(series, valueFields);\n            var srcPointFields = this.sourceFields(series, otherFields);\n\n            value = this._bindFromObject(pointData, valueFields, srcValueFields);\n            fields = this._bindFromObject(pointData, otherFields, srcPointFields);\n        }\n\n        if (defined(value)) {\n            if (valueFields.length === 1) {\n                result.valueFields.value = value[valueFields[0]];\n            } else {\n                result.valueFields = value;\n            }\n        }\n\n        result.fields = fields || {};\n\n        return result;\n    };\n\n    SeriesBinder.prototype._makeValue = function _makeValue (fields, initialValue) {\n        var value = {};\n        var length = fields.length;\n\n        for (var i = 0; i < length; i++) {\n            var fieldName = fields[i];\n            value[fieldName] = initialValue;\n        }\n\n        return value;\n    };\n\n    SeriesBinder.prototype._bindFromArray = function _bindFromArray (array, fields) {\n        var value = {};\n\n        if (fields) {\n            var length = Math.min(fields.length, array.length);\n\n            for (var i = 0; i < length; i++) {\n                value[fields[i]] = array[i];\n            }\n        }\n\n        return value;\n    };\n\n    SeriesBinder.prototype._bindFromObject = function _bindFromObject (object, fields, srcFields) {\n        if ( srcFields === void 0 ) srcFields = fields;\n\n        var value = {};\n\n        if (fields) {\n            var length = fields.length;\n\n            for (var i = 0; i < length; i++) {\n                var fieldName = fields[i];\n                var srcFieldName = srcFields[i];\n                if (srcFieldName !== null) {\n                    value[fieldName] = getField(srcFieldName, object);\n                }\n            }\n        }\n\n        return value;\n    };\n\n    SeriesBinder.prototype.sourceFields = function sourceFields (series, canonicalFields) {\n        var sourceFields = [];\n\n        if (canonicalFields) {\n            var length = canonicalFields.length;\n\n            for (var i = 0; i < length; i++) {\n                var fieldName = canonicalFields[i];\n                var sourceFieldName = fieldName === VALUE ? \"field\" : fieldName + \"Field\";\n\n                sourceFields.push(series[sourceFieldName] !== null ? (series[sourceFieldName] || fieldName) : null);\n            }\n        }\n\n        return sourceFields;\n    };\n\n    return SeriesBinder;\n}(Class));\n\nSeriesBinder.current = new SeriesBinder();\n\nexport default SeriesBinder;"]},"metadata":{},"sourceType":"module"}