{"ast":null,"code":"import { drawing as draw } from '@progress/kendo-drawing';\nimport ChartElement from './chart-element';\nimport Box from './box';\nimport { BLACK, LEFT, TOP, X, Y } from '../common/constants';\nimport { getSpacing, setDefaultOptions, valueOrDefault } from '../common';\n\nvar BoxElement = function (ChartElement) {\n  function BoxElement(options) {\n    ChartElement.call(this, options);\n    this.options.margin = getSpacing(this.options.margin);\n    this.options.padding = getSpacing(this.options.padding);\n  }\n\n  if (ChartElement) BoxElement.__proto__ = ChartElement;\n  BoxElement.prototype = Object.create(ChartElement && ChartElement.prototype);\n  BoxElement.prototype.constructor = BoxElement;\n\n  BoxElement.prototype.reflow = function reflow(targetBox) {\n    var this$1 = this;\n    var options = this.options;\n    var width = options.width;\n    var height = options.height;\n    var shrinkToFit = options.shrinkToFit;\n    var hasSetSize = width && height;\n    var margin = options.margin;\n    var padding = options.padding;\n    var borderWidth = options.border.width;\n    var box;\n\n    var reflowPaddingBox = function () {\n      this$1.align(targetBox, X, options.align);\n      this$1.align(targetBox, Y, options.vAlign);\n      this$1.paddingBox = box.clone().unpad(margin).unpad(borderWidth);\n    };\n\n    var contentBox = targetBox.clone();\n\n    if (hasSetSize) {\n      contentBox.x2 = contentBox.x1 + width;\n      contentBox.y2 = contentBox.y1 + height;\n    }\n\n    if (shrinkToFit) {\n      contentBox.unpad(margin).unpad(borderWidth).unpad(padding);\n    }\n\n    ChartElement.prototype.reflow.call(this, contentBox);\n\n    if (hasSetSize) {\n      box = this.box = new Box(0, 0, width, height);\n    } else {\n      box = this.box;\n    }\n\n    if (shrinkToFit && hasSetSize) {\n      reflowPaddingBox();\n      contentBox = this.contentBox = this.paddingBox.clone().unpad(padding);\n    } else {\n      contentBox = this.contentBox = box.clone();\n      box.pad(padding).pad(borderWidth).pad(margin);\n      reflowPaddingBox();\n    }\n\n    this.translateChildren(box.x1 - contentBox.x1 + margin.left + borderWidth + padding.left, box.y1 - contentBox.y1 + margin.top + borderWidth + padding.top);\n    var children = this.children;\n\n    for (var i = 0; i < children.length; i++) {\n      var item = children[i];\n      item.reflow(item.box);\n    }\n  };\n\n  BoxElement.prototype.align = function align(targetBox, axis, alignment) {\n    this.box.align(targetBox, axis, alignment);\n  };\n\n  BoxElement.prototype.hasBox = function hasBox() {\n    var options = this.options;\n    return options.border.width || options.background;\n  };\n\n  BoxElement.prototype.createVisual = function createVisual() {\n    ChartElement.prototype.createVisual.call(this);\n    var options = this.options;\n\n    if (options.visible && this.hasBox()) {\n      this.visual.append(draw.Path.fromRect(this.paddingBox.toRect(), this.visualStyle()));\n    }\n  };\n\n  BoxElement.prototype.visualStyle = function visualStyle() {\n    var options = this.options;\n    var border = options.border || {};\n    return {\n      stroke: {\n        width: border.width,\n        color: border.color,\n        opacity: valueOrDefault(border.opacity, options.opacity),\n        dashType: border.dashType\n      },\n      fill: {\n        color: options.background,\n        opacity: options.opacity\n      },\n      cursor: options.cursor\n    };\n  };\n\n  return BoxElement;\n}(ChartElement);\n\nsetDefaultOptions(BoxElement, {\n  align: LEFT,\n  vAlign: TOP,\n  margin: {},\n  padding: {},\n  border: {\n    color: BLACK,\n    width: 0\n  },\n  background: \"\",\n  shrinkToFit: false,\n  width: 0,\n  height: 0,\n  visible: true\n});\nexport default BoxElement;","map":{"version":3,"sources":["/Users/lazybaccha/Documents/Honeywell/SBE/node_modules/@progress/kendo-charts/dist/es/core/box-element.js"],"names":["drawing","draw","ChartElement","Box","BLACK","LEFT","TOP","X","Y","getSpacing","setDefaultOptions","valueOrDefault","BoxElement","options","call","margin","padding","__proto__","prototype","Object","create","constructor","reflow","targetBox","this$1","width","height","shrinkToFit","hasSetSize","borderWidth","border","box","reflowPaddingBox","align","vAlign","paddingBox","clone","unpad","contentBox","x2","x1","y2","y1","pad","translateChildren","left","top","children","i","length","item","axis","alignment","hasBox","background","createVisual","visible","visual","append","Path","fromRect","toRect","visualStyle","stroke","color","opacity","dashType","fill","cursor"],"mappings":"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","sourcesContent":["import { drawing as draw } from '@progress/kendo-drawing';\n\nimport ChartElement from './chart-element';\nimport Box from './box';\n\nimport { BLACK, LEFT, TOP, X, Y } from '../common/constants';\nimport { getSpacing, setDefaultOptions, valueOrDefault } from '../common';\n\nvar BoxElement = (function (ChartElement) {\n    function BoxElement(options) {\n        ChartElement.call(this, options);\n\n        this.options.margin = getSpacing(this.options.margin);\n        this.options.padding = getSpacing(this.options.padding);\n    }\n\n    if ( ChartElement ) BoxElement.__proto__ = ChartElement;\n    BoxElement.prototype = Object.create( ChartElement && ChartElement.prototype );\n    BoxElement.prototype.constructor = BoxElement;\n\n    BoxElement.prototype.reflow = function reflow (targetBox) {\n        var this$1 = this;\n\n        var options = this.options;\n        var width = options.width;\n        var height = options.height;\n        var shrinkToFit = options.shrinkToFit;\n        var hasSetSize = width && height;\n        var margin = options.margin;\n        var padding = options.padding;\n        var borderWidth = options.border.width;\n        var box;\n\n        var reflowPaddingBox = function () {\n            this$1.align(targetBox, X, options.align);\n            this$1.align(targetBox, Y, options.vAlign);\n            this$1.paddingBox = box.clone().unpad(margin).unpad(borderWidth);\n        };\n\n        var contentBox = targetBox.clone();\n        if (hasSetSize) {\n            contentBox.x2 = contentBox.x1 + width;\n            contentBox.y2 = contentBox.y1 + height;\n        }\n\n        if (shrinkToFit) {\n            contentBox.unpad(margin).unpad(borderWidth).unpad(padding);\n        }\n\n        ChartElement.prototype.reflow.call(this, contentBox);\n\n        if (hasSetSize) {\n            box = this.box = new Box(0, 0, width, height);\n        } else {\n            box = this.box;\n        }\n\n        if (shrinkToFit && hasSetSize) {\n            reflowPaddingBox();\n            contentBox = this.contentBox = this.paddingBox.clone().unpad(padding);\n        } else {\n            contentBox = this.contentBox = box.clone();\n            box.pad(padding).pad(borderWidth).pad(margin);\n            reflowPaddingBox();\n        }\n\n        this.translateChildren(\n            box.x1 - contentBox.x1 + margin.left + borderWidth + padding.left,\n            box.y1 - contentBox.y1 + margin.top + borderWidth + padding.top\n        );\n\n        var children = this.children;\n        for (var i = 0; i < children.length; i++) {\n            var item = children[i];\n            item.reflow(item.box);\n        }\n    };\n\n    BoxElement.prototype.align = function align (targetBox, axis, alignment) {\n        this.box.align(targetBox, axis, alignment);\n    };\n\n    BoxElement.prototype.hasBox = function hasBox () {\n        var options = this.options;\n        return options.border.width || options.background;\n    };\n\n    BoxElement.prototype.createVisual = function createVisual () {\n        ChartElement.prototype.createVisual.call(this);\n\n        var options = this.options;\n        if (options.visible && this.hasBox()) {\n            this.visual.append(draw.Path.fromRect(\n                this.paddingBox.toRect(),\n                this.visualStyle()\n            ));\n        }\n    };\n\n    BoxElement.prototype.visualStyle = function visualStyle () {\n        var options = this.options;\n        var border = options.border || {};\n\n        return {\n            stroke: {\n                width: border.width,\n                color: border.color,\n                opacity: valueOrDefault(border.opacity, options.opacity),\n                dashType: border.dashType\n            },\n            fill: {\n                color: options.background,\n                opacity: options.opacity\n            },\n            cursor: options.cursor\n        };\n    };\n\n    return BoxElement;\n}(ChartElement));\n\nsetDefaultOptions(BoxElement, {\n    align: LEFT,\n    vAlign: TOP,\n    margin: {},\n    padding: {},\n    border: {\n        color: BLACK,\n        width: 0\n    },\n    background: \"\",\n    shrinkToFit: false,\n    width: 0,\n    height: 0,\n    visible: true\n});\n\nexport default BoxElement;"]},"metadata":{},"sourceType":"module"}