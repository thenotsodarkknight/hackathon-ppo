{"ast":null,"code":"import { geometry, drawing } from '@progress/kendo-drawing';\nimport { interpolateValue, setDefaultOptions } from '../../common';\nimport { ANGULAR_SPEED, LINEAR, RADIAL_POINTER } from '../constants';\n\nvar RadialPointerAnimation = function (superclass) {\n  function RadialPointerAnimation(element, options) {\n    superclass.call(this, element, options);\n    var animationOptions = this.options;\n    animationOptions.duration = Math.max(Math.abs(animationOptions.newAngle - animationOptions.oldAngle) / animationOptions.duration * 1000, 1);\n  }\n\n  if (superclass) RadialPointerAnimation.__proto__ = superclass;\n  RadialPointerAnimation.prototype = Object.create(superclass && superclass.prototype);\n  RadialPointerAnimation.prototype.constructor = RadialPointerAnimation;\n\n  RadialPointerAnimation.prototype.step = function step(pos) {\n    var options = this.options;\n    var angle = interpolateValue(options.oldAngle, options.newAngle, pos);\n    this.element.transform(geometry.transform().rotate(angle, options.center));\n  };\n\n  return RadialPointerAnimation;\n}(drawing.Animation);\n\nsetDefaultOptions(RadialPointerAnimation, {\n  easing: LINEAR,\n  duration: ANGULAR_SPEED\n});\ndrawing.AnimationFactory.current.register(RADIAL_POINTER, RadialPointerAnimation);\nexport default RadialPointerAnimation;","map":{"version":3,"sources":["/Users/lazybaccha/Documents/Honeywell/SBE/node_modules/@progress/kendo-charts/dist/es/gauges/radial/radial-pointer-animation.js"],"names":["geometry","drawing","interpolateValue","setDefaultOptions","ANGULAR_SPEED","LINEAR","RADIAL_POINTER","RadialPointerAnimation","superclass","element","options","call","animationOptions","duration","Math","max","abs","newAngle","oldAngle","__proto__","prototype","Object","create","constructor","step","pos","angle","transform","rotate","center","Animation","easing","AnimationFactory","current","register"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,OAAnB,QAAkC,yBAAlC;AACA,SAASC,gBAAT,EAA2BC,iBAA3B,QAAoD,cAApD;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,cAAhC,QAAsD,cAAtD;;AAEA,IAAIC,sBAAsB,GAAI,UAAUC,UAAV,EAAsB;AAChD,WAASD,sBAAT,CAAgCE,OAAhC,EAAyCC,OAAzC,EAAkD;AAC9CF,IAAAA,UAAU,CAACG,IAAX,CAAgB,IAAhB,EAAsBF,OAAtB,EAA+BC,OAA/B;AAEA,QAAIE,gBAAgB,GAAG,KAAKF,OAA5B;AAEAE,IAAAA,gBAAgB,CAACC,QAAjB,GAA4BC,IAAI,CAACC,GAAL,CAAUD,IAAI,CAACE,GAAL,CAASJ,gBAAgB,CAACK,QAAjB,GAA4BL,gBAAgB,CAACM,QAAtD,IAAkEN,gBAAgB,CAACC,QAApF,GAAgG,IAAzG,EAA+G,CAA/G,CAA5B;AACH;;AAED,MAAKL,UAAL,EAAkBD,sBAAsB,CAACY,SAAvB,GAAmCX,UAAnC;AAClBD,EAAAA,sBAAsB,CAACa,SAAvB,GAAmCC,MAAM,CAACC,MAAP,CAAed,UAAU,IAAIA,UAAU,CAACY,SAAxC,CAAnC;AACAb,EAAAA,sBAAsB,CAACa,SAAvB,CAAiCG,WAAjC,GAA+ChB,sBAA/C;;AAEAA,EAAAA,sBAAsB,CAACa,SAAvB,CAAiCI,IAAjC,GAAwC,SAASA,IAAT,CAAeC,GAAf,EAAoB;AACxD,QAAIf,OAAO,GAAG,KAAKA,OAAnB;AACA,QAAIgB,KAAK,GAAGxB,gBAAgB,CAACQ,OAAO,CAACQ,QAAT,EAAmBR,OAAO,CAACO,QAA3B,EAAqCQ,GAArC,CAA5B;AAEA,SAAKhB,OAAL,CAAakB,SAAb,CAAuB3B,QAAQ,CAAC2B,SAAT,GAAqBC,MAArB,CAA4BF,KAA5B,EAAmChB,OAAO,CAACmB,MAA3C,CAAvB;AACH,GALD;;AAOA,SAAOtB,sBAAP;AACH,CArB6B,CAqB5BN,OAAO,CAAC6B,SArBoB,CAA9B;;AAuBA3B,iBAAiB,CAACI,sBAAD,EAAyB;AACtCwB,EAAAA,MAAM,EAAE1B,MAD8B;AAEtCQ,EAAAA,QAAQ,EAAET;AAF4B,CAAzB,CAAjB;AAKAH,OAAO,CAAC+B,gBAAR,CAAyBC,OAAzB,CAAiCC,QAAjC,CAA0C5B,cAA1C,EAA0DC,sBAA1D;AAEA,eAAeA,sBAAf","sourcesContent":["import { geometry, drawing } from '@progress/kendo-drawing';\nimport { interpolateValue, setDefaultOptions } from '../../common';\nimport { ANGULAR_SPEED, LINEAR, RADIAL_POINTER } from '../constants';\n\nvar RadialPointerAnimation = (function (superclass) {\n    function RadialPointerAnimation(element, options) {\n        superclass.call(this, element, options);\n\n        var animationOptions = this.options;\n\n        animationOptions.duration = Math.max((Math.abs(animationOptions.newAngle - animationOptions.oldAngle) / animationOptions.duration) * 1000, 1);\n    }\n\n    if ( superclass ) RadialPointerAnimation.__proto__ = superclass;\n    RadialPointerAnimation.prototype = Object.create( superclass && superclass.prototype );\n    RadialPointerAnimation.prototype.constructor = RadialPointerAnimation;\n\n    RadialPointerAnimation.prototype.step = function step (pos) {\n        var options = this.options;\n        var angle = interpolateValue(options.oldAngle, options.newAngle, pos);\n\n        this.element.transform(geometry.transform().rotate(angle, options.center));\n    };\n\n    return RadialPointerAnimation;\n}(drawing.Animation));\n\nsetDefaultOptions(RadialPointerAnimation, {\n    easing: LINEAR,\n    duration: ANGULAR_SPEED\n});\n\ndrawing.AnimationFactory.current.register(RADIAL_POINTER, RadialPointerAnimation);\n\nexport default RadialPointerAnimation;"]},"metadata":{},"sourceType":"module"}