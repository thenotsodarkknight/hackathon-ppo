{"ast":null,"code":"import Aggregates from './aggregates';\nimport { Class, defined, inArray, isArray, isFunction, isNumber, isObject } from '../../common';\n\nvar SeriesAggregator = function (Class) {\n  function SeriesAggregator(series, binder, defaultAggregates) {\n    Class.call(this);\n    var canonicalFields = binder.canonicalFields(series);\n    var valueFields = binder.valueFields(series);\n    var sourceFields = binder.sourceFields(series, canonicalFields);\n    var seriesFields = this._seriesFields = [];\n    var defaults = defaultAggregates.query(series.type);\n    var rootAggregate = series.aggregate || defaults;\n    this._series = series;\n    this._binder = binder;\n\n    for (var i = 0; i < canonicalFields.length; i++) {\n      var field = canonicalFields[i];\n      var fieldAggregate = void 0;\n\n      if (isObject(rootAggregate)) {\n        fieldAggregate = rootAggregate[field];\n      } else if (i === 0 || inArray(field, valueFields)) {\n        fieldAggregate = rootAggregate;\n      } else {\n        break;\n      }\n\n      if (fieldAggregate) {\n        seriesFields.push({\n          canonicalName: field,\n          name: sourceFields[i],\n          transform: isFunction(fieldAggregate) ? fieldAggregate : Aggregates[fieldAggregate]\n        });\n      }\n    }\n  }\n\n  if (Class) SeriesAggregator.__proto__ = Class;\n  SeriesAggregator.prototype = Object.create(Class && Class.prototype);\n  SeriesAggregator.prototype.constructor = SeriesAggregator;\n\n  SeriesAggregator.prototype.aggregatePoints = function aggregatePoints(srcPoints, group) {\n    var this$1 = this;\n    var ref = this;\n    var series = ref._series;\n    var seriesFields = ref._seriesFields;\n\n    var data = this._bindPoints(srcPoints || []);\n\n    var firstDataItem = data.dataItems[0];\n    var result = {};\n\n    if (firstDataItem && !isNumber(firstDataItem) && !isArray(firstDataItem)) {\n      var fn = function fn() {};\n\n      fn.prototype = firstDataItem;\n      result = new fn();\n    }\n\n    for (var i = 0; i < seriesFields.length; i++) {\n      var field = seriesFields[i];\n\n      var srcValues = this$1._bindField(data.values, field.canonicalName);\n\n      var value = field.transform(srcValues, series, data.dataItems, group);\n\n      if (value !== null && isObject(value) && !defined(value.length) && !(value instanceof Date)) {\n        result = value;\n        break;\n      } else {\n        if (defined(value)) {\n          setValue(field.name, result, value);\n        }\n      }\n    }\n\n    return result;\n  };\n\n  SeriesAggregator.prototype._bindPoints = function _bindPoints(points) {\n    var ref = this;\n    var binder = ref._binder;\n    var series = ref._series;\n    var values = [];\n    var dataItems = [];\n\n    for (var i = 0; i < points.length; i++) {\n      var pointIx = points[i];\n      values.push(binder.bindPoint(series, pointIx));\n      dataItems.push(series.data[pointIx]);\n    }\n\n    return {\n      values: values,\n      dataItems: dataItems\n    };\n  };\n\n  SeriesAggregator.prototype._bindField = function _bindField(data, field) {\n    var values = [];\n    var count = data.length;\n\n    for (var i = 0; i < count; i++) {\n      var item = data[i];\n      var valueFields = item.valueFields;\n      var value = void 0;\n\n      if (defined(valueFields[field])) {\n        value = valueFields[field];\n      } else {\n        value = item.fields[field];\n      }\n\n      values.push(value);\n    }\n\n    return values;\n  };\n\n  return SeriesAggregator;\n}(Class);\n\nfunction setValue(fieldName, target, value) {\n  var parentObj = target;\n  var field = fieldName;\n\n  if (fieldName.indexOf(\".\") > -1) {\n    var parts = fieldName.split(\".\");\n\n    while (parts.length > 1) {\n      field = parts.shift();\n\n      if (!defined(parentObj[field])) {\n        parentObj[field] = {};\n      }\n\n      parentObj = parentObj[field];\n    }\n\n    field = parts.shift();\n  }\n\n  parentObj[field] = value;\n}\n\nexport default SeriesAggregator;","map":{"version":3,"sources":["/Users/lazybaccha/Documents/Honeywell/SBE/node_modules/@progress/kendo-charts/dist/es/chart/aggregates/series-aggregator.js"],"names":["Aggregates","Class","defined","inArray","isArray","isFunction","isNumber","isObject","SeriesAggregator","series","binder","defaultAggregates","call","canonicalFields","valueFields","sourceFields","seriesFields","_seriesFields","defaults","query","type","rootAggregate","aggregate","_series","_binder","i","length","field","fieldAggregate","push","canonicalName","name","transform","__proto__","prototype","Object","create","constructor","aggregatePoints","srcPoints","group","this$1","ref","data","_bindPoints","firstDataItem","dataItems","result","fn","srcValues","_bindField","values","value","Date","setValue","points","pointIx","bindPoint","count","item","fields","fieldName","target","parentObj","indexOf","parts","split","shift"],"mappings":"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","sourcesContent":["import Aggregates from './aggregates';\n\nimport { Class, defined, inArray, isArray, isFunction, isNumber, isObject } from '../../common';\n\nvar SeriesAggregator = (function (Class) {\n    function SeriesAggregator(series, binder, defaultAggregates) {\n        Class.call(this);\n\n        var canonicalFields = binder.canonicalFields(series);\n        var valueFields = binder.valueFields(series);\n        var sourceFields = binder.sourceFields(series, canonicalFields);\n        var seriesFields = this._seriesFields = [];\n        var defaults = defaultAggregates.query(series.type);\n        var rootAggregate = series.aggregate || defaults;\n\n        this._series = series;\n        this._binder = binder;\n\n        for (var i = 0; i < canonicalFields.length; i++) {\n            var field = canonicalFields[i];\n            var fieldAggregate = (void 0);\n\n            if (isObject(rootAggregate)) {\n                fieldAggregate = rootAggregate[field];\n            } else if (i === 0 || inArray(field, valueFields)) {\n                fieldAggregate = rootAggregate;\n            } else {\n                break;\n            }\n\n            if (fieldAggregate) {\n                seriesFields.push({\n                    canonicalName: field,\n                    name: sourceFields[i],\n                    transform: isFunction(fieldAggregate) ? fieldAggregate : Aggregates[fieldAggregate]\n                });\n            }\n        }\n    }\n\n    if ( Class ) SeriesAggregator.__proto__ = Class;\n    SeriesAggregator.prototype = Object.create( Class && Class.prototype );\n    SeriesAggregator.prototype.constructor = SeriesAggregator;\n\n    SeriesAggregator.prototype.aggregatePoints = function aggregatePoints (srcPoints, group) {\n        var this$1 = this;\n\n        var ref = this;\n        var series = ref._series;\n        var seriesFields = ref._seriesFields;\n        var data = this._bindPoints(srcPoints || []);\n        var firstDataItem = data.dataItems[0];\n        var result = {};\n\n        if (firstDataItem && !isNumber(firstDataItem) && !isArray(firstDataItem)) {\n            var fn = function() {};\n            fn.prototype = firstDataItem;\n            result = new fn();\n        }\n\n        for (var i = 0; i < seriesFields.length; i++) {\n            var field = seriesFields[i];\n            var srcValues = this$1._bindField(data.values, field.canonicalName);\n            var value = field.transform(srcValues, series, data.dataItems, group);\n\n            if (value !== null && isObject(value) && !defined(value.length) && !(value instanceof Date)) {\n                result = value;\n                break;\n            } else {\n                if (defined(value)) {\n                    setValue(field.name, result, value);\n                }\n            }\n        }\n\n        return result;\n    };\n\n    SeriesAggregator.prototype._bindPoints = function _bindPoints (points) {\n        var ref = this;\n        var binder = ref._binder;\n        var series = ref._series;\n        var values = [];\n        var dataItems = [];\n\n        for (var i = 0; i < points.length; i++) {\n            var pointIx = points[i];\n\n            values.push(binder.bindPoint(series, pointIx));\n            dataItems.push(series.data[pointIx]);\n        }\n\n        return {\n            values: values,\n            dataItems: dataItems\n        };\n    };\n\n    SeriesAggregator.prototype._bindField = function _bindField (data, field) {\n        var values = [];\n        var count = data.length;\n\n        for (var i = 0; i < count; i++) {\n            var item = data[i];\n            var valueFields = item.valueFields;\n            var value = (void 0);\n\n            if (defined(valueFields[field])) {\n                value = valueFields[field];\n            } else {\n                value = item.fields[field];\n            }\n\n            values.push(value);\n        }\n\n        return values;\n    };\n\n    return SeriesAggregator;\n}(Class));\n\nfunction setValue(fieldName, target, value) {\n    var parentObj = target;\n    var field = fieldName;\n\n    if (fieldName.indexOf(\".\") > -1) {\n        var parts = fieldName.split(\".\");\n\n        while (parts.length > 1) {\n            field = parts.shift();\n            if (!defined(parentObj[field])) {\n                parentObj[field] = {};\n            }\n            parentObj = parentObj[field];\n        }\n        field = parts.shift();\n    }\n\n    parentObj[field] = value;\n}\n\nexport default SeriesAggregator;"]},"metadata":{},"sourceType":"module"}