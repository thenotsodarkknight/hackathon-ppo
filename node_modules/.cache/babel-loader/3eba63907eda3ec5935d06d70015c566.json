{"ast":null,"code":"import { geometry as geo, drawing } from '@progress/kendo-drawing';\nimport { setDefaultOptions, deepExtend, round, isArray } from '../../common';\nimport { COORD_PRECISION } from '../../common/constants';\nimport Gauge from '../gauge';\nimport RadialScale from './radial-scale';\nimport RadialPointer from './radial-pointer';\nvar Group = drawing.Group;\n\nvar RadialGauge = function (Gauge) {\n  function RadialGauge() {\n    Gauge.apply(this, arguments);\n  }\n\n  if (Gauge) RadialGauge.__proto__ = Gauge;\n  RadialGauge.prototype = Object.create(Gauge && Gauge.prototype);\n  RadialGauge.prototype.constructor = RadialGauge;\n\n  RadialGauge.prototype.reflow = function reflow(bbox) {\n    var this$1 = this;\n    var pointers = this.pointers;\n    this.scale.reflow(bbox);\n    this._initialPlotArea = this.scale.bbox;\n\n    for (var i = 0; i < pointers.length; i++) {\n      pointers[i].reflow(this$1.scale.arc);\n      this$1._initialPlotArea = geo.Rect.union(this$1._initialPlotArea, pointers[i].bbox);\n    }\n\n    this.fitScale(bbox);\n    this.alignScale(bbox);\n\n    this._buildVisual(this.gaugeArea, pointers, this.scale);\n\n    this._draw();\n  };\n\n  RadialGauge.prototype._buildVisual = function _buildVisual(gaugeArea, pointers, scale) {\n    var visuals = this._visuals = new Group();\n    visuals.append(gaugeArea);\n    visuals.append(scale.ticks);\n    visuals.append(scale.ranges);\n\n    this._buildPointers(pointers);\n\n    visuals.append(scale.labelElements);\n  };\n\n  RadialGauge.prototype._buildPointers = function _buildPointers(pointers) {\n    var this$1 = this;\n\n    for (var i = 0; i < pointers.length; i++) {\n      var current = pointers[i];\n      current.render();\n\n      this$1._visuals.append(current.elements);\n\n      current.value(current.options.value);\n    }\n  };\n\n  RadialGauge.prototype.fitScale = function fitScale(bbox) {\n    var this$1 = this;\n    var arc = this.scale.arc;\n    var plotAreaBox = this._initialPlotArea;\n    var step = Math.abs(this.getDiff(plotAreaBox, bbox));\n    var min = round(step, COORD_PRECISION);\n    var max = round(-step, COORD_PRECISION);\n    var minDiff, midDiff, maxDiff, mid, oldDiff;\n    var staleFlag = 0;\n    var i = 0;\n\n    while (i++ < 100) {\n      staleFlag = oldDiff === maxDiff ? staleFlag + 1 : 0;\n\n      if (staleFlag > 5) {\n        break;\n      }\n\n      if (min !== mid) {\n        minDiff = this$1.getPlotBox(min, bbox, arc);\n\n        if (0 <= minDiff && minDiff <= 2) {\n          break;\n        }\n      }\n\n      if (max !== mid) {\n        maxDiff = this$1.getPlotBox(max, bbox, arc);\n\n        if (0 <= maxDiff && maxDiff <= 2) {\n          break;\n        }\n      }\n\n      if (minDiff > 0 && maxDiff > 0) {\n        mid = min * 2;\n      } else if (minDiff < 0 && maxDiff < 0) {\n        mid = max * 2;\n      } else {\n        mid = round((min + max) / 2 || 1, COORD_PRECISION);\n      }\n\n      midDiff = this$1.getPlotBox(mid, bbox, arc);\n\n      if (0 <= midDiff && midDiff <= 2) {\n        break;\n      }\n\n      oldDiff = maxDiff;\n\n      if (midDiff > 0) {\n        max = mid;\n        maxDiff = midDiff;\n      } else {\n        min = mid;\n        minDiff = midDiff;\n      }\n    }\n  };\n\n  RadialGauge.prototype.getPlotBox = function getPlotBox(step, bbox, arc) {\n    var this$1 = this;\n    var scale = this.scale;\n    var pointers = this.pointers;\n    var radius = arc.getRadiusX();\n    var scaleArc = arc.clone();\n    scaleArc.setRadiusX(radius + step).setRadiusY(radius + step);\n    scale.arc = scaleArc;\n    scale.reflow(bbox);\n    this.plotBbox = scale.bbox;\n\n    for (var i = 0; i < pointers.length; i++) {\n      pointers[i].reflow(scaleArc);\n      this$1.plotBbox = geo.Rect.union(this$1.plotBbox, pointers[i].bbox);\n    }\n\n    return this.getDiff(this.plotBbox, bbox);\n  };\n\n  RadialGauge.prototype.getDiff = function getDiff(plotBox, box) {\n    return Math.min(box.width() - plotBox.width(), box.height() - plotBox.height());\n  };\n\n  RadialGauge.prototype.alignScale = function alignScale(bbox) {\n    var this$1 = this;\n    var plotBoxCenter = this.plotBbox.center();\n    var boxCenter = bbox.center();\n    var paddingX = plotBoxCenter.x - boxCenter.x;\n    var paddingY = plotBoxCenter.y - boxCenter.y;\n    var ref = this;\n    var scale = ref.scale;\n    var pointers = ref.pointers;\n    scale.arc.center.x -= paddingX;\n    scale.arc.center.y -= paddingY;\n    scale.reflow(bbox);\n\n    for (var i = 0; i < pointers.length; i++) {\n      pointers[i].reflow(scale.arc);\n      this$1.plotBbox = geo.Rect.union(scale.bbox, pointers[i].bbox);\n    }\n  };\n\n  RadialGauge.prototype._createModel = function _createModel() {\n    var this$1 = this;\n    var options = this.options;\n    var pointers = options.pointer;\n    var scale = this.scale = new RadialScale(options.scale, this.contextService);\n    this.pointers = [];\n    var pointersArr = isArray(pointers) ? pointers : [pointers];\n\n    for (var i = 0; i < pointersArr.length; i++) {\n      var current = new RadialPointer(scale, deepExtend({}, pointersArr[i], {\n        animation: {\n          transitions: options.transitions\n        }\n      }));\n      this$1.pointers.push(current);\n    }\n  };\n\n  return RadialGauge;\n}(Gauge);\n\nsetDefaultOptions(RadialGauge, {\n  transitions: true,\n  gaugeArea: {\n    background: \"\"\n  }\n});\nexport default RadialGauge;","map":{"version":3,"sources":["/Users/lazybaccha/Documents/Honeywell/SBE/node_modules/@progress/kendo-charts/dist/es/gauges/radial/radial-gauge.js"],"names":["geometry","geo","drawing","setDefaultOptions","deepExtend","round","isArray","COORD_PRECISION","Gauge","RadialScale","RadialPointer","Group","RadialGauge","apply","arguments","__proto__","prototype","Object","create","constructor","reflow","bbox","this$1","pointers","scale","_initialPlotArea","i","length","arc","Rect","union","fitScale","alignScale","_buildVisual","gaugeArea","_draw","visuals","_visuals","append","ticks","ranges","_buildPointers","labelElements","current","render","elements","value","options","plotAreaBox","step","Math","abs","getDiff","min","max","minDiff","midDiff","maxDiff","mid","oldDiff","staleFlag","getPlotBox","radius","getRadiusX","scaleArc","clone","setRadiusX","setRadiusY","plotBbox","plotBox","box","width","height","plotBoxCenter","center","boxCenter","paddingX","x","paddingY","y","ref","_createModel","pointer","contextService","pointersArr","animation","transitions","push","background"],"mappings":"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","sourcesContent":["import { geometry as geo, drawing } from '@progress/kendo-drawing';\nimport { setDefaultOptions, deepExtend, round, isArray } from '../../common';\nimport { COORD_PRECISION } from '../../common/constants';\nimport Gauge from '../gauge';\nimport RadialScale from './radial-scale';\nimport RadialPointer from './radial-pointer';\n\nvar Group = drawing.Group;\n\nvar RadialGauge = (function (Gauge) {\n    function RadialGauge () {\n        Gauge.apply(this, arguments);\n    }\n\n    if ( Gauge ) RadialGauge.__proto__ = Gauge;\n    RadialGauge.prototype = Object.create( Gauge && Gauge.prototype );\n    RadialGauge.prototype.constructor = RadialGauge;\n\n    RadialGauge.prototype.reflow = function reflow (bbox) {\n        var this$1 = this;\n\n        var pointers = this.pointers;\n        this.scale.reflow(bbox);\n        this._initialPlotArea = this.scale.bbox;\n\n        for (var i = 0; i < pointers.length; i++) {\n            pointers[i].reflow(this$1.scale.arc);\n            this$1._initialPlotArea = geo.Rect.union(this$1._initialPlotArea, pointers[i].bbox);\n        }\n\n        this.fitScale(bbox);\n        this.alignScale(bbox);\n        this._buildVisual(this.gaugeArea, pointers, this.scale);\n        this._draw();\n    };\n\n    RadialGauge.prototype._buildVisual = function _buildVisual (gaugeArea, pointers, scale) {\n        var visuals = this._visuals = new Group();\n\n        visuals.append(gaugeArea);\n        visuals.append(scale.ticks);\n        visuals.append(scale.ranges);\n        this._buildPointers(pointers);\n        visuals.append(scale.labelElements);\n    };\n\n    RadialGauge.prototype._buildPointers = function _buildPointers (pointers) {\n        var this$1 = this;\n\n        for (var i = 0; i < pointers.length; i++) {\n            var current = pointers[i];\n            current.render();\n            this$1._visuals.append(current.elements);\n\n            current.value(current.options.value);\n        }\n    };\n\n    RadialGauge.prototype.fitScale = function fitScale (bbox) {\n        var this$1 = this;\n\n        var arc = this.scale.arc;\n        var plotAreaBox = this._initialPlotArea;\n        var step = Math.abs(this.getDiff(plotAreaBox, bbox));\n        var min = round(step, COORD_PRECISION);\n        var max = round(-step, COORD_PRECISION);\n        var minDiff, midDiff, maxDiff, mid, oldDiff;\n        var staleFlag = 0;\n        var i = 0;\n\n        while (i++ < 100) {\n            staleFlag = (oldDiff === maxDiff) ? (staleFlag + 1) : 0;\n\n            if (staleFlag > 5) {\n                break;\n            }\n\n            if (min !== mid) {\n                minDiff = this$1.getPlotBox(min, bbox, arc);\n                if (0 <= minDiff && minDiff <= 2) {\n                    break;\n                }\n            }\n\n            if (max !== mid) {\n                maxDiff = this$1.getPlotBox(max, bbox, arc);\n                if (0 <= maxDiff && maxDiff <= 2) {\n                    break;\n                }\n            }\n\n            if (minDiff > 0 && maxDiff > 0) {\n                mid = min * 2;\n            } else if (minDiff < 0 && maxDiff < 0) {\n                mid = max * 2;\n            } else {\n                mid = round(((min + max) / 2) || 1, COORD_PRECISION);\n            }\n\n            midDiff = this$1.getPlotBox(mid, bbox, arc);\n            if (0 <= midDiff && midDiff <= 2) {\n                break;\n            }\n\n            oldDiff = maxDiff;\n\n            if (midDiff > 0) {\n                max = mid;\n                maxDiff = midDiff;\n            } else {\n                min = mid;\n                minDiff = midDiff;\n            }\n        }\n    };\n\n    RadialGauge.prototype.getPlotBox = function getPlotBox (step, bbox, arc) {\n        var this$1 = this;\n\n        var scale = this.scale;\n        var pointers = this.pointers;\n        var radius = arc.getRadiusX();\n        var scaleArc = arc.clone();\n\n        scaleArc.setRadiusX(radius + step).setRadiusY(radius + step);\n\n        scale.arc = scaleArc;\n        scale.reflow(bbox);\n        this.plotBbox = scale.bbox;\n\n        for (var i = 0; i < pointers.length; i++) {\n            pointers[i].reflow(scaleArc);\n            this$1.plotBbox = geo.Rect.union(this$1.plotBbox, pointers[i].bbox);\n        }\n\n        return this.getDiff(this.plotBbox, bbox);\n    };\n\n    RadialGauge.prototype.getDiff = function getDiff (plotBox, box) {\n        return Math.min(box.width() - plotBox.width(), box.height() - plotBox.height());\n    };\n\n    RadialGauge.prototype.alignScale = function alignScale (bbox) {\n        var this$1 = this;\n\n        var plotBoxCenter = this.plotBbox.center();\n        var boxCenter = bbox.center();\n        var paddingX = plotBoxCenter.x - boxCenter.x;\n        var paddingY = plotBoxCenter.y - boxCenter.y;\n        var ref = this;\n        var scale = ref.scale;\n        var pointers = ref.pointers;\n\n        scale.arc.center.x -= paddingX;\n        scale.arc.center.y -= paddingY;\n\n        scale.reflow(bbox);\n\n        for (var i = 0; i < pointers.length; i++) {\n            pointers[i].reflow(scale.arc);\n            this$1.plotBbox = geo.Rect.union(scale.bbox, pointers[i].bbox);\n        }\n    };\n\n    RadialGauge.prototype._createModel = function _createModel () {\n        var this$1 = this;\n\n        var options = this.options;\n        var pointers = options.pointer;\n        var scale = this.scale = new RadialScale(options.scale, this.contextService);\n\n        this.pointers = [];\n\n        var pointersArr = isArray(pointers) ? pointers : [ pointers ];\n        for (var i = 0; i < pointersArr.length; i++) {\n            var current = new RadialPointer(scale, deepExtend({}, pointersArr[i], {\n                animation: {\n                    transitions: options.transitions\n                }\n            }));\n\n            this$1.pointers.push(current);\n        }\n    };\n\n    return RadialGauge;\n}(Gauge));\n\nsetDefaultOptions(RadialGauge, {\n    transitions: true,\n    gaugeArea: {\n        background: \"\"\n    }\n});\n\nexport default RadialGauge;"]},"metadata":{},"sourceType":"module"}