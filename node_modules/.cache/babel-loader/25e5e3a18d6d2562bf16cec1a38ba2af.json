{"ast":null,"code":"import { drawing, Color } from '@progress/kendo-drawing';\nimport { interpolateValue, setDefaultOptions, round, limitValue } from '../../common';\nimport { ANGULAR_SPEED, LINEAR, RADIAL_RANGE_POINTER } from '../constants';\nvar MAX_DURATION = 800;\n\nvar RangePointerAnimation = function (superclass) {\n  function RangePointerAnimation(element, options) {\n    superclass.call(this, element, options);\n    var animationOptions = this.options;\n    var duration = Math.abs(animationOptions.newAngle - animationOptions.oldAngle) / animationOptions.duration * 1000;\n    animationOptions.duration = limitValue(duration, ANGULAR_SPEED, MAX_DURATION);\n    var startColor = element.elements.options.get(\"stroke.color\");\n    var color = element.currentColor();\n\n    if (startColor !== color) {\n      this.startColor = new Color(startColor);\n      this.color = new Color(color);\n    }\n  }\n\n  if (superclass) RangePointerAnimation.__proto__ = superclass;\n  RangePointerAnimation.prototype = Object.create(superclass && superclass.prototype);\n  RangePointerAnimation.prototype.constructor = RangePointerAnimation;\n\n  RangePointerAnimation.prototype.step = function step(pos) {\n    var ref = this;\n    var options = ref.options;\n    var startColor = ref.startColor;\n    var color = ref.color;\n    var angle = interpolateValue(options.oldAngle, options.newAngle, pos);\n    this.element.angle(angle);\n\n    if (color) {\n      var r = round(interpolateValue(startColor.r, color.r, pos));\n      var g = round(interpolateValue(startColor.g, color.g, pos));\n      var b = round(interpolateValue(startColor.b, color.b, pos));\n      this.element.stroke(new Color(r, g, b).toHex());\n    }\n  };\n\n  return RangePointerAnimation;\n}(drawing.Animation);\n\nsetDefaultOptions(RangePointerAnimation, {\n  easing: LINEAR,\n  duration: ANGULAR_SPEED\n});\ndrawing.AnimationFactory.current.register(RADIAL_RANGE_POINTER, RangePointerAnimation);\nexport default RangePointerAnimation;","map":{"version":3,"sources":["/Users/lazybaccha/Documents/Honeywell/SBE/node_modules/@progress/kendo-charts/dist/es/gauges/arc/range-pointer-animation.js"],"names":["drawing","Color","interpolateValue","setDefaultOptions","round","limitValue","ANGULAR_SPEED","LINEAR","RADIAL_RANGE_POINTER","MAX_DURATION","RangePointerAnimation","superclass","element","options","call","animationOptions","duration","Math","abs","newAngle","oldAngle","startColor","elements","get","color","currentColor","__proto__","prototype","Object","create","constructor","step","pos","ref","angle","r","g","b","stroke","toHex","Animation","easing","AnimationFactory","current","register"],"mappings":"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","sourcesContent":["import { drawing, Color } from '@progress/kendo-drawing';\nimport { interpolateValue, setDefaultOptions, round, limitValue } from '../../common';\nimport { ANGULAR_SPEED, LINEAR, RADIAL_RANGE_POINTER } from '../constants';\n\nvar MAX_DURATION = 800;\n\nvar RangePointerAnimation = (function (superclass) {\n    function RangePointerAnimation(element, options) {\n        superclass.call(this, element, options);\n\n        var animationOptions = this.options;\n        var duration = (Math.abs(animationOptions.newAngle - animationOptions.oldAngle) / animationOptions.duration) * 1000;\n        animationOptions.duration = limitValue(duration, ANGULAR_SPEED, MAX_DURATION);\n\n        var startColor = element.elements.options.get(\"stroke.color\");\n        var color = element.currentColor();\n        if (startColor !== color) {\n            this.startColor = new Color(startColor);\n            this.color = new Color(color);\n        }\n    }\n\n    if ( superclass ) RangePointerAnimation.__proto__ = superclass;\n    RangePointerAnimation.prototype = Object.create( superclass && superclass.prototype );\n    RangePointerAnimation.prototype.constructor = RangePointerAnimation;\n\n    RangePointerAnimation.prototype.step = function step (pos) {\n        var ref = this;\n        var options = ref.options;\n        var startColor = ref.startColor;\n        var color = ref.color;\n        var angle = interpolateValue(options.oldAngle, options.newAngle, pos);\n        this.element.angle(angle);\n\n        if (color) {\n            var r = round(interpolateValue(startColor.r, color.r, pos));\n            var g = round(interpolateValue(startColor.g, color.g, pos));\n            var b = round(interpolateValue(startColor.b, color.b, pos));\n\n            this.element.stroke(new Color(r, g, b).toHex());\n        }\n    };\n\n    return RangePointerAnimation;\n}(drawing.Animation));\n\nsetDefaultOptions(RangePointerAnimation, {\n    easing: LINEAR,\n    duration: ANGULAR_SPEED\n});\n\ndrawing.AnimationFactory.current.register(RADIAL_RANGE_POINTER, RangePointerAnimation);\n\nexport default RangePointerAnimation;"]},"metadata":{},"sourceType":"module"}