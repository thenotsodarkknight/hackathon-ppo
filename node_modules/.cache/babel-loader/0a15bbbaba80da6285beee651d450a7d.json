{"ast":null,"code":"import acceptKey from './accept-key';\nimport toChartAxisRanges from './to-chart-axis-ranges';\nimport { X, Y } from '../../common/constants';\nimport { Class, deepExtend, elementStyles, elementOffset, defined } from '../../common';\n\nvar ZoomSelection = function (Class) {\n  function ZoomSelection(chart, options) {\n    Class.call(this);\n    this.chart = chart;\n    this.options = deepExtend({}, this.options, options);\n    this.createElement();\n  }\n\n  if (Class) ZoomSelection.__proto__ = Class;\n  ZoomSelection.prototype = Object.create(Class && Class.prototype);\n  ZoomSelection.prototype.constructor = ZoomSelection;\n\n  ZoomSelection.prototype.createElement = function createElement() {\n    var marquee = this._marquee = document.createElement(\"div\");\n    marquee.className = \"k-marquee\";\n    var marqueeColor = document.createElement(\"div\");\n    marqueeColor.className = \"k-marquee-color\";\n    marquee.appendChild(marqueeColor);\n  };\n\n  ZoomSelection.prototype.removeElement = function removeElement() {\n    if (this._marquee.parentNode) {\n      this._marquee.parentNode.removeChild(this._marquee);\n    }\n  };\n\n  ZoomSelection.prototype.setStyles = function setStyles(styles) {\n    elementStyles(this._marquee, styles);\n  };\n\n  ZoomSelection.prototype.start = function start(e) {\n    if (acceptKey(e, this.options.key)) {\n      var chart = this.chart;\n\n      var point = chart._eventCoordinates(e);\n\n      var zoomPane = this._zoomPane = chart._plotArea.paneByPoint(point);\n\n      var clipBox = zoomPane ? zoomPane.chartsBox().clone() : null;\n\n      if (zoomPane && clipBox) {\n        var offset = this._elementOffset();\n\n        clipBox.translate(offset.left, offset.top);\n        this._zoomPaneClipBox = clipBox;\n        document.body.appendChild(this._marquee);\n        this.setStyles({\n          left: e.pageX + 1,\n          top: e.pageY + 1,\n          width: 0,\n          height: 0\n        });\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  ZoomSelection.prototype._elementOffset = function _elementOffset() {\n    var chartElement = this.chart.element;\n    var ref = elementStyles(chartElement, [\"paddingLeft\", \"paddingTop\"]);\n    var paddingLeft = ref.paddingLeft;\n    var paddingTop = ref.paddingTop;\n    var offset = elementOffset(chartElement);\n    return {\n      left: paddingLeft + offset.left,\n      top: paddingTop + offset.top\n    };\n  };\n\n  ZoomSelection.prototype.move = function move(e) {\n    var zoomPane = this._zoomPane;\n\n    if (zoomPane) {\n      this.setStyles(this._selectionPosition(e));\n    }\n  };\n\n  ZoomSelection.prototype.end = function end(e) {\n    var zoomPane = this._zoomPane;\n\n    if (zoomPane) {\n      var elementOffset = this._elementOffset();\n\n      var selectionPosition = this._selectionPosition(e);\n\n      selectionPosition.left -= elementOffset.left;\n      selectionPosition.top -= elementOffset.top;\n      var start = {\n        x: selectionPosition.left,\n        y: selectionPosition.top\n      };\n      var end = {\n        x: selectionPosition.left + selectionPosition.width,\n        y: selectionPosition.top + selectionPosition.height\n      };\n\n      this._updateAxisRanges(start, end);\n\n      this.removeElement();\n      delete this._zoomPane;\n      return toChartAxisRanges(this.axisRanges);\n    }\n  };\n\n  ZoomSelection.prototype.zoom = function zoom() {\n    var axisRanges = this.axisRanges;\n\n    if (axisRanges && axisRanges.length) {\n      var plotArea = this.chart._plotArea;\n\n      for (var idx = 0; idx < axisRanges.length; idx++) {\n        var axisRange = axisRanges[idx];\n        plotArea.updateAxisOptions(axisRange.axis, axisRange.range);\n      }\n\n      plotArea.redraw(plotArea.panes);\n    }\n  };\n\n  ZoomSelection.prototype.destroy = function destroy() {\n    this.removeElement();\n    delete this._marquee;\n    delete this.chart;\n  };\n\n  ZoomSelection.prototype._updateAxisRanges = function _updateAxisRanges(start, end) {\n    var lock = (this.options.lock || \"\").toLowerCase();\n    var axisRanges = [];\n    var axes = this._zoomPane.axes;\n\n    for (var idx = 0; idx < axes.length; idx++) {\n      var axis = axes[idx];\n      var vertical = axis.options.vertical;\n\n      if (!(lock === X && !vertical) && !(lock === Y && vertical) && defined(axis.axisIndex)) {\n        var range = axis.pointsRange(start, end);\n\n        if (range) {\n          axisRanges.push({\n            axis: axis,\n            range: range\n          });\n        }\n      }\n    }\n\n    this.axisRanges = axisRanges;\n  };\n\n  ZoomSelection.prototype._selectionPosition = function _selectionPosition(e) {\n    var clipBox = this._zoomPaneClipBox;\n    var startLocation = {\n      x: e.x.startLocation,\n      y: e.y.startLocation\n    };\n    var pageX = e.x.location;\n    var pageY = e.y.location;\n    var lock = (this.options.lock || \"\").toLowerCase();\n    var left = Math.min(startLocation.x, pageX);\n    var top = Math.min(startLocation.y, pageY);\n    var width = Math.abs(startLocation.x - pageX);\n    var height = Math.abs(startLocation.y - pageY);\n\n    if (lock === X) {\n      left = clipBox.x1;\n      width = clipBox.width();\n    }\n\n    if (lock === Y) {\n      top = clipBox.y1;\n      height = clipBox.height();\n    }\n\n    if (pageX > clipBox.x2) {\n      width = clipBox.x2 - startLocation.x;\n    }\n\n    if (pageX < clipBox.x1) {\n      width = startLocation.x - clipBox.x1;\n    }\n\n    if (pageY > clipBox.y2) {\n      height = clipBox.y2 - startLocation.y;\n    }\n\n    if (pageY < clipBox.y1) {\n      height = startLocation.y - clipBox.y1;\n    }\n\n    return {\n      left: Math.max(left, clipBox.x1),\n      top: Math.max(top, clipBox.y1),\n      width: width,\n      height: height\n    };\n  };\n\n  return ZoomSelection;\n}(Class);\n\nZoomSelection.prototype.options = {\n  key: \"shift\",\n  lock: \"none\"\n};\nexport default ZoomSelection;","map":{"version":3,"sources":["/Users/lazybaccha/Documents/Honeywell/SBE/node_modules/@progress/kendo-charts/dist/es/chart/pan-and-zoom/zoom-selection.js"],"names":["acceptKey","toChartAxisRanges","X","Y","Class","deepExtend","elementStyles","elementOffset","defined","ZoomSelection","chart","options","call","createElement","__proto__","prototype","Object","create","constructor","marquee","_marquee","document","className","marqueeColor","appendChild","removeElement","parentNode","removeChild","setStyles","styles","start","e","key","point","_eventCoordinates","zoomPane","_zoomPane","_plotArea","paneByPoint","clipBox","chartsBox","clone","offset","_elementOffset","translate","left","top","_zoomPaneClipBox","body","pageX","pageY","width","height","chartElement","element","ref","paddingLeft","paddingTop","move","_selectionPosition","end","selectionPosition","x","y","_updateAxisRanges","axisRanges","zoom","length","plotArea","idx","axisRange","updateAxisOptions","axis","range","redraw","panes","destroy","lock","toLowerCase","axes","vertical","axisIndex","pointsRange","push","startLocation","location","Math","min","abs","x1","y1","x2","y2","max"],"mappings":"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","sourcesContent":["import acceptKey from './accept-key';\nimport toChartAxisRanges from './to-chart-axis-ranges';\n\nimport { X, Y } from '../../common/constants';\nimport { Class, deepExtend, elementStyles, elementOffset, defined } from '../../common';\n\nvar ZoomSelection = (function (Class) {\n    function ZoomSelection(chart, options) {\n        Class.call(this);\n\n        this.chart = chart;\n        this.options = deepExtend({}, this.options, options);\n        this.createElement();\n    }\n\n    if ( Class ) ZoomSelection.__proto__ = Class;\n    ZoomSelection.prototype = Object.create( Class && Class.prototype );\n    ZoomSelection.prototype.constructor = ZoomSelection;\n\n    ZoomSelection.prototype.createElement = function createElement () {\n        var marquee = this._marquee = document.createElement(\"div\");\n        marquee.className = \"k-marquee\";\n        var marqueeColor = document.createElement(\"div\");\n        marqueeColor.className = \"k-marquee-color\";\n        marquee.appendChild(marqueeColor);\n    };\n\n    ZoomSelection.prototype.removeElement = function removeElement () {\n        if (this._marquee.parentNode) {\n            this._marquee.parentNode.removeChild(this._marquee);\n        }\n    };\n\n    ZoomSelection.prototype.setStyles = function setStyles (styles) {\n        elementStyles(this._marquee, styles);\n    };\n\n    ZoomSelection.prototype.start = function start (e) {\n        if (acceptKey(e, this.options.key)) {\n            var chart = this.chart;\n            var point = chart._eventCoordinates(e);\n            var zoomPane = this._zoomPane = chart._plotArea.paneByPoint(point);\n            var clipBox = zoomPane ? zoomPane.chartsBox().clone() : null;\n\n            if (zoomPane && clipBox) {\n                var offset = this._elementOffset();\n\n                clipBox.translate(offset.left, offset.top);\n                this._zoomPaneClipBox = clipBox;\n\n                document.body.appendChild(this._marquee);\n                this.setStyles({\n                    left: e.pageX + 1,\n                    top: e.pageY + 1,\n                    width: 0,\n                    height: 0\n                });\n\n                return true;\n            }\n        }\n        return false;\n    };\n\n    ZoomSelection.prototype._elementOffset = function _elementOffset () {\n        var chartElement = this.chart.element;\n        var ref = elementStyles(chartElement, [ \"paddingLeft\", \"paddingTop\" ]);\n        var paddingLeft = ref.paddingLeft;\n        var paddingTop = ref.paddingTop;\n        var offset = elementOffset(chartElement);\n\n        return {\n            left: paddingLeft + offset.left,\n            top: paddingTop + offset.top\n        };\n    };\n\n    ZoomSelection.prototype.move = function move (e) {\n        var zoomPane = this._zoomPane;\n        if (zoomPane) {\n            this.setStyles(this._selectionPosition(e));\n        }\n    };\n\n    ZoomSelection.prototype.end = function end (e) {\n        var zoomPane = this._zoomPane;\n        if (zoomPane) {\n            var elementOffset = this._elementOffset();\n            var selectionPosition = this._selectionPosition(e);\n            selectionPosition.left -= elementOffset.left;\n            selectionPosition.top -= elementOffset.top;\n\n            var start = { x: selectionPosition.left, y: selectionPosition.top };\n            var end = { x: selectionPosition.left + selectionPosition.width, y: selectionPosition.top + selectionPosition.height };\n            this._updateAxisRanges(start, end);\n\n            this.removeElement();\n            delete this._zoomPane;\n\n            return toChartAxisRanges(this.axisRanges);\n        }\n    };\n\n    ZoomSelection.prototype.zoom = function zoom () {\n        var axisRanges = this.axisRanges;\n        if (axisRanges && axisRanges.length) {\n            var plotArea = this.chart._plotArea;\n            for (var idx = 0; idx < axisRanges.length; idx++) {\n                var axisRange = axisRanges[idx];\n                plotArea.updateAxisOptions(axisRange.axis, axisRange.range);\n            }\n            plotArea.redraw(plotArea.panes);\n        }\n    };\n\n    ZoomSelection.prototype.destroy = function destroy () {\n        this.removeElement();\n        delete this._marquee;\n        delete this.chart;\n    };\n\n    ZoomSelection.prototype._updateAxisRanges = function _updateAxisRanges (start, end) {\n        var lock = (this.options.lock || \"\").toLowerCase();\n        var axisRanges = [];\n\n        var axes = this._zoomPane.axes;\n        for (var idx = 0; idx < axes.length; idx++) {\n            var axis = axes[idx];\n            var vertical = axis.options.vertical;\n            if (!(lock === X && !vertical) && !(lock === Y && vertical) && defined(axis.axisIndex)) {\n                var range = axis.pointsRange(start, end);\n                if (range) {\n                    axisRanges.push({\n                        axis: axis,\n                        range: range\n                    });\n                }\n            }\n        }\n\n        this.axisRanges = axisRanges;\n    };\n\n    ZoomSelection.prototype._selectionPosition = function _selectionPosition (e) {\n        var clipBox = this._zoomPaneClipBox;\n        var startLocation = {\n            x: e.x.startLocation,\n            y: e.y.startLocation\n        };\n        var pageX = e.x.location;\n        var pageY = e.y.location;\n        var lock = (this.options.lock || \"\").toLowerCase();\n        var left = Math.min(startLocation.x, pageX);\n        var top = Math.min(startLocation.y, pageY);\n        var width = Math.abs(startLocation.x - pageX);\n        var height = Math.abs(startLocation.y - pageY);\n\n        if (lock === X) {\n            left = clipBox.x1;\n            width = clipBox.width();\n        }\n        if (lock === Y) {\n            top = clipBox.y1;\n            height = clipBox.height();\n        }\n\n        if (pageX > clipBox.x2) {\n            width = clipBox.x2 - startLocation.x;\n        }\n\n        if (pageX < clipBox.x1) {\n            width = startLocation.x - clipBox.x1;\n        }\n\n        if (pageY > clipBox.y2) {\n            height = clipBox.y2 - startLocation.y;\n        }\n\n        if (pageY < clipBox.y1) {\n            height = startLocation.y - clipBox.y1;\n        }\n\n        return {\n            left: Math.max(left, clipBox.x1),\n            top: Math.max(top, clipBox.y1),\n            width: width,\n            height: height\n        };\n    };\n\n    return ZoomSelection;\n}(Class));\n\nZoomSelection.prototype.options = {\n    key: \"shift\",\n    lock: \"none\"\n};\n\nexport default ZoomSelection;"]},"metadata":{},"sourceType":"module"}