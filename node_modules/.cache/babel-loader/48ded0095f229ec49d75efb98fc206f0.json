{"ast":null,"code":"import _slicedToArray from\"/Users/lazybaccha/Documents/Honeywell/SBE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import{Grid,GridColumn}from\"@progress/kendo-react-grid\";import{getPositions}from\"../services/dataService\";import Loading from\"../layout/Loading\";var NumberCell=function NumberCell(props){var field=props.field||\"\";var startingValue=props.dataItem[field];var finalValue;if(startingValue>1000000){finalValue=(startingValue/1000000).toFixed(2)+\"M\";}if(startingValue>1000000000){finalValue=(startingValue/1000000000).toFixed(2)+\"M\";}return/*#__PURE__*/React.createElement(\"td\",null,finalValue);};var ChangeCell=function ChangeCell(props){var field=props.field||\"\";var value=props.dataItem[field];return/*#__PURE__*/React.createElement(\"td\",{className:value>0?\"change-up\":\"change-down\"},value,\"%\");};export default function PositionsPanel(){var _React$useState=React.useState(),_React$useState2=_slicedToArray(_React$useState,2),positions=_React$useState2[0],setPositions=_React$useState2[1];React.useEffect(function(){getPositions().then(function(data){setPositions(data);});},[]);return/*#__PURE__*/React.createElement(React.Fragment,null,!positions&&/*#__PURE__*/React.createElement(Loading,null),/*#__PURE__*/React.createElement(Grid,{data:positions,style:{height:700,opacity:positions?\"1\":\"0\"}},/*#__PURE__*/React.createElement(GridColumn,{title:\"Symbol\",field:\"symbol\",locked:true,width:100}),/*#__PURE__*/React.createElement(GridColumn,{title:\"Name\",field:\"name\"}),/*#__PURE__*/React.createElement(GridColumn,{title:\"Change\",field:\"day_change\",cell:ChangeCell}),/*#__PURE__*/React.createElement(GridColumn,{title:\"% Change\",field:\"change_pct\",cell:ChangeCell}),/*#__PURE__*/React.createElement(GridColumn,{title:\"Volume Consumed\",field:\"volume\",cell:NumberCell}),/*#__PURE__*/React.createElement(GridColumn,{title:\"Average Consumption\",field:\"market_cap\",cell:NumberCell})));}","map":{"version":3,"sources":["/Users/lazybaccha/Documents/Honeywell/SBE/src/panels/PositionsPanel.tsx"],"names":["React","Grid","GridColumn","getPositions","Loading","NumberCell","props","field","startingValue","dataItem","finalValue","toFixed","ChangeCell","value","PositionsPanel","useState","positions","setPositions","useEffect","then","data","height","opacity"],"mappings":"gKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,CAA8BC,UAA9B,KAAgD,4BAAhD,CAEA,OAASC,YAAT,KAA6B,yBAA7B,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CAGA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAA0B,CAC3C,GAAMC,CAAAA,KAAK,CAAGD,KAAK,CAACC,KAAN,EAAe,EAA7B,CACA,GAAMC,CAAAA,aAAa,CAAGF,KAAK,CAACG,QAAN,CAAeF,KAAf,CAAtB,CACA,GAAIG,CAAAA,UAAJ,CAEA,GAAIF,aAAa,CAAG,OAApB,CAA6B,CAC3BE,UAAU,CAAG,CAACF,aAAa,CAAG,OAAjB,EAA0BG,OAA1B,CAAkC,CAAlC,EAAuC,GAApD,CACD,CACD,GAAIH,aAAa,CAAG,UAApB,CAAgC,CAC9BE,UAAU,CAAG,CAACF,aAAa,CAAG,UAAjB,EAA6BG,OAA7B,CAAqC,CAArC,EAA0C,GAAvD,CACD,CAED,mBAAO,8BAAKD,UAAL,CAAP,CACD,CAbD,CAeA,GAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACN,KAAD,CAA0B,CAC3C,GAAMC,CAAAA,KAAK,CAAGD,KAAK,CAACC,KAAN,EAAe,EAA7B,CACA,GAAMM,CAAAA,KAAK,CAAGP,KAAK,CAACG,QAAN,CAAeF,KAAf,CAAd,CACA,mBACE,0BAAI,SAAS,CAAEM,KAAK,CAAG,CAAR,CAAY,WAAZ,CAA0B,aAAzC,EACGA,KADH,KADF,CAKD,CARD,CAUA,cAAe,SAASC,CAAAA,cAAT,EAA0B,qBACLd,KAAK,CAACe,QAAN,EADK,oDAChCC,SADgC,qBACrBC,YADqB,qBAGvCjB,KAAK,CAACkB,SAAN,CAAgB,UAAM,CACpBf,YAAY,GAAGgB,IAAf,CAAoB,SAACC,IAAD,CAAsB,CACxCH,YAAY,CAACG,IAAD,CAAZ,CACD,CAFD,EAGD,CAJD,CAIG,EAJH,EAMA,mBACE,wCACG,CAACJ,SAAD,eAAc,oBAAC,OAAD,MADjB,cAEE,oBAAC,IAAD,EACE,IAAI,CAAEA,SADR,CAEE,KAAK,CAAE,CAAEK,MAAM,CAAE,GAAV,CAAeC,OAAO,CAAEN,SAAS,CAAG,GAAH,CAAS,GAA1C,CAFT,eAIE,oBAAC,UAAD,EAAY,KAAK,CAAC,QAAlB,CAA2B,KAAK,CAAC,QAAjC,CAA0C,MAAM,CAAE,IAAlD,CAAwD,KAAK,CAAE,GAA/D,EAJF,cAKE,oBAAC,UAAD,EAAY,KAAK,CAAC,MAAlB,CAAyB,KAAK,CAAC,MAA/B,EALF,cAME,oBAAC,UAAD,EAAY,KAAK,CAAC,QAAlB,CAA2B,KAAK,CAAC,YAAjC,CAA8C,IAAI,CAAEJ,UAApD,EANF,cAOE,oBAAC,UAAD,EAAY,KAAK,CAAC,UAAlB,CAA6B,KAAK,CAAC,YAAnC,CAAgD,IAAI,CAAEA,UAAtD,EAPF,cAQE,oBAAC,UAAD,EAAY,KAAK,CAAC,iBAAlB,CAAoC,KAAK,CAAC,QAA1C,CAAmD,IAAI,CAAEP,UAAzD,EARF,cASE,oBAAC,UAAD,EAAY,KAAK,CAAC,qBAAlB,CAAwC,KAAK,CAAC,YAA9C,CAA2D,IAAI,CAAEA,UAAjE,EATF,CAFF,CADF,CAgBD","sourcesContent":["import React from \"react\";\nimport { Grid, GridCellProps, GridColumn } from \"@progress/kendo-react-grid\";\n\nimport { getPositions } from \"../services/dataService\";\nimport Loading from \"../layout/Loading\";\nimport { Position } from \"../data/models\";\n\nconst NumberCell = (props: GridCellProps) => {\n  const field = props.field || \"\";\n  const startingValue = props.dataItem[field];\n  let finalValue;\n\n  if (startingValue > 1000000) {\n    finalValue = (startingValue / 1000000).toFixed(2) + \"M\";\n  }\n  if (startingValue > 1000000000) {\n    finalValue = (startingValue / 1000000000).toFixed(2) + \"M\";\n  }\n\n  return <td>{finalValue}</td>\n}\n\nconst ChangeCell = (props: GridCellProps) => {\n  const field = props.field || \"\";\n  const value = props.dataItem[field];\n  return (\n    <td className={value > 0 ? \"change-up\" : \"change-down\"}>\n      {value}%\n    </td>\n  );\n}\n\nexport default function PositionsPanel() {\n  const [positions, setPositions] = React.useState<Position[]>();\n\n  React.useEffect(() => {\n    getPositions().then((data: Position[]) => {\n      setPositions(data);\n    });\n  }, []);\n\n  return (\n    <>\n      {!positions && <Loading />}\n      <Grid\n        data={positions}\n        style={{ height: 700, opacity: positions ? \"1\" : \"0\" }}\n      >\n        <GridColumn title=\"Symbol\" field=\"symbol\" locked={true} width={100} />\n        <GridColumn title=\"Name\" field=\"name\" />\n        <GridColumn title=\"Change\" field=\"day_change\" cell={ChangeCell} />\n        <GridColumn title=\"% Change\" field=\"change_pct\" cell={ChangeCell} />\n        <GridColumn title=\"Volume Consumed\" field=\"volume\" cell={NumberCell} />\n        <GridColumn title=\"Average Consumption\" field=\"market_cap\" cell={NumberCell} />\n      </Grid>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}