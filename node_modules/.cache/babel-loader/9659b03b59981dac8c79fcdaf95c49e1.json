{"ast":null,"code":"import { drawing as draw, geometry as geom } from '@progress/kendo-drawing';\nimport BoxElement from './box-element';\nimport { CIRCLE, TRIANGLE, CROSS, CENTER, COORD_PRECISION } from '../common/constants';\nimport { round, setDefaultOptions } from '../common';\n\nvar ShapeElement = function (BoxElement) {\n  function ShapeElement(options, pointData) {\n    BoxElement.call(this, options);\n    this.pointData = pointData;\n  }\n\n  if (BoxElement) ShapeElement.__proto__ = BoxElement;\n  ShapeElement.prototype = Object.create(BoxElement && BoxElement.prototype);\n  ShapeElement.prototype.constructor = ShapeElement;\n\n  ShapeElement.prototype.getElement = function getElement() {\n    var ref = this;\n    var options = ref.options;\n    var box = ref.paddingBox;\n    var type = options.type;\n    var rotation = options.rotation;\n    var center = box.center();\n    var halfWidth = box.width() / 2;\n\n    if (!options.visible || !this.hasBox()) {\n      return null;\n    }\n\n    var style = this.visualStyle();\n    var element;\n\n    if (type === CIRCLE) {\n      element = new draw.Circle(new geom.Circle([round(box.x1 + halfWidth, COORD_PRECISION), round(box.y1 + box.height() / 2, COORD_PRECISION)], halfWidth), style);\n    } else if (type === TRIANGLE) {\n      element = draw.Path.fromPoints([[box.x1 + halfWidth, box.y1], [box.x1, box.y2], [box.x2, box.y2]], style).close();\n    } else if (type === CROSS) {\n      element = new draw.MultiPath(style);\n      element.moveTo(box.x1, box.y1).lineTo(box.x2, box.y2);\n      element.moveTo(box.x1, box.y2).lineTo(box.x2, box.y1);\n    } else {\n      element = draw.Path.fromRect(box.toRect(), style);\n    }\n\n    if (rotation) {\n      element.transform(geom.transform().rotate(-rotation, [center.x, center.y]));\n    }\n\n    element.options.zIndex = options.zIndex;\n    return element;\n  };\n\n  ShapeElement.prototype.createElement = function createElement() {\n    var this$1 = this;\n    var customVisual = this.options.visual;\n    var pointData = this.pointData || {};\n    var visual;\n\n    if (customVisual) {\n      visual = customVisual({\n        value: pointData.value,\n        dataItem: pointData.dataItem,\n        sender: this.getSender(),\n        series: pointData.series,\n        category: pointData.category,\n        rect: this.paddingBox.toRect(),\n        options: this.visualOptions(),\n        createVisual: function () {\n          return this$1.getElement();\n        }\n      });\n    } else {\n      visual = this.getElement();\n    }\n\n    return visual;\n  };\n\n  ShapeElement.prototype.visualOptions = function visualOptions() {\n    var options = this.options;\n    return {\n      background: options.background,\n      border: options.border,\n      margin: options.margin,\n      padding: options.padding,\n      type: options.type,\n      size: options.width,\n      visible: options.visible\n    };\n  };\n\n  ShapeElement.prototype.createVisual = function createVisual() {\n    this.visual = this.createElement();\n  };\n\n  return ShapeElement;\n}(BoxElement);\n\nsetDefaultOptions(ShapeElement, {\n  type: CIRCLE,\n  align: CENTER,\n  vAlign: CENTER\n});\nexport default ShapeElement;","map":{"version":3,"sources":["/Users/lazybaccha/Documents/Honeywell/SBE/node_modules/@progress/kendo-charts/dist/es/core/shape-element.js"],"names":["drawing","draw","geometry","geom","BoxElement","CIRCLE","TRIANGLE","CROSS","CENTER","COORD_PRECISION","round","setDefaultOptions","ShapeElement","options","pointData","call","__proto__","prototype","Object","create","constructor","getElement","ref","box","paddingBox","type","rotation","center","halfWidth","width","visible","hasBox","style","visualStyle","element","Circle","x1","y1","height","Path","fromPoints","y2","x2","close","MultiPath","moveTo","lineTo","fromRect","toRect","transform","rotate","x","y","zIndex","createElement","this$1","customVisual","visual","value","dataItem","sender","getSender","series","category","rect","visualOptions","createVisual","background","border","margin","padding","size","align","vAlign"],"mappings":"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","sourcesContent":["import { drawing as draw, geometry as geom } from '@progress/kendo-drawing';\n\nimport BoxElement from './box-element';\n\nimport { CIRCLE, TRIANGLE, CROSS, CENTER, COORD_PRECISION } from '../common/constants';\nimport { round, setDefaultOptions } from '../common';\n\nvar ShapeElement = (function (BoxElement) {\n    function ShapeElement(options, pointData) {\n        BoxElement.call(this, options);\n\n        this.pointData = pointData;\n    }\n\n    if ( BoxElement ) ShapeElement.__proto__ = BoxElement;\n    ShapeElement.prototype = Object.create( BoxElement && BoxElement.prototype );\n    ShapeElement.prototype.constructor = ShapeElement;\n\n    ShapeElement.prototype.getElement = function getElement () {\n        var ref = this;\n        var options = ref.options;\n        var box = ref.paddingBox;\n        var type = options.type;\n        var rotation = options.rotation;\n        var center = box.center();\n        var halfWidth = box.width() / 2;\n\n        if (!options.visible || !this.hasBox()) {\n            return null;\n        }\n\n        var style = this.visualStyle();\n        var element;\n\n        if (type === CIRCLE) {\n            element = new draw.Circle(\n                new geom.Circle([\n                    round(box.x1 + halfWidth, COORD_PRECISION),\n                    round(box.y1 + box.height() / 2, COORD_PRECISION)\n                ], halfWidth),\n                style\n            );\n        } else if (type === TRIANGLE) {\n            element = draw.Path.fromPoints([\n                [ box.x1 + halfWidth, box.y1 ],\n                [ box.x1, box.y2 ],\n                [ box.x2, box.y2 ]\n            ], style).close();\n        } else if (type === CROSS) {\n            element = new draw.MultiPath(style);\n\n            element.moveTo(box.x1, box.y1).lineTo(box.x2, box.y2);\n            element.moveTo(box.x1, box.y2).lineTo(box.x2, box.y1);\n        } else {\n            element = draw.Path.fromRect(box.toRect(), style);\n        }\n\n        if (rotation) {\n            element.transform(geom.transform()\n                .rotate(-rotation, [ center.x, center.y ])\n            );\n        }\n\n        element.options.zIndex = options.zIndex;\n        return element;\n    };\n\n    ShapeElement.prototype.createElement = function createElement () {\n        var this$1 = this;\n\n        var customVisual = this.options.visual;\n        var pointData = this.pointData || {};\n        var visual;\n\n        if (customVisual) {\n            visual = customVisual({\n                value: pointData.value,\n                dataItem: pointData.dataItem,\n                sender: this.getSender(),\n                series: pointData.series,\n                category: pointData.category,\n                rect: this.paddingBox.toRect(),\n                options: this.visualOptions(),\n                createVisual: function () { return this$1.getElement(); }\n            });\n        } else {\n            visual = this.getElement();\n        }\n\n        return visual;\n    };\n\n    ShapeElement.prototype.visualOptions = function visualOptions () {\n        var options = this.options;\n        return {\n            background: options.background,\n            border: options.border,\n            margin: options.margin,\n            padding: options.padding,\n            type: options.type,\n            size: options.width,\n            visible: options.visible\n        };\n    };\n\n    ShapeElement.prototype.createVisual = function createVisual () {\n        this.visual = this.createElement();\n    };\n\n    return ShapeElement;\n}(BoxElement));\n\nsetDefaultOptions(ShapeElement, {\n    type: CIRCLE,\n    align: CENTER,\n    vAlign: CENTER\n});\n\nexport default ShapeElement;"]},"metadata":{},"sourceType":"module"}