{"ast":null,"code":"import NavigatorHint from './navigator-hint';\nimport { Selection, filterSeriesByType } from '../chart';\nimport { DRAG, DRAG_END, EQUALLY_SPACED_SERIES, ZOOM, ZOOM_END } from '../chart/constants';\nimport { DateCategoryAxis } from '../core';\nimport { addDuration, parseDate, toDate, toTime } from '../date-utils';\nimport { Class, deepExtend, defined, getTemplate, InstanceObserver, last, limitValue, valueOrDefault } from '../common';\nimport { NAVIGATOR_AXIS, NAVIGATOR_PANE } from './constants';\nvar ZOOM_ACCELERATION = 3;\n\nvar Navigator = function (Class) {\n  function Navigator(chart) {\n    var obj;\n    Class.call(this);\n    this.chart = chart;\n    var options = this.options = deepExtend({}, this.options, chart.options.navigator);\n    var select = options.select;\n\n    if (select) {\n      select.from = this.parseDate(select.from);\n      select.to = this.parseDate(select.to);\n    }\n\n    if (!defined(options.hint.visible)) {\n      options.hint.visible = options.visible;\n    }\n\n    this.chartObserver = new InstanceObserver(this, (obj = {}, obj[DRAG] = '_drag', obj[DRAG_END] = '_dragEnd', obj[ZOOM] = '_zoom', obj[ZOOM_END] = '_zoomEnd', obj));\n    chart.addObserver(this.chartObserver);\n  }\n\n  if (Class) Navigator.__proto__ = Class;\n  Navigator.prototype = Object.create(Class && Class.prototype);\n  Navigator.prototype.constructor = Navigator;\n\n  Navigator.prototype.parseDate = function parseDate$1(value) {\n    return parseDate(this.chart.chartService.intl, value);\n  };\n\n  Navigator.prototype.clean = function clean() {\n    if (this.selection) {\n      this.selection.destroy();\n      this.selection = null;\n    }\n\n    if (this.hint) {\n      this.hint.destroy();\n      this.hint = null;\n    }\n  };\n\n  Navigator.prototype.destroy = function destroy() {\n    if (this.chart) {\n      this.chart.removeObserver(this.chartObserver);\n      delete this.chart;\n    }\n\n    this.clean();\n  };\n\n  Navigator.prototype.redraw = function redraw() {\n    this._redrawSelf();\n\n    this.initSelection();\n  };\n\n  Navigator.prototype.initSelection = function initSelection() {\n    var ref = this;\n    var chart = ref.chart;\n    var options = ref.options;\n    var axis = this.mainAxis();\n    var ref$1 = axis.roundedRange();\n    var min = ref$1.min;\n    var max = ref$1.max;\n    var ref$2 = options.select;\n    var from = ref$2.from;\n    var to = ref$2.to;\n    var mousewheel = ref$2.mousewheel;\n    var axisClone = clone(axis);\n\n    if (axis.categoriesCount() === 0) {\n      return;\n    }\n\n    this.clean(); // \"Freeze\" the selection axis position until the next redraw\n\n    axisClone.box = axis.box;\n    this.selection = new Selection(chart, axisClone, {\n      min: min,\n      max: max,\n      from: from || min,\n      to: to || max,\n      mousewheel: valueOrDefault(mousewheel, {\n        zoom: \"left\"\n      }),\n      visible: options.visible\n    }, new InstanceObserver(this, {\n      selectStart: '_selectStart',\n      select: '_select',\n      selectEnd: '_selectEnd'\n    }));\n\n    if (options.hint.visible) {\n      this.hint = new NavigatorHint(chart.element, chart.chartService, {\n        min: min,\n        max: max,\n        template: getTemplate(options.hint),\n        format: options.hint.format\n      });\n    }\n  };\n\n  Navigator.prototype.setRange = function setRange() {\n    var plotArea = this.chart._createPlotArea(true);\n\n    var axis = plotArea.namedCategoryAxes[NAVIGATOR_AXIS];\n    var ref = axis.roundedRange();\n    var min = ref.min;\n    var max = ref.max;\n    var select = this.options.select || {};\n    var from = select.from || min;\n\n    if (from < min) {\n      from = min;\n    }\n\n    var to = select.to || max;\n\n    if (to > max) {\n      to = max;\n    }\n\n    this.options.select = deepExtend({}, select, {\n      from: from,\n      to: to\n    });\n    this.filterAxes();\n  };\n\n  Navigator.prototype._redrawSelf = function _redrawSelf(silent) {\n    var plotArea = this.chart._plotArea;\n\n    if (plotArea) {\n      plotArea.redraw(last(plotArea.panes), silent);\n    }\n  };\n\n  Navigator.prototype.redrawSlaves = function redrawSlaves() {\n    var chart = this.chart;\n    var plotArea = chart._plotArea;\n    var slavePanes = plotArea.panes.slice(0, -1); // Update the original series and categoryAxis before partial refresh.\n\n    plotArea.srcSeries = chart.options.series;\n    plotArea.options.categoryAxis = chart.options.categoryAxis;\n    plotArea.clearSeriesPointsCache();\n    plotArea.redraw(slavePanes);\n  };\n\n  Navigator.prototype._drag = function _drag(e) {\n    var ref = this;\n    var chart = ref.chart;\n    var selection = ref.selection;\n\n    var coords = chart._eventCoordinates(e.originalEvent);\n\n    var navigatorAxis = this.mainAxis();\n    var naviRange = navigatorAxis.roundedRange();\n    var inNavigator = navigatorAxis.pane.box.containsPoint(coords);\n    var axis = chart._plotArea.categoryAxis;\n    var range = e.axisRanges[axis.options.name];\n    var select = this.options.select;\n    var duration;\n\n    if (!range || inNavigator || !selection) {\n      return;\n    }\n\n    if (select.from && select.to) {\n      duration = toTime(select.to) - toTime(select.from);\n    } else {\n      duration = toTime(selection.options.to) - toTime(selection.options.from);\n    }\n\n    var from = toDate(limitValue(toTime(range.min), naviRange.min, toTime(naviRange.max) - duration));\n    var to = toDate(limitValue(toTime(from) + duration, toTime(naviRange.min) + duration, naviRange.max));\n    this.options.select = {\n      from: from,\n      to: to\n    };\n\n    if (this.options.liveDrag) {\n      this.filterAxes();\n      this.redrawSlaves();\n    }\n\n    selection.set(from, to);\n    this.showHint(from, to);\n  };\n\n  Navigator.prototype._dragEnd = function _dragEnd() {\n    this.filterAxes();\n    this.filter();\n    this.redrawSlaves();\n\n    if (this.hint) {\n      this.hint.hide();\n    }\n  };\n\n  Navigator.prototype.readSelection = function readSelection() {\n    var ref = this;\n    var ref_selection_options = ref.selection.options;\n    var from = ref_selection_options.from;\n    var to = ref_selection_options.to;\n    var select = ref.options.select;\n    select.from = from;\n    select.to = to;\n  };\n\n  Navigator.prototype.filterAxes = function filterAxes() {\n    var ref = this;\n    var select = ref.options.select;\n    if (select === void 0) select = {};\n    var chart = ref.chart;\n    var allAxes = chart.options.categoryAxis;\n    var from = select.from;\n    var to = select.to;\n\n    for (var idx = 0; idx < allAxes.length; idx++) {\n      var axis = allAxes[idx];\n\n      if (axis.pane !== NAVIGATOR_PANE) {\n        axis.min = from;\n        axis.max = to;\n      }\n    }\n  };\n\n  Navigator.prototype.filter = function filter() {\n    var ref = this;\n    var chart = ref.chart;\n    var select = ref.options.select;\n\n    if (!chart.requiresHandlers([\"navigatorFilter\"])) {\n      return;\n    }\n\n    var mainAxis = this.mainAxis();\n    var args = {\n      from: select.from,\n      to: select.to\n    };\n\n    if (mainAxis.options.type !== 'category') {\n      var axisOptions = new DateCategoryAxis(deepExtend({\n        baseUnit: \"fit\"\n      }, chart.options.categoryAxis[0], {\n        categories: [select.from, select.to]\n      }), chart.chartService).options;\n      args.from = addDuration(axisOptions.min, -axisOptions.baseUnitStep, axisOptions.baseUnit);\n      args.to = addDuration(axisOptions.max, axisOptions.baseUnitStep, axisOptions.baseUnit);\n    }\n\n    this.chart.trigger(\"navigatorFilter\", args);\n  };\n\n  Navigator.prototype._zoom = function _zoom(e) {\n    var ref = this;\n    var axis = ref.chart._plotArea.categoryAxis;\n    var selection = ref.selection;\n    var ref_options = ref.options;\n    var select = ref_options.select;\n    var liveDrag = ref_options.liveDrag;\n    var mainAxis = this.mainAxis();\n    var delta = e.delta;\n\n    if (!selection) {\n      return;\n    }\n\n    var fromIx = mainAxis.categoryIndex(selection.options.from);\n    var toIx = mainAxis.categoryIndex(selection.options.to);\n    e.originalEvent.preventDefault();\n\n    if (Math.abs(delta) > 1) {\n      delta *= ZOOM_ACCELERATION;\n    }\n\n    if (toIx - fromIx > 1) {\n      selection.expand(delta);\n      this.readSelection();\n    } else {\n      axis.options.min = select.from;\n      select.from = axis.scaleRange(-e.delta).min;\n    }\n\n    if (liveDrag) {\n      this.filterAxes();\n      this.redrawSlaves();\n    }\n\n    selection.set(select.from, select.to);\n    this.showHint(this.options.select.from, this.options.select.to);\n  };\n\n  Navigator.prototype._zoomEnd = function _zoomEnd(e) {\n    this._dragEnd(e);\n  };\n\n  Navigator.prototype.showHint = function showHint(from, to) {\n    var plotArea = this.chart._plotArea;\n\n    if (this.hint) {\n      this.hint.show(from, to, plotArea.backgroundBox());\n    }\n  };\n\n  Navigator.prototype._selectStart = function _selectStart(e) {\n    return this.chart._selectStart(e);\n  };\n\n  Navigator.prototype._select = function _select(e) {\n    this.showHint(e.from, e.to);\n    return this.chart._select(e);\n  };\n\n  Navigator.prototype._selectEnd = function _selectEnd(e) {\n    if (this.hint) {\n      this.hint.hide();\n    }\n\n    this.readSelection();\n    this.filterAxes();\n    this.filter();\n    this.redrawSlaves();\n    return this.chart._selectEnd(e);\n  };\n\n  Navigator.prototype.mainAxis = function mainAxis() {\n    var plotArea = this.chart._plotArea;\n\n    if (plotArea) {\n      return plotArea.namedCategoryAxes[NAVIGATOR_AXIS];\n    }\n  };\n\n  Navigator.prototype.select = function select(from, to) {\n    var select = this.options.select;\n\n    if (from && to) {\n      select.from = this.parseDate(from);\n      select.to = this.parseDate(to);\n      this.filterAxes();\n      this.filter();\n      this.redrawSlaves();\n      this.selection.set(from, to);\n    }\n\n    return {\n      from: select.from,\n      to: select.to\n    };\n  };\n\n  Navigator.setup = function setup(options, themeOptions) {\n    if (options === void 0) options = {};\n    if (themeOptions === void 0) themeOptions = {};\n\n    if (options.__navi) {\n      return;\n    }\n\n    options.__navi = true;\n    var naviOptions = deepExtend({}, themeOptions.navigator, options.navigator);\n    var panes = options.panes = [].concat(options.panes);\n    var paneOptions = deepExtend({}, naviOptions.pane, {\n      name: NAVIGATOR_PANE\n    });\n\n    if (!naviOptions.visible) {\n      paneOptions.visible = false;\n      paneOptions.height = 0.1;\n    }\n\n    panes.push(paneOptions);\n    Navigator.attachAxes(options, naviOptions);\n    Navigator.attachSeries(options, naviOptions, themeOptions);\n  };\n\n  Navigator.attachAxes = function attachAxes(options, naviOptions) {\n    var series = naviOptions.series || [];\n    var categoryAxes = options.categoryAxis = [].concat(options.categoryAxis);\n    var valueAxes = options.valueAxis = [].concat(options.valueAxis);\n    var equallySpacedSeries = filterSeriesByType(series, EQUALLY_SPACED_SERIES);\n    var justifyAxis = equallySpacedSeries.length === 0;\n    var base = deepExtend({\n      type: \"date\",\n      pane: NAVIGATOR_PANE,\n      roundToBaseUnit: !justifyAxis,\n      justified: justifyAxis,\n      _collapse: false,\n      majorTicks: {\n        visible: true\n      },\n      tooltip: {\n        visible: false\n      },\n      labels: {\n        step: 1\n      },\n      autoBind: naviOptions.autoBindElements,\n      autoBaseUnitSteps: {\n        minutes: [1],\n        hours: [1, 2],\n        days: [1, 2],\n        weeks: [],\n        months: [1],\n        years: [1]\n      }\n    });\n    var user = naviOptions.categoryAxis;\n    categoryAxes.push(deepExtend({}, base, {\n      maxDateGroups: 200\n    }, user, {\n      name: NAVIGATOR_AXIS,\n      title: null,\n      baseUnit: \"fit\",\n      baseUnitStep: \"auto\",\n      labels: {\n        visible: false\n      },\n      majorTicks: {\n        visible: false\n      }\n    }), deepExtend({}, base, user, {\n      name: NAVIGATOR_AXIS + \"_labels\",\n      maxDateGroups: 20,\n      baseUnitStep: \"auto\",\n      labels: {\n        position: \"\"\n      },\n      plotBands: [],\n      autoBaseUnitSteps: {\n        minutes: []\n      },\n      _overlap: true\n    }), deepExtend({}, base, user, {\n      name: NAVIGATOR_AXIS + \"_ticks\",\n      maxDateGroups: 200,\n      majorTicks: {\n        width: 0.5\n      },\n      plotBands: [],\n      title: null,\n      labels: {\n        visible: false,\n        mirror: true\n      },\n      _overlap: true\n    }));\n    valueAxes.push(deepExtend({\n      name: NAVIGATOR_AXIS,\n      pane: NAVIGATOR_PANE,\n      majorGridLines: {\n        visible: false\n      },\n      visible: false\n    }, naviOptions.valueAxis));\n  };\n\n  Navigator.attachSeries = function attachSeries(options, naviOptions, themeOptions) {\n    var series = options.series = options.series || [];\n    var navigatorSeries = [].concat(naviOptions.series || []);\n    var seriesColors = themeOptions.seriesColors;\n    var defaults = naviOptions.seriesDefaults;\n\n    for (var idx = 0; idx < navigatorSeries.length; idx++) {\n      series.push(deepExtend({\n        color: seriesColors[idx % seriesColors.length],\n        categoryField: naviOptions.dateField,\n        visibleInLegend: false,\n        tooltip: {\n          visible: false\n        }\n      }, defaults, navigatorSeries[idx], {\n        axis: NAVIGATOR_AXIS,\n        categoryAxis: NAVIGATOR_AXIS,\n        autoBind: naviOptions.autoBindElements\n      }));\n    }\n  };\n\n  return Navigator;\n}(Class);\n\nfunction ClonedObject() {}\n\nfunction clone(obj) {\n  ClonedObject.prototype = obj;\n  return new ClonedObject();\n}\n\nexport default Navigator;","map":{"version":3,"sources":["/Users/lazybaccha/Documents/Honeywell/SBE/node_modules/@progress/kendo-charts/dist/es/stock/navigator.js"],"names":["NavigatorHint","Selection","filterSeriesByType","DRAG","DRAG_END","EQUALLY_SPACED_SERIES","ZOOM","ZOOM_END","DateCategoryAxis","addDuration","parseDate","toDate","toTime","Class","deepExtend","defined","getTemplate","InstanceObserver","last","limitValue","valueOrDefault","NAVIGATOR_AXIS","NAVIGATOR_PANE","ZOOM_ACCELERATION","Navigator","chart","obj","call","options","navigator","select","from","to","hint","visible","chartObserver","addObserver","__proto__","prototype","Object","create","constructor","parseDate$1","value","chartService","intl","clean","selection","destroy","removeObserver","redraw","_redrawSelf","initSelection","ref","axis","mainAxis","ref$1","roundedRange","min","max","ref$2","mousewheel","axisClone","clone","categoriesCount","box","zoom","selectStart","selectEnd","element","template","format","setRange","plotArea","_createPlotArea","namedCategoryAxes","filterAxes","silent","_plotArea","panes","redrawSlaves","slavePanes","slice","srcSeries","series","categoryAxis","clearSeriesPointsCache","_drag","e","coords","_eventCoordinates","originalEvent","navigatorAxis","naviRange","inNavigator","pane","containsPoint","range","axisRanges","name","duration","liveDrag","set","showHint","_dragEnd","filter","hide","readSelection","ref_selection_options","allAxes","idx","length","requiresHandlers","args","type","axisOptions","baseUnit","categories","baseUnitStep","trigger","_zoom","ref_options","delta","fromIx","categoryIndex","toIx","preventDefault","Math","abs","expand","scaleRange","_zoomEnd","show","backgroundBox","_selectStart","_select","_selectEnd","setup","themeOptions","__navi","naviOptions","concat","paneOptions","height","push","attachAxes","attachSeries","categoryAxes","valueAxes","valueAxis","equallySpacedSeries","justifyAxis","base","roundToBaseUnit","justified","_collapse","majorTicks","tooltip","labels","step","autoBind","autoBindElements","autoBaseUnitSteps","minutes","hours","days","weeks","months","years","user","maxDateGroups","title","position","plotBands","_overlap","width","mirror","majorGridLines","navigatorSeries","seriesColors","defaults","seriesDefaults","color","categoryField","dateField","visibleInLegend","ClonedObject"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,kBAA1B;AACA,SAASC,SAAT,EAAoBC,kBAApB,QAA8C,UAA9C;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,qBAAzB,EAAgDC,IAAhD,EAAsDC,QAAtD,QAAsE,oBAAtE;AACA,SAASC,gBAAT,QAAiC,SAAjC;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,MAAjC,EAAyCC,MAAzC,QAAuD,eAAvD;AACA,SAASC,KAAT,EAAgBC,UAAhB,EAA4BC,OAA5B,EAAqCC,WAArC,EAAkDC,gBAAlD,EAAoEC,IAApE,EAA0EC,UAA1E,EAAsFC,cAAtF,QAA4G,WAA5G;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,aAA/C;AAEA,IAAIC,iBAAiB,GAAG,CAAxB;;AAEA,IAAIC,SAAS,GAAI,UAAUX,KAAV,EAAiB;AAC9B,WAASW,SAAT,CAAmBC,KAAnB,EAA0B;AACtB,QAAIC,GAAJ;AAEAb,IAAAA,KAAK,CAACc,IAAN,CAAW,IAAX;AAEA,SAAKF,KAAL,GAAaA,KAAb;AACA,QAAIG,OAAO,GAAG,KAAKA,OAAL,GAAed,UAAU,CAAC,EAAD,EAAK,KAAKc,OAAV,EAAmBH,KAAK,CAACG,OAAN,CAAcC,SAAjC,CAAvC;AACA,QAAIC,MAAM,GAAGF,OAAO,CAACE,MAArB;;AACA,QAAIA,MAAJ,EAAY;AACRA,MAAAA,MAAM,CAACC,IAAP,GAAc,KAAKrB,SAAL,CAAeoB,MAAM,CAACC,IAAtB,CAAd;AACAD,MAAAA,MAAM,CAACE,EAAP,GAAY,KAAKtB,SAAL,CAAeoB,MAAM,CAACE,EAAtB,CAAZ;AACH;;AAED,QAAI,CAACjB,OAAO,CAACa,OAAO,CAACK,IAAR,CAAaC,OAAd,CAAZ,EAAoC;AAChCN,MAAAA,OAAO,CAACK,IAAR,CAAaC,OAAb,GAAuBN,OAAO,CAACM,OAA/B;AACH;;AAED,SAAKC,aAAL,GAAqB,IAAIlB,gBAAJ,CAAqB,IAArB,GAA6BS,GAAG,GAAG,EAAN,EAAUA,GAAG,CAACvB,IAAD,CAAH,GAAY,OAAtB,EAA+BuB,GAAG,CAACtB,QAAD,CAAH,GAAgB,UAA/C,EAA2DsB,GAAG,CAACpB,IAAD,CAAH,GAAY,OAAvE,EAAgFoB,GAAG,CAACnB,QAAD,CAAH,GAAgB,UAAhG,EAA4GmB,GAAzI,EAArB;AACAD,IAAAA,KAAK,CAACW,WAAN,CAAkB,KAAKD,aAAvB;AACH;;AAED,MAAKtB,KAAL,EAAaW,SAAS,CAACa,SAAV,GAAsBxB,KAAtB;AACbW,EAAAA,SAAS,CAACc,SAAV,GAAsBC,MAAM,CAACC,MAAP,CAAe3B,KAAK,IAAIA,KAAK,CAACyB,SAA9B,CAAtB;AACAd,EAAAA,SAAS,CAACc,SAAV,CAAoBG,WAApB,GAAkCjB,SAAlC;;AAEAA,EAAAA,SAAS,CAACc,SAAV,CAAoB5B,SAApB,GAAgC,SAASgC,WAAT,CAAsBC,KAAtB,EAA6B;AACzD,WAAOjC,SAAS,CAAC,KAAKe,KAAL,CAAWmB,YAAX,CAAwBC,IAAzB,EAA+BF,KAA/B,CAAhB;AACH,GAFD;;AAIAnB,EAAAA,SAAS,CAACc,SAAV,CAAoBQ,KAApB,GAA4B,SAASA,KAAT,GAAkB;AAC1C,QAAI,KAAKC,SAAT,EAAoB;AAChB,WAAKA,SAAL,CAAeC,OAAf;AACA,WAAKD,SAAL,GAAiB,IAAjB;AACH;;AAED,QAAI,KAAKd,IAAT,EAAe;AACX,WAAKA,IAAL,CAAUe,OAAV;AACA,WAAKf,IAAL,GAAY,IAAZ;AACH;AACJ,GAVD;;AAYAT,EAAAA,SAAS,CAACc,SAAV,CAAoBU,OAApB,GAA8B,SAASA,OAAT,GAAoB;AAC9C,QAAI,KAAKvB,KAAT,EAAgB;AACZ,WAAKA,KAAL,CAAWwB,cAAX,CAA0B,KAAKd,aAA/B;AACA,aAAO,KAAKV,KAAZ;AACH;;AAED,SAAKqB,KAAL;AACH,GAPD;;AASAtB,EAAAA,SAAS,CAACc,SAAV,CAAoBY,MAApB,GAA6B,SAASA,MAAT,GAAmB;AAC5C,SAAKC,WAAL;;AACA,SAAKC,aAAL;AACH,GAHD;;AAKA5B,EAAAA,SAAS,CAACc,SAAV,CAAoBc,aAApB,GAAoC,SAASA,aAAT,GAA0B;AAC1D,QAAIC,GAAG,GAAG,IAAV;AACA,QAAI5B,KAAK,GAAG4B,GAAG,CAAC5B,KAAhB;AACA,QAAIG,OAAO,GAAGyB,GAAG,CAACzB,OAAlB;AACA,QAAI0B,IAAI,GAAG,KAAKC,QAAL,EAAX;AACA,QAAIC,KAAK,GAAGF,IAAI,CAACG,YAAL,EAAZ;AACA,QAAIC,GAAG,GAAGF,KAAK,CAACE,GAAhB;AACA,QAAIC,GAAG,GAAGH,KAAK,CAACG,GAAhB;AACA,QAAIC,KAAK,GAAGhC,OAAO,CAACE,MAApB;AACA,QAAIC,IAAI,GAAG6B,KAAK,CAAC7B,IAAjB;AACA,QAAIC,EAAE,GAAG4B,KAAK,CAAC5B,EAAf;AACA,QAAI6B,UAAU,GAAGD,KAAK,CAACC,UAAvB;AACA,QAAIC,SAAS,GAAGC,KAAK,CAACT,IAAD,CAArB;;AAEA,QAAIA,IAAI,CAACU,eAAL,OAA2B,CAA/B,EAAkC;AAC9B;AACH;;AAED,SAAKlB,KAAL,GAlB0D,CAoB1D;;AACAgB,IAAAA,SAAS,CAACG,GAAV,GAAgBX,IAAI,CAACW,GAArB;AAEA,SAAKlB,SAAL,GAAiB,IAAI9C,SAAJ,CAAcwB,KAAd,EAAqBqC,SAArB,EAAgC;AAC7CJ,MAAAA,GAAG,EAAEA,GADwC;AAE7CC,MAAAA,GAAG,EAAEA,GAFwC;AAG7C5B,MAAAA,IAAI,EAAEA,IAAI,IAAI2B,GAH+B;AAI7C1B,MAAAA,EAAE,EAAEA,EAAE,IAAI2B,GAJmC;AAK7CE,MAAAA,UAAU,EAAEzC,cAAc,CAACyC,UAAD,EAAa;AAAEK,QAAAA,IAAI,EAAE;AAAR,OAAb,CALmB;AAM7ChC,MAAAA,OAAO,EAAEN,OAAO,CAACM;AAN4B,KAAhC,EAOd,IAAIjB,gBAAJ,CAAqB,IAArB,EAA2B;AAC1BkD,MAAAA,WAAW,EAAE,cADa;AAE1BrC,MAAAA,MAAM,EAAE,SAFkB;AAG1BsC,MAAAA,SAAS,EAAE;AAHe,KAA3B,CAPc,CAAjB;;AAaA,QAAIxC,OAAO,CAACK,IAAR,CAAaC,OAAjB,EAA0B;AACtB,WAAKD,IAAL,GAAY,IAAIjC,aAAJ,CAAkByB,KAAK,CAAC4C,OAAxB,EAAiC5C,KAAK,CAACmB,YAAvC,EAAqD;AAC7Dc,QAAAA,GAAG,EAAEA,GADwD;AAE7DC,QAAAA,GAAG,EAAEA,GAFwD;AAG7DW,QAAAA,QAAQ,EAAEtD,WAAW,CAACY,OAAO,CAACK,IAAT,CAHwC;AAI7DsC,QAAAA,MAAM,EAAE3C,OAAO,CAACK,IAAR,CAAasC;AAJwC,OAArD,CAAZ;AAMH;AACJ,GA5CD;;AA8CA/C,EAAAA,SAAS,CAACc,SAAV,CAAoBkC,QAApB,GAA+B,SAASA,QAAT,GAAqB;AAChD,QAAIC,QAAQ,GAAG,KAAKhD,KAAL,CAAWiD,eAAX,CAA2B,IAA3B,CAAf;;AACA,QAAIpB,IAAI,GAAGmB,QAAQ,CAACE,iBAAT,CAA2BtD,cAA3B,CAAX;AAEA,QAAIgC,GAAG,GAAGC,IAAI,CAACG,YAAL,EAAV;AACA,QAAIC,GAAG,GAAGL,GAAG,CAACK,GAAd;AACA,QAAIC,GAAG,GAAGN,GAAG,CAACM,GAAd;AAEA,QAAI7B,MAAM,GAAG,KAAKF,OAAL,CAAaE,MAAb,IAAuB,EAApC;AACA,QAAIC,IAAI,GAAGD,MAAM,CAACC,IAAP,IAAe2B,GAA1B;;AACA,QAAI3B,IAAI,GAAG2B,GAAX,EAAgB;AACZ3B,MAAAA,IAAI,GAAG2B,GAAP;AACH;;AAED,QAAI1B,EAAE,GAAGF,MAAM,CAACE,EAAP,IAAa2B,GAAtB;;AACA,QAAI3B,EAAE,GAAG2B,GAAT,EAAc;AACV3B,MAAAA,EAAE,GAAG2B,GAAL;AACH;;AAED,SAAK/B,OAAL,CAAaE,MAAb,GAAsBhB,UAAU,CAAC,EAAD,EAAKgB,MAAL,EAAa;AACzCC,MAAAA,IAAI,EAAEA,IADmC;AAEzCC,MAAAA,EAAE,EAAEA;AAFqC,KAAb,CAAhC;AAKA,SAAK4C,UAAL;AACH,GAzBD;;AA2BApD,EAAAA,SAAS,CAACc,SAAV,CAAoBa,WAApB,GAAkC,SAASA,WAAT,CAAsB0B,MAAtB,EAA8B;AAC5D,QAAIJ,QAAQ,GAAG,KAAKhD,KAAL,CAAWqD,SAA1B;;AAEA,QAAIL,QAAJ,EAAc;AACVA,MAAAA,QAAQ,CAACvB,MAAT,CAAgBhC,IAAI,CAACuD,QAAQ,CAACM,KAAV,CAApB,EAAsCF,MAAtC;AACH;AACJ,GAND;;AAQArD,EAAAA,SAAS,CAACc,SAAV,CAAoB0C,YAApB,GAAmC,SAASA,YAAT,GAAyB;AACxD,QAAIvD,KAAK,GAAG,KAAKA,KAAjB;AACA,QAAIgD,QAAQ,GAAGhD,KAAK,CAACqD,SAArB;AACA,QAAIG,UAAU,GAAGR,QAAQ,CAACM,KAAT,CAAeG,KAAf,CAAqB,CAArB,EAAwB,CAAC,CAAzB,CAAjB,CAHwD,CAKxD;;AACAT,IAAAA,QAAQ,CAACU,SAAT,GAAqB1D,KAAK,CAACG,OAAN,CAAcwD,MAAnC;AACAX,IAAAA,QAAQ,CAAC7C,OAAT,CAAiByD,YAAjB,GAAgC5D,KAAK,CAACG,OAAN,CAAcyD,YAA9C;AACAZ,IAAAA,QAAQ,CAACa,sBAAT;AAEAb,IAAAA,QAAQ,CAACvB,MAAT,CAAgB+B,UAAhB;AACH,GAXD;;AAaAzD,EAAAA,SAAS,CAACc,SAAV,CAAoBiD,KAApB,GAA4B,SAASA,KAAT,CAAgBC,CAAhB,EAAmB;AAC3C,QAAInC,GAAG,GAAG,IAAV;AACA,QAAI5B,KAAK,GAAG4B,GAAG,CAAC5B,KAAhB;AACA,QAAIsB,SAAS,GAAGM,GAAG,CAACN,SAApB;;AACA,QAAI0C,MAAM,GAAGhE,KAAK,CAACiE,iBAAN,CAAwBF,CAAC,CAACG,aAA1B,CAAb;;AACA,QAAIC,aAAa,GAAG,KAAKrC,QAAL,EAApB;AACA,QAAIsC,SAAS,GAAGD,aAAa,CAACnC,YAAd,EAAhB;AACA,QAAIqC,WAAW,GAAGF,aAAa,CAACG,IAAd,CAAmB9B,GAAnB,CAAuB+B,aAAvB,CAAqCP,MAArC,CAAlB;AACA,QAAInC,IAAI,GAAG7B,KAAK,CAACqD,SAAN,CAAgBO,YAA3B;AACA,QAAIY,KAAK,GAAGT,CAAC,CAACU,UAAF,CAAa5C,IAAI,CAAC1B,OAAL,CAAauE,IAA1B,CAAZ;AACA,QAAIrE,MAAM,GAAG,KAAKF,OAAL,CAAaE,MAA1B;AACA,QAAIsE,QAAJ;;AAEA,QAAI,CAACH,KAAD,IAAUH,WAAV,IAAyB,CAAC/C,SAA9B,EAAyC;AACrC;AACH;;AAED,QAAIjB,MAAM,CAACC,IAAP,IAAeD,MAAM,CAACE,EAA1B,EAA8B;AAC1BoE,MAAAA,QAAQ,GAAGxF,MAAM,CAACkB,MAAM,CAACE,EAAR,CAAN,GAAoBpB,MAAM,CAACkB,MAAM,CAACC,IAAR,CAArC;AACH,KAFD,MAEO;AACHqE,MAAAA,QAAQ,GAAGxF,MAAM,CAACmC,SAAS,CAACnB,OAAV,CAAkBI,EAAnB,CAAN,GAA+BpB,MAAM,CAACmC,SAAS,CAACnB,OAAV,CAAkBG,IAAnB,CAAhD;AACH;;AAED,QAAIA,IAAI,GAAGpB,MAAM,CAACQ,UAAU,CACxBP,MAAM,CAACqF,KAAK,CAACvC,GAAP,CADkB,EAExBmC,SAAS,CAACnC,GAFc,EAET9C,MAAM,CAACiF,SAAS,CAAClC,GAAX,CAAN,GAAwByC,QAFf,CAAX,CAAjB;AAKA,QAAIpE,EAAE,GAAGrB,MAAM,CAACQ,UAAU,CACtBP,MAAM,CAACmB,IAAD,CAAN,GAAeqE,QADO,EAEtBxF,MAAM,CAACiF,SAAS,CAACnC,GAAX,CAAN,GAAwB0C,QAFF,EAEYP,SAAS,CAAClC,GAFtB,CAAX,CAAf;AAKA,SAAK/B,OAAL,CAAaE,MAAb,GAAsB;AAAEC,MAAAA,IAAI,EAAEA,IAAR;AAAcC,MAAAA,EAAE,EAAEA;AAAlB,KAAtB;;AAEA,QAAI,KAAKJ,OAAL,CAAayE,QAAjB,EAA2B;AACvB,WAAKzB,UAAL;AACA,WAAKI,YAAL;AACH;;AAEDjC,IAAAA,SAAS,CAACuD,GAAV,CAAcvE,IAAd,EAAoBC,EAApB;AAEA,SAAKuE,QAAL,CAAcxE,IAAd,EAAoBC,EAApB;AACH,GA3CD;;AA6CAR,EAAAA,SAAS,CAACc,SAAV,CAAoBkE,QAApB,GAA+B,SAASA,QAAT,GAAqB;AAChD,SAAK5B,UAAL;AACA,SAAK6B,MAAL;AACA,SAAKzB,YAAL;;AAEA,QAAI,KAAK/C,IAAT,EAAe;AACX,WAAKA,IAAL,CAAUyE,IAAV;AACH;AACJ,GARD;;AAUAlF,EAAAA,SAAS,CAACc,SAAV,CAAoBqE,aAApB,GAAoC,SAASA,aAAT,GAA0B;AAC1D,QAAItD,GAAG,GAAG,IAAV;AACA,QAAIuD,qBAAqB,GAAGvD,GAAG,CAACN,SAAJ,CAAcnB,OAA1C;AACA,QAAIG,IAAI,GAAG6E,qBAAqB,CAAC7E,IAAjC;AACA,QAAIC,EAAE,GAAG4E,qBAAqB,CAAC5E,EAA/B;AACA,QAAIF,MAAM,GAAGuB,GAAG,CAACzB,OAAJ,CAAYE,MAAzB;AAEAA,IAAAA,MAAM,CAACC,IAAP,GAAcA,IAAd;AACAD,IAAAA,MAAM,CAACE,EAAP,GAAYA,EAAZ;AACH,GATD;;AAWAR,EAAAA,SAAS,CAACc,SAAV,CAAoBsC,UAApB,GAAiC,SAASA,UAAT,GAAuB;AACpD,QAAIvB,GAAG,GAAG,IAAV;AACA,QAAIvB,MAAM,GAAGuB,GAAG,CAACzB,OAAJ,CAAYE,MAAzB;AAAiC,QAAKA,MAAM,KAAK,KAAK,CAArB,EAAyBA,MAAM,GAAG,EAAT;AAC1D,QAAIL,KAAK,GAAG4B,GAAG,CAAC5B,KAAhB;AACA,QAAIoF,OAAO,GAAGpF,KAAK,CAACG,OAAN,CAAcyD,YAA5B;AACA,QAAItD,IAAI,GAAGD,MAAM,CAACC,IAAlB;AACA,QAAIC,EAAE,GAAGF,MAAM,CAACE,EAAhB;;AAEA,SAAK,IAAI8E,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGD,OAAO,CAACE,MAAhC,EAAwCD,GAAG,EAA3C,EAA+C;AAC3C,UAAIxD,IAAI,GAAGuD,OAAO,CAACC,GAAD,CAAlB;;AACA,UAAIxD,IAAI,CAACyC,IAAL,KAAczE,cAAlB,EAAkC;AAC9BgC,QAAAA,IAAI,CAACI,GAAL,GAAW3B,IAAX;AACAuB,QAAAA,IAAI,CAACK,GAAL,GAAW3B,EAAX;AACH;AACJ;AACJ,GAfD;;AAiBAR,EAAAA,SAAS,CAACc,SAAV,CAAoBmE,MAApB,GAA6B,SAASA,MAAT,GAAmB;AAC5C,QAAIpD,GAAG,GAAG,IAAV;AACA,QAAI5B,KAAK,GAAG4B,GAAG,CAAC5B,KAAhB;AACA,QAAIK,MAAM,GAAGuB,GAAG,CAACzB,OAAJ,CAAYE,MAAzB;;AAEA,QAAI,CAACL,KAAK,CAACuF,gBAAN,CAAuB,CAAE,iBAAF,CAAvB,CAAL,EAAoD;AAChD;AACH;;AAED,QAAIzD,QAAQ,GAAG,KAAKA,QAAL,EAAf;AACA,QAAI0D,IAAI,GAAG;AACPlF,MAAAA,IAAI,EAAED,MAAM,CAACC,IADN;AAEPC,MAAAA,EAAE,EAAEF,MAAM,CAACE;AAFJ,KAAX;;AAKA,QAAIuB,QAAQ,CAAC3B,OAAT,CAAiBsF,IAAjB,KAA0B,UAA9B,EAA0C;AACtC,UAAIC,WAAW,GAAG,IAAI3G,gBAAJ,CAAqBM,UAAU,CAAC;AAC9CsG,QAAAA,QAAQ,EAAE;AADoC,OAAD,EAE9C3F,KAAK,CAACG,OAAN,CAAcyD,YAAd,CAA2B,CAA3B,CAF8C,EAEf;AAC9BgC,QAAAA,UAAU,EAAE,CAAEvF,MAAM,CAACC,IAAT,EAAeD,MAAM,CAACE,EAAtB;AADkB,OAFe,CAA/B,EAIdP,KAAK,CAACmB,YAJQ,EAIMhB,OAJxB;AAMAqF,MAAAA,IAAI,CAAClF,IAAL,GAAYtB,WAAW,CAAC0G,WAAW,CAACzD,GAAb,EAAkB,CAACyD,WAAW,CAACG,YAA/B,EAA6CH,WAAW,CAACC,QAAzD,CAAvB;AACAH,MAAAA,IAAI,CAACjF,EAAL,GAAUvB,WAAW,CAAC0G,WAAW,CAACxD,GAAb,EAAkBwD,WAAW,CAACG,YAA9B,EAA4CH,WAAW,CAACC,QAAxD,CAArB;AACH;;AAED,SAAK3F,KAAL,CAAW8F,OAAX,CAAmB,iBAAnB,EAAsCN,IAAtC;AACH,GA3BD;;AA6BAzF,EAAAA,SAAS,CAACc,SAAV,CAAoBkF,KAApB,GAA4B,SAASA,KAAT,CAAgBhC,CAAhB,EAAmB;AAC3C,QAAInC,GAAG,GAAG,IAAV;AACA,QAAIC,IAAI,GAAGD,GAAG,CAAC5B,KAAJ,CAAUqD,SAAV,CAAoBO,YAA/B;AACA,QAAItC,SAAS,GAAGM,GAAG,CAACN,SAApB;AACA,QAAI0E,WAAW,GAAGpE,GAAG,CAACzB,OAAtB;AACA,QAAIE,MAAM,GAAG2F,WAAW,CAAC3F,MAAzB;AACA,QAAIuE,QAAQ,GAAGoB,WAAW,CAACpB,QAA3B;AACA,QAAI9C,QAAQ,GAAG,KAAKA,QAAL,EAAf;AACA,QAAImE,KAAK,GAAGlC,CAAC,CAACkC,KAAd;;AAEA,QAAI,CAAC3E,SAAL,EAAgB;AACZ;AACH;;AAED,QAAI4E,MAAM,GAAGpE,QAAQ,CAACqE,aAAT,CAAuB7E,SAAS,CAACnB,OAAV,CAAkBG,IAAzC,CAAb;AACA,QAAI8F,IAAI,GAAGtE,QAAQ,CAACqE,aAAT,CAAuB7E,SAAS,CAACnB,OAAV,CAAkBI,EAAzC,CAAX;AAEAwD,IAAAA,CAAC,CAACG,aAAF,CAAgBmC,cAAhB;;AAEA,QAAIC,IAAI,CAACC,GAAL,CAASN,KAAT,IAAkB,CAAtB,EAAyB;AACrBA,MAAAA,KAAK,IAAInG,iBAAT;AACH;;AAED,QAAIsG,IAAI,GAAGF,MAAP,GAAgB,CAApB,EAAuB;AACnB5E,MAAAA,SAAS,CAACkF,MAAV,CAAiBP,KAAjB;AACA,WAAKf,aAAL;AACH,KAHD,MAGO;AACHrD,MAAAA,IAAI,CAAC1B,OAAL,CAAa8B,GAAb,GAAmB5B,MAAM,CAACC,IAA1B;AACAD,MAAAA,MAAM,CAACC,IAAP,GAAcuB,IAAI,CAAC4E,UAAL,CAAgB,CAAC1C,CAAC,CAACkC,KAAnB,EAA0BhE,GAAxC;AACH;;AAED,QAAI2C,QAAJ,EAAc;AACV,WAAKzB,UAAL;AACA,WAAKI,YAAL;AACH;;AAEDjC,IAAAA,SAAS,CAACuD,GAAV,CAAcxE,MAAM,CAACC,IAArB,EAA2BD,MAAM,CAACE,EAAlC;AAEA,SAAKuE,QAAL,CAAc,KAAK3E,OAAL,CAAaE,MAAb,CAAoBC,IAAlC,EAAwC,KAAKH,OAAL,CAAaE,MAAb,CAAoBE,EAA5D;AACH,GAvCD;;AAyCAR,EAAAA,SAAS,CAACc,SAAV,CAAoB6F,QAApB,GAA+B,SAASA,QAAT,CAAmB3C,CAAnB,EAAsB;AACjD,SAAKgB,QAAL,CAAchB,CAAd;AACH,GAFD;;AAIAhE,EAAAA,SAAS,CAACc,SAAV,CAAoBiE,QAApB,GAA+B,SAASA,QAAT,CAAmBxE,IAAnB,EAAyBC,EAAzB,EAA6B;AACxD,QAAIyC,QAAQ,GAAG,KAAKhD,KAAL,CAAWqD,SAA1B;;AAEA,QAAI,KAAK7C,IAAT,EAAe;AACX,WAAKA,IAAL,CAAUmG,IAAV,CAAerG,IAAf,EAAqBC,EAArB,EAAyByC,QAAQ,CAAC4D,aAAT,EAAzB;AACH;AACJ,GAND;;AAQA7G,EAAAA,SAAS,CAACc,SAAV,CAAoBgG,YAApB,GAAmC,SAASA,YAAT,CAAuB9C,CAAvB,EAA0B;AACzD,WAAO,KAAK/D,KAAL,CAAW6G,YAAX,CAAwB9C,CAAxB,CAAP;AACH,GAFD;;AAIAhE,EAAAA,SAAS,CAACc,SAAV,CAAoBiG,OAApB,GAA8B,SAASA,OAAT,CAAkB/C,CAAlB,EAAqB;AAC/C,SAAKe,QAAL,CAAcf,CAAC,CAACzD,IAAhB,EAAsByD,CAAC,CAACxD,EAAxB;AAEA,WAAO,KAAKP,KAAL,CAAW8G,OAAX,CAAmB/C,CAAnB,CAAP;AACH,GAJD;;AAMAhE,EAAAA,SAAS,CAACc,SAAV,CAAoBkG,UAApB,GAAiC,SAASA,UAAT,CAAqBhD,CAArB,EAAwB;AACrD,QAAI,KAAKvD,IAAT,EAAe;AACX,WAAKA,IAAL,CAAUyE,IAAV;AACH;;AAED,SAAKC,aAAL;AACA,SAAK/B,UAAL;AACA,SAAK6B,MAAL;AACA,SAAKzB,YAAL;AAEA,WAAO,KAAKvD,KAAL,CAAW+G,UAAX,CAAsBhD,CAAtB,CAAP;AACH,GAXD;;AAaAhE,EAAAA,SAAS,CAACc,SAAV,CAAoBiB,QAApB,GAA+B,SAASA,QAAT,GAAqB;AAChD,QAAIkB,QAAQ,GAAG,KAAKhD,KAAL,CAAWqD,SAA1B;;AAEA,QAAIL,QAAJ,EAAc;AACV,aAAOA,QAAQ,CAACE,iBAAT,CAA2BtD,cAA3B,CAAP;AACH;AACJ,GAND;;AAQAG,EAAAA,SAAS,CAACc,SAAV,CAAoBR,MAApB,GAA6B,SAASA,MAAT,CAAiBC,IAAjB,EAAuBC,EAAvB,EAA2B;AACpD,QAAIF,MAAM,GAAG,KAAKF,OAAL,CAAaE,MAA1B;;AAEA,QAAIC,IAAI,IAAIC,EAAZ,EAAgB;AACZF,MAAAA,MAAM,CAACC,IAAP,GAAc,KAAKrB,SAAL,CAAeqB,IAAf,CAAd;AACAD,MAAAA,MAAM,CAACE,EAAP,GAAY,KAAKtB,SAAL,CAAesB,EAAf,CAAZ;AAEA,WAAK4C,UAAL;AACA,WAAK6B,MAAL;AACA,WAAKzB,YAAL;AAEA,WAAKjC,SAAL,CAAeuD,GAAf,CAAmBvE,IAAnB,EAAyBC,EAAzB;AACH;;AAED,WAAO;AACHD,MAAAA,IAAI,EAAED,MAAM,CAACC,IADV;AAEHC,MAAAA,EAAE,EAAEF,MAAM,CAACE;AAFR,KAAP;AAIH,GAlBD;;AAoBAR,EAAAA,SAAS,CAACiH,KAAV,GAAkB,SAASA,KAAT,CAAgB7G,OAAhB,EAAyB8G,YAAzB,EAAuC;AACrD,QAAK9G,OAAO,KAAK,KAAK,CAAtB,EAA0BA,OAAO,GAAG,EAAV;AAC1B,QAAK8G,YAAY,KAAK,KAAK,CAA3B,EAA+BA,YAAY,GAAG,EAAf;;AAE/B,QAAI9G,OAAO,CAAC+G,MAAZ,EAAoB;AAChB;AACH;;AACD/G,IAAAA,OAAO,CAAC+G,MAAR,GAAiB,IAAjB;AAEA,QAAIC,WAAW,GAAG9H,UAAU,CAAC,EAAD,EAAK4H,YAAY,CAAC7G,SAAlB,EAA6BD,OAAO,CAACC,SAArC,CAA5B;AACA,QAAIkD,KAAK,GAAGnD,OAAO,CAACmD,KAAR,GAAgB,GAAG8D,MAAH,CAAUjH,OAAO,CAACmD,KAAlB,CAA5B;AACA,QAAI+D,WAAW,GAAGhI,UAAU,CAAC,EAAD,EAAK8H,WAAW,CAAC7C,IAAjB,EAAuB;AAAEI,MAAAA,IAAI,EAAE7E;AAAR,KAAvB,CAA5B;;AAEA,QAAI,CAACsH,WAAW,CAAC1G,OAAjB,EAA0B;AACtB4G,MAAAA,WAAW,CAAC5G,OAAZ,GAAsB,KAAtB;AACA4G,MAAAA,WAAW,CAACC,MAAZ,GAAqB,GAArB;AACH;;AAEDhE,IAAAA,KAAK,CAACiE,IAAN,CAAWF,WAAX;AAEAtH,IAAAA,SAAS,CAACyH,UAAV,CAAqBrH,OAArB,EAA8BgH,WAA9B;AACApH,IAAAA,SAAS,CAAC0H,YAAV,CAAuBtH,OAAvB,EAAgCgH,WAAhC,EAA6CF,YAA7C;AACH,GAtBD;;AAwBAlH,EAAAA,SAAS,CAACyH,UAAV,GAAuB,SAASA,UAAT,CAAqBrH,OAArB,EAA8BgH,WAA9B,EAA2C;AAC9D,QAAIxD,MAAM,GAAGwD,WAAW,CAACxD,MAAZ,IAAsB,EAAnC;AACA,QAAI+D,YAAY,GAAGvH,OAAO,CAACyD,YAAR,GAAuB,GAAGwD,MAAH,CAAUjH,OAAO,CAACyD,YAAlB,CAA1C;AACA,QAAI+D,SAAS,GAAGxH,OAAO,CAACyH,SAAR,GAAoB,GAAGR,MAAH,CAAUjH,OAAO,CAACyH,SAAlB,CAApC;AAEA,QAAIC,mBAAmB,GAAGpJ,kBAAkB,CAACkF,MAAD,EAAS/E,qBAAT,CAA5C;AACA,QAAIkJ,WAAW,GAAGD,mBAAmB,CAACvC,MAApB,KAA+B,CAAjD;AAEA,QAAIyC,IAAI,GAAG1I,UAAU,CAAC;AAClBoG,MAAAA,IAAI,EAAE,MADY;AAElBnB,MAAAA,IAAI,EAAEzE,cAFY;AAGlBmI,MAAAA,eAAe,EAAE,CAACF,WAHA;AAIlBG,MAAAA,SAAS,EAAEH,WAJO;AAKlBI,MAAAA,SAAS,EAAE,KALO;AAMlBC,MAAAA,UAAU,EAAE;AAAE1H,QAAAA,OAAO,EAAE;AAAX,OANM;AAOlB2H,MAAAA,OAAO,EAAE;AAAE3H,QAAAA,OAAO,EAAE;AAAX,OAPS;AAQlB4H,MAAAA,MAAM,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAR,OARU;AASlBC,MAAAA,QAAQ,EAAEpB,WAAW,CAACqB,gBATJ;AAUlBC,MAAAA,iBAAiB,EAAE;AACfC,QAAAA,OAAO,EAAE,CAAE,CAAF,CADM;AAEfC,QAAAA,KAAK,EAAE,CAAE,CAAF,EAAK,CAAL,CAFQ;AAGfC,QAAAA,IAAI,EAAE,CAAE,CAAF,EAAK,CAAL,CAHS;AAIfC,QAAAA,KAAK,EAAE,EAJQ;AAKfC,QAAAA,MAAM,EAAE,CAAE,CAAF,CALO;AAMfC,QAAAA,KAAK,EAAE,CAAE,CAAF;AANQ;AAVD,KAAD,CAArB;AAmBA,QAAIC,IAAI,GAAG7B,WAAW,CAACvD,YAAvB;AAEA8D,IAAAA,YAAY,CAACH,IAAb,CACIlI,UAAU,CAAC,EAAD,EAAK0I,IAAL,EAAW;AACjBkB,MAAAA,aAAa,EAAE;AADE,KAAX,EAEPD,IAFO,EAED;AACLtE,MAAAA,IAAI,EAAE9E,cADD;AAELsJ,MAAAA,KAAK,EAAE,IAFF;AAGLvD,MAAAA,QAAQ,EAAE,KAHL;AAILE,MAAAA,YAAY,EAAE,MAJT;AAKLwC,MAAAA,MAAM,EAAE;AAAE5H,QAAAA,OAAO,EAAE;AAAX,OALH;AAML0H,MAAAA,UAAU,EAAE;AAAE1H,QAAAA,OAAO,EAAE;AAAX;AANP,KAFC,CADd,EAUQpB,UAAU,CAAC,EAAD,EAAK0I,IAAL,EAAWiB,IAAX,EAAiB;AAC3BtE,MAAAA,IAAI,EAAE9E,cAAc,GAAG,SADI;AAE3BqJ,MAAAA,aAAa,EAAE,EAFY;AAG3BpD,MAAAA,YAAY,EAAE,MAHa;AAI3BwC,MAAAA,MAAM,EAAE;AAAEc,QAAAA,QAAQ,EAAE;AAAZ,OAJmB;AAK3BC,MAAAA,SAAS,EAAE,EALgB;AAM3BX,MAAAA,iBAAiB,EAAE;AACfC,QAAAA,OAAO,EAAE;AADM,OANQ;AAS3BW,MAAAA,QAAQ,EAAE;AATiB,KAAjB,CAVlB,EAoBQhK,UAAU,CAAC,EAAD,EAAK0I,IAAL,EAAWiB,IAAX,EAAiB;AAC3BtE,MAAAA,IAAI,EAAE9E,cAAc,GAAG,QADI;AAE3BqJ,MAAAA,aAAa,EAAE,GAFY;AAG3Bd,MAAAA,UAAU,EAAE;AACRmB,QAAAA,KAAK,EAAE;AADC,OAHe;AAM3BF,MAAAA,SAAS,EAAE,EANgB;AAO3BF,MAAAA,KAAK,EAAE,IAPoB;AAQ3Bb,MAAAA,MAAM,EAAE;AAAE5H,QAAAA,OAAO,EAAE,KAAX;AAAkB8I,QAAAA,MAAM,EAAE;AAA1B,OARmB;AAS3BF,MAAAA,QAAQ,EAAE;AATiB,KAAjB,CApBlB;AAiCA1B,IAAAA,SAAS,CAACJ,IAAV,CAAelI,UAAU,CAAC;AACtBqF,MAAAA,IAAI,EAAE9E,cADgB;AAEtB0E,MAAAA,IAAI,EAAEzE,cAFgB;AAGtB2J,MAAAA,cAAc,EAAE;AACZ/I,QAAAA,OAAO,EAAE;AADG,OAHM;AAMtBA,MAAAA,OAAO,EAAE;AANa,KAAD,EAOtB0G,WAAW,CAACS,SAPU,CAAzB;AAQH,GAtED;;AAwEA7H,EAAAA,SAAS,CAAC0H,YAAV,GAAyB,SAASA,YAAT,CAAuBtH,OAAvB,EAAgCgH,WAAhC,EAA6CF,YAA7C,EAA2D;AAChF,QAAItD,MAAM,GAAGxD,OAAO,CAACwD,MAAR,GAAiBxD,OAAO,CAACwD,MAAR,IAAkB,EAAhD;AACA,QAAI8F,eAAe,GAAG,GAAGrC,MAAH,CAAUD,WAAW,CAACxD,MAAZ,IAAsB,EAAhC,CAAtB;AACA,QAAI+F,YAAY,GAAGzC,YAAY,CAACyC,YAAhC;AACA,QAAIC,QAAQ,GAAGxC,WAAW,CAACyC,cAA3B;;AAEA,SAAK,IAAIvE,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGoE,eAAe,CAACnE,MAAxC,EAAgDD,GAAG,EAAnD,EAAuD;AACnD1B,MAAAA,MAAM,CAAC4D,IAAP,CACIlI,UAAU,CAAC;AACPwK,QAAAA,KAAK,EAAEH,YAAY,CAACrE,GAAG,GAAGqE,YAAY,CAACpE,MAApB,CADZ;AAEPwE,QAAAA,aAAa,EAAE3C,WAAW,CAAC4C,SAFpB;AAGPC,QAAAA,eAAe,EAAE,KAHV;AAIP5B,QAAAA,OAAO,EAAE;AACL3H,UAAAA,OAAO,EAAE;AADJ;AAJF,OAAD,EAOPkJ,QAPO,EAOGF,eAAe,CAACpE,GAAD,CAPlB,EAOyB;AAC/BxD,QAAAA,IAAI,EAAEjC,cADyB;AAE/BgE,QAAAA,YAAY,EAAEhE,cAFiB;AAG/B2I,QAAAA,QAAQ,EAAEpB,WAAW,CAACqB;AAHS,OAPzB,CADd;AAcH;AACJ,GAtBD;;AAwBA,SAAOzI,SAAP;AACH,CAvegB,CAuefX,KAvee,CAAjB;;AAyeA,SAAS6K,YAAT,GAAwB,CAAG;;AAC3B,SAAS3H,KAAT,CAAerC,GAAf,EAAoB;AAChBgK,EAAAA,YAAY,CAACpJ,SAAb,GAAyBZ,GAAzB;AACA,SAAO,IAAIgK,YAAJ,EAAP;AACH;;AAED,eAAelK,SAAf","sourcesContent":["import NavigatorHint from './navigator-hint';\nimport { Selection, filterSeriesByType } from '../chart';\nimport { DRAG, DRAG_END, EQUALLY_SPACED_SERIES, ZOOM, ZOOM_END } from '../chart/constants';\nimport { DateCategoryAxis } from '../core';\nimport { addDuration, parseDate, toDate, toTime } from '../date-utils';\nimport { Class, deepExtend, defined, getTemplate, InstanceObserver, last, limitValue, valueOrDefault } from '../common';\nimport { NAVIGATOR_AXIS, NAVIGATOR_PANE } from './constants';\n\nvar ZOOM_ACCELERATION = 3;\n\nvar Navigator = (function (Class) {\n    function Navigator(chart) {\n        var obj;\n\n        Class.call(this);\n\n        this.chart = chart;\n        var options = this.options = deepExtend({}, this.options, chart.options.navigator);\n        var select = options.select;\n        if (select) {\n            select.from = this.parseDate(select.from);\n            select.to = this.parseDate(select.to);\n        }\n\n        if (!defined(options.hint.visible)) {\n            options.hint.visible = options.visible;\n        }\n\n        this.chartObserver = new InstanceObserver(this, ( obj = {}, obj[DRAG] = '_drag', obj[DRAG_END] = '_dragEnd', obj[ZOOM] = '_zoom', obj[ZOOM_END] = '_zoomEnd', obj ));\n        chart.addObserver(this.chartObserver);\n    }\n\n    if ( Class ) Navigator.__proto__ = Class;\n    Navigator.prototype = Object.create( Class && Class.prototype );\n    Navigator.prototype.constructor = Navigator;\n\n    Navigator.prototype.parseDate = function parseDate$1 (value) {\n        return parseDate(this.chart.chartService.intl, value);\n    };\n\n    Navigator.prototype.clean = function clean () {\n        if (this.selection) {\n            this.selection.destroy();\n            this.selection = null;\n        }\n\n        if (this.hint) {\n            this.hint.destroy();\n            this.hint = null;\n        }\n    };\n\n    Navigator.prototype.destroy = function destroy () {\n        if (this.chart) {\n            this.chart.removeObserver(this.chartObserver);\n            delete this.chart;\n        }\n\n        this.clean();\n    };\n\n    Navigator.prototype.redraw = function redraw () {\n        this._redrawSelf();\n        this.initSelection();\n    };\n\n    Navigator.prototype.initSelection = function initSelection () {\n        var ref = this;\n        var chart = ref.chart;\n        var options = ref.options;\n        var axis = this.mainAxis();\n        var ref$1 = axis.roundedRange();\n        var min = ref$1.min;\n        var max = ref$1.max;\n        var ref$2 = options.select;\n        var from = ref$2.from;\n        var to = ref$2.to;\n        var mousewheel = ref$2.mousewheel;\n        var axisClone = clone(axis);\n\n        if (axis.categoriesCount() === 0) {\n            return;\n        }\n\n        this.clean();\n\n        // \"Freeze\" the selection axis position until the next redraw\n        axisClone.box = axis.box;\n\n        this.selection = new Selection(chart, axisClone, {\n            min: min,\n            max: max,\n            from: from || min,\n            to: to || max,\n            mousewheel: valueOrDefault(mousewheel, { zoom: \"left\" }),\n            visible: options.visible\n        }, new InstanceObserver(this, {\n            selectStart: '_selectStart',\n            select: '_select',\n            selectEnd: '_selectEnd'\n        }));\n\n        if (options.hint.visible) {\n            this.hint = new NavigatorHint(chart.element, chart.chartService, {\n                min: min,\n                max: max,\n                template: getTemplate(options.hint),\n                format: options.hint.format\n            });\n        }\n    };\n\n    Navigator.prototype.setRange = function setRange () {\n        var plotArea = this.chart._createPlotArea(true);\n        var axis = plotArea.namedCategoryAxes[NAVIGATOR_AXIS];\n\n        var ref = axis.roundedRange();\n        var min = ref.min;\n        var max = ref.max;\n\n        var select = this.options.select || {};\n        var from = select.from || min;\n        if (from < min) {\n            from = min;\n        }\n\n        var to = select.to || max;\n        if (to > max) {\n            to = max;\n        }\n\n        this.options.select = deepExtend({}, select, {\n            from: from,\n            to: to\n        });\n\n        this.filterAxes();\n    };\n\n    Navigator.prototype._redrawSelf = function _redrawSelf (silent) {\n        var plotArea = this.chart._plotArea;\n\n        if (plotArea) {\n            plotArea.redraw(last(plotArea.panes), silent);\n        }\n    };\n\n    Navigator.prototype.redrawSlaves = function redrawSlaves () {\n        var chart = this.chart;\n        var plotArea = chart._plotArea;\n        var slavePanes = plotArea.panes.slice(0, -1);\n\n        // Update the original series and categoryAxis before partial refresh.\n        plotArea.srcSeries = chart.options.series;\n        plotArea.options.categoryAxis = chart.options.categoryAxis;\n        plotArea.clearSeriesPointsCache();\n\n        plotArea.redraw(slavePanes);\n    };\n\n    Navigator.prototype._drag = function _drag (e) {\n        var ref = this;\n        var chart = ref.chart;\n        var selection = ref.selection;\n        var coords = chart._eventCoordinates(e.originalEvent);\n        var navigatorAxis = this.mainAxis();\n        var naviRange = navigatorAxis.roundedRange();\n        var inNavigator = navigatorAxis.pane.box.containsPoint(coords);\n        var axis = chart._plotArea.categoryAxis;\n        var range = e.axisRanges[axis.options.name];\n        var select = this.options.select;\n        var duration;\n\n        if (!range || inNavigator || !selection) {\n            return;\n        }\n\n        if (select.from && select.to) {\n            duration = toTime(select.to) - toTime(select.from);\n        } else {\n            duration = toTime(selection.options.to) - toTime(selection.options.from);\n        }\n\n        var from = toDate(limitValue(\n            toTime(range.min),\n            naviRange.min, toTime(naviRange.max) - duration\n        ));\n\n        var to = toDate(limitValue(\n            toTime(from) + duration,\n            toTime(naviRange.min) + duration, naviRange.max\n        ));\n\n        this.options.select = { from: from, to: to };\n\n        if (this.options.liveDrag) {\n            this.filterAxes();\n            this.redrawSlaves();\n        }\n\n        selection.set(from, to);\n\n        this.showHint(from, to);\n    };\n\n    Navigator.prototype._dragEnd = function _dragEnd () {\n        this.filterAxes();\n        this.filter();\n        this.redrawSlaves();\n\n        if (this.hint) {\n            this.hint.hide();\n        }\n    };\n\n    Navigator.prototype.readSelection = function readSelection () {\n        var ref = this;\n        var ref_selection_options = ref.selection.options;\n        var from = ref_selection_options.from;\n        var to = ref_selection_options.to;\n        var select = ref.options.select;\n\n        select.from = from;\n        select.to = to;\n    };\n\n    Navigator.prototype.filterAxes = function filterAxes () {\n        var ref = this;\n        var select = ref.options.select; if ( select === void 0 ) select = { };\n        var chart = ref.chart;\n        var allAxes = chart.options.categoryAxis;\n        var from = select.from;\n        var to = select.to;\n\n        for (var idx = 0; idx < allAxes.length; idx++) {\n            var axis = allAxes[idx];\n            if (axis.pane !== NAVIGATOR_PANE) {\n                axis.min = from;\n                axis.max = to;\n            }\n        }\n    };\n\n    Navigator.prototype.filter = function filter () {\n        var ref = this;\n        var chart = ref.chart;\n        var select = ref.options.select;\n\n        if (!chart.requiresHandlers([ \"navigatorFilter\" ])) {\n            return;\n        }\n\n        var mainAxis = this.mainAxis();\n        var args = {\n            from: select.from,\n            to: select.to\n        };\n\n        if (mainAxis.options.type !== 'category') {\n            var axisOptions = new DateCategoryAxis(deepExtend({\n                baseUnit: \"fit\"\n            }, chart.options.categoryAxis[0], {\n                categories: [ select.from, select.to ]\n            }), chart.chartService).options;\n\n            args.from = addDuration(axisOptions.min, -axisOptions.baseUnitStep, axisOptions.baseUnit);\n            args.to = addDuration(axisOptions.max, axisOptions.baseUnitStep, axisOptions.baseUnit);\n        }\n\n        this.chart.trigger(\"navigatorFilter\", args);\n    };\n\n    Navigator.prototype._zoom = function _zoom (e) {\n        var ref = this;\n        var axis = ref.chart._plotArea.categoryAxis;\n        var selection = ref.selection;\n        var ref_options = ref.options;\n        var select = ref_options.select;\n        var liveDrag = ref_options.liveDrag;\n        var mainAxis = this.mainAxis();\n        var delta = e.delta;\n\n        if (!selection) {\n            return;\n        }\n\n        var fromIx = mainAxis.categoryIndex(selection.options.from);\n        var toIx = mainAxis.categoryIndex(selection.options.to);\n\n        e.originalEvent.preventDefault();\n\n        if (Math.abs(delta) > 1) {\n            delta *= ZOOM_ACCELERATION;\n        }\n\n        if (toIx - fromIx > 1) {\n            selection.expand(delta);\n            this.readSelection();\n        } else {\n            axis.options.min = select.from;\n            select.from = axis.scaleRange(-e.delta).min;\n        }\n\n        if (liveDrag) {\n            this.filterAxes();\n            this.redrawSlaves();\n        }\n\n        selection.set(select.from, select.to);\n\n        this.showHint(this.options.select.from, this.options.select.to);\n    };\n\n    Navigator.prototype._zoomEnd = function _zoomEnd (e) {\n        this._dragEnd(e);\n    };\n\n    Navigator.prototype.showHint = function showHint (from, to) {\n        var plotArea = this.chart._plotArea;\n\n        if (this.hint) {\n            this.hint.show(from, to, plotArea.backgroundBox());\n        }\n    };\n\n    Navigator.prototype._selectStart = function _selectStart (e) {\n        return this.chart._selectStart(e);\n    };\n\n    Navigator.prototype._select = function _select (e) {\n        this.showHint(e.from, e.to);\n\n        return this.chart._select(e);\n    };\n\n    Navigator.prototype._selectEnd = function _selectEnd (e) {\n        if (this.hint) {\n            this.hint.hide();\n        }\n\n        this.readSelection();\n        this.filterAxes();\n        this.filter();\n        this.redrawSlaves();\n\n        return this.chart._selectEnd(e);\n    };\n\n    Navigator.prototype.mainAxis = function mainAxis () {\n        var plotArea = this.chart._plotArea;\n\n        if (plotArea) {\n            return plotArea.namedCategoryAxes[NAVIGATOR_AXIS];\n        }\n    };\n\n    Navigator.prototype.select = function select (from, to) {\n        var select = this.options.select;\n\n        if (from && to) {\n            select.from = this.parseDate(from);\n            select.to = this.parseDate(to);\n\n            this.filterAxes();\n            this.filter();\n            this.redrawSlaves();\n\n            this.selection.set(from, to);\n        }\n\n        return {\n            from: select.from,\n            to: select.to\n        };\n    };\n\n    Navigator.setup = function setup (options, themeOptions) {\n        if ( options === void 0 ) options = {};\n        if ( themeOptions === void 0 ) themeOptions = {};\n\n        if (options.__navi) {\n            return;\n        }\n        options.__navi = true;\n\n        var naviOptions = deepExtend({}, themeOptions.navigator, options.navigator);\n        var panes = options.panes = [].concat(options.panes);\n        var paneOptions = deepExtend({}, naviOptions.pane, { name: NAVIGATOR_PANE });\n\n        if (!naviOptions.visible) {\n            paneOptions.visible = false;\n            paneOptions.height = 0.1;\n        }\n\n        panes.push(paneOptions);\n\n        Navigator.attachAxes(options, naviOptions);\n        Navigator.attachSeries(options, naviOptions, themeOptions);\n    };\n\n    Navigator.attachAxes = function attachAxes (options, naviOptions) {\n        var series = naviOptions.series || [];\n        var categoryAxes = options.categoryAxis = [].concat(options.categoryAxis);\n        var valueAxes = options.valueAxis = [].concat(options.valueAxis);\n\n        var equallySpacedSeries = filterSeriesByType(series, EQUALLY_SPACED_SERIES);\n        var justifyAxis = equallySpacedSeries.length === 0;\n\n        var base = deepExtend({\n            type: \"date\",\n            pane: NAVIGATOR_PANE,\n            roundToBaseUnit: !justifyAxis,\n            justified: justifyAxis,\n            _collapse: false,\n            majorTicks: { visible: true },\n            tooltip: { visible: false },\n            labels: { step: 1 },\n            autoBind: naviOptions.autoBindElements,\n            autoBaseUnitSteps: {\n                minutes: [ 1 ],\n                hours: [ 1, 2 ],\n                days: [ 1, 2 ],\n                weeks: [],\n                months: [ 1 ],\n                years: [ 1 ]\n            }\n        });\n        var user = naviOptions.categoryAxis;\n\n        categoryAxes.push(\n            deepExtend({}, base, {\n                maxDateGroups: 200\n            }, user, {\n                name: NAVIGATOR_AXIS,\n                title: null,\n                baseUnit: \"fit\",\n                baseUnitStep: \"auto\",\n                labels: { visible: false },\n                majorTicks: { visible: false }\n            }), deepExtend({}, base, user, {\n                name: NAVIGATOR_AXIS + \"_labels\",\n                maxDateGroups: 20,\n                baseUnitStep: \"auto\",\n                labels: { position: \"\" },\n                plotBands: [],\n                autoBaseUnitSteps: {\n                    minutes: []\n                },\n                _overlap: true\n            }), deepExtend({}, base, user, {\n                name: NAVIGATOR_AXIS + \"_ticks\",\n                maxDateGroups: 200,\n                majorTicks: {\n                    width: 0.5\n                },\n                plotBands: [],\n                title: null,\n                labels: { visible: false, mirror: true },\n                _overlap: true\n            })\n        );\n\n        valueAxes.push(deepExtend({\n            name: NAVIGATOR_AXIS,\n            pane: NAVIGATOR_PANE,\n            majorGridLines: {\n                visible: false\n            },\n            visible: false\n        }, naviOptions.valueAxis));\n    };\n\n    Navigator.attachSeries = function attachSeries (options, naviOptions, themeOptions) {\n        var series = options.series = options.series || [];\n        var navigatorSeries = [].concat(naviOptions.series || []);\n        var seriesColors = themeOptions.seriesColors;\n        var defaults = naviOptions.seriesDefaults;\n\n        for (var idx = 0; idx < navigatorSeries.length; idx++) {\n            series.push(\n                deepExtend({\n                    color: seriesColors[idx % seriesColors.length],\n                    categoryField: naviOptions.dateField,\n                    visibleInLegend: false,\n                    tooltip: {\n                        visible: false\n                    }\n                }, defaults, navigatorSeries[idx], {\n                    axis: NAVIGATOR_AXIS,\n                    categoryAxis: NAVIGATOR_AXIS,\n                    autoBind: naviOptions.autoBindElements\n                })\n            );\n        }\n    };\n\n    return Navigator;\n}(Class));\n\nfunction ClonedObject() { }\nfunction clone(obj) {\n    ClonedObject.prototype = obj;\n    return new ClonedObject();\n}\n\nexport default Navigator;\n"]},"metadata":{},"sourceType":"module"}