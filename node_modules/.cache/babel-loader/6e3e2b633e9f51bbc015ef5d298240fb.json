{"ast":null,"code":"import ScatterChart from '../scatter-charts/scatter-chart';\nimport Bubble from './bubble';\nimport { INITIAL_ANIMATION_DURATION, BUBBLE } from '../constants';\nimport { MIN_VALUE, CIRCLE } from '../../common/constants';\nimport { deepExtend, isFunction, setDefaultOptions, valueOrDefault } from '../../common';\n\nvar BubbleChart = function (ScatterChart) {\n  function BubbleChart() {\n    ScatterChart.apply(this, arguments);\n  }\n\n  if (ScatterChart) BubbleChart.__proto__ = ScatterChart;\n  BubbleChart.prototype = Object.create(ScatterChart && ScatterChart.prototype);\n  BubbleChart.prototype.constructor = BubbleChart;\n\n  BubbleChart.prototype._initFields = function _initFields() {\n    this._maxSize = MIN_VALUE;\n\n    ScatterChart.prototype._initFields.call(this);\n  };\n\n  BubbleChart.prototype.addValue = function addValue(value, fields) {\n    if (value.size !== null && (value.size > 0 || value.size < 0 && fields.series.negativeValues.visible)) {\n      this._maxSize = Math.max(this._maxSize, Math.abs(value.size));\n      ScatterChart.prototype.addValue.call(this, value, fields);\n    } else {\n      this.points.push(null);\n      this.seriesPoints[fields.seriesIx].push(null);\n    }\n  };\n\n  BubbleChart.prototype.reflow = function reflow(box) {\n    this.updateBubblesSize(box);\n    ScatterChart.prototype.reflow.call(this, box);\n  };\n\n  BubbleChart.prototype.pointType = function pointType() {\n    return Bubble;\n  };\n\n  BubbleChart.prototype.createPoint = function createPoint(value, fields) {\n    var series = fields.series;\n    var pointsCount = series.data.length;\n    var delay = fields.pointIx * (INITIAL_ANIMATION_DURATION / pointsCount);\n    var animationOptions = {\n      delay: delay,\n      duration: INITIAL_ANIMATION_DURATION - delay,\n      type: BUBBLE\n    };\n    var color = fields.color || series.color;\n\n    if (value.size < 0 && series.negativeValues.visible) {\n      color = valueOrDefault(series.negativeValues.color, color);\n    }\n\n    var pointOptions = deepExtend({\n      labels: {\n        animation: {\n          delay: delay,\n          duration: INITIAL_ANIMATION_DURATION - delay\n        }\n      }\n    }, this.pointOptions(series, fields.seriesIx), {\n      markers: {\n        type: CIRCLE,\n        border: series.border,\n        opacity: series.opacity,\n        animation: animationOptions\n      }\n    });\n    pointOptions = this.evalPointOptions(pointOptions, value, fields);\n\n    if (isFunction(series.color)) {\n      color = pointOptions.color;\n    }\n\n    pointOptions.markers.background = color;\n    var point = new Bubble(value, pointOptions);\n    point.color = color;\n    this.append(point);\n    return point;\n  };\n\n  BubbleChart.prototype.updateBubblesSize = function updateBubblesSize(box) {\n    var this$1 = this;\n    var ref = this;\n    var series = ref.options.series;\n    var boxSize = Math.min(box.width(), box.height());\n\n    for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n      var currentSeries = series[seriesIx];\n      var seriesPoints = this$1.seriesPoints[seriesIx];\n      var minSize = currentSeries.minSize || Math.max(boxSize * 0.02, 10);\n      var maxSize = currentSeries.maxSize || boxSize * 0.2;\n      var minR = minSize / 2;\n      var maxR = maxSize / 2;\n      var minArea = Math.PI * minR * minR;\n      var maxArea = Math.PI * maxR * maxR;\n      var areaRange = maxArea - minArea;\n      var areaRatio = areaRange / this$1._maxSize;\n\n      for (var pointIx = 0; pointIx < seriesPoints.length; pointIx++) {\n        var point = seriesPoints[pointIx];\n\n        if (point) {\n          var area = Math.abs(point.value.size) * areaRatio;\n          var radius = Math.sqrt((minArea + area) / Math.PI);\n          var baseZIndex = valueOrDefault(point.options.zIndex, 0);\n          var zIndex = baseZIndex + (1 - radius / maxR);\n          deepExtend(point.options, {\n            zIndex: zIndex,\n            markers: {\n              size: radius * 2,\n              zIndex: zIndex\n            },\n            labels: {\n              zIndex: zIndex + 1\n            }\n          });\n        }\n      }\n    }\n  };\n\n  BubbleChart.prototype.formatPointValue = function formatPointValue(point, format) {\n    var value = point.value;\n    return this.chartService.format.auto(format, value.x, value.y, value.size, point.category);\n  };\n\n  BubbleChart.prototype.createAnimation = function createAnimation() {};\n\n  BubbleChart.prototype.createVisual = function createVisual() {};\n\n  return BubbleChart;\n}(ScatterChart);\n\nsetDefaultOptions(BubbleChart, {\n  tooltip: {\n    format: \"{3}\"\n  },\n  labels: {\n    format: \"{3}\"\n  }\n});\nexport default BubbleChart;","map":{"version":3,"sources":["/Users/lazybaccha/Documents/Honeywell/SBE/node_modules/@progress/kendo-charts/dist/es/chart/bubble-chart/bubble-chart.js"],"names":["ScatterChart","Bubble","INITIAL_ANIMATION_DURATION","BUBBLE","MIN_VALUE","CIRCLE","deepExtend","isFunction","setDefaultOptions","valueOrDefault","BubbleChart","apply","arguments","__proto__","prototype","Object","create","constructor","_initFields","_maxSize","call","addValue","value","fields","size","series","negativeValues","visible","Math","max","abs","points","push","seriesPoints","seriesIx","reflow","box","updateBubblesSize","pointType","createPoint","pointsCount","data","length","delay","pointIx","animationOptions","duration","type","color","pointOptions","labels","animation","markers","border","opacity","evalPointOptions","background","point","append","this$1","ref","options","boxSize","min","width","height","currentSeries","minSize","maxSize","minR","maxR","minArea","PI","maxArea","areaRange","areaRatio","area","radius","sqrt","baseZIndex","zIndex","formatPointValue","format","chartService","auto","x","y","category","createAnimation","createVisual","tooltip"],"mappings":"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","sourcesContent":["import ScatterChart from '../scatter-charts/scatter-chart';\nimport Bubble from './bubble';\n\nimport { INITIAL_ANIMATION_DURATION, BUBBLE } from '../constants';\n\nimport { MIN_VALUE, CIRCLE } from '../../common/constants';\nimport { deepExtend, isFunction, setDefaultOptions, valueOrDefault } from '../../common';\n\nvar BubbleChart = (function (ScatterChart) {\n    function BubbleChart () {\n        ScatterChart.apply(this, arguments);\n    }\n\n    if ( ScatterChart ) BubbleChart.__proto__ = ScatterChart;\n    BubbleChart.prototype = Object.create( ScatterChart && ScatterChart.prototype );\n    BubbleChart.prototype.constructor = BubbleChart;\n\n    BubbleChart.prototype._initFields = function _initFields () {\n        this._maxSize = MIN_VALUE;\n        ScatterChart.prototype._initFields.call(this);\n    };\n\n    BubbleChart.prototype.addValue = function addValue (value, fields) {\n        if (value.size !== null && (value.size > 0 || (value.size < 0 && fields.series.negativeValues.visible))) {\n            this._maxSize = Math.max(this._maxSize, Math.abs(value.size));\n            ScatterChart.prototype.addValue.call(this, value, fields);\n        } else {\n            this.points.push(null);\n            this.seriesPoints[fields.seriesIx].push(null);\n        }\n    };\n\n    BubbleChart.prototype.reflow = function reflow (box) {\n        this.updateBubblesSize(box);\n        ScatterChart.prototype.reflow.call(this, box);\n    };\n\n    BubbleChart.prototype.pointType = function pointType () {\n        return Bubble;\n    };\n\n    BubbleChart.prototype.createPoint = function createPoint (value, fields) {\n        var series = fields.series;\n        var pointsCount = series.data.length;\n        var delay = fields.pointIx * (INITIAL_ANIMATION_DURATION / pointsCount);\n        var animationOptions = {\n            delay: delay,\n            duration: INITIAL_ANIMATION_DURATION - delay,\n            type: BUBBLE\n        };\n\n        var color = fields.color || series.color;\n        if (value.size < 0 && series.negativeValues.visible) {\n            color = valueOrDefault(\n                series.negativeValues.color, color\n            );\n        }\n\n        var pointOptions = deepExtend({\n            labels: {\n                animation: {\n                    delay: delay,\n                    duration: INITIAL_ANIMATION_DURATION - delay\n                }\n            }\n        }, this.pointOptions(series, fields.seriesIx), {\n            markers: {\n                type: CIRCLE,\n                border: series.border,\n                opacity: series.opacity,\n                animation: animationOptions\n            }\n        });\n\n        pointOptions = this.evalPointOptions(pointOptions, value, fields);\n        if (isFunction(series.color)) {\n            color = pointOptions.color;\n        }\n\n        pointOptions.markers.background = color;\n\n        var point = new Bubble(value, pointOptions);\n        point.color = color;\n\n        this.append(point);\n\n        return point;\n    };\n\n    BubbleChart.prototype.updateBubblesSize = function updateBubblesSize (box) {\n        var this$1 = this;\n\n        var ref = this;\n        var series = ref.options.series;\n        var boxSize = Math.min(box.width(), box.height());\n\n        for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n            var currentSeries = series[seriesIx];\n            var seriesPoints = this$1.seriesPoints[seriesIx];\n            var minSize = currentSeries.minSize || Math.max(boxSize * 0.02, 10);\n            var maxSize = currentSeries.maxSize || boxSize * 0.2;\n            var minR = minSize / 2;\n            var maxR = maxSize / 2;\n            var minArea = Math.PI * minR * minR;\n            var maxArea = Math.PI * maxR * maxR;\n            var areaRange = maxArea - minArea;\n            var areaRatio = areaRange / this$1._maxSize;\n\n            for (var pointIx = 0; pointIx < seriesPoints.length; pointIx++) {\n                var point = seriesPoints[pointIx];\n                if (point) {\n                    var area = Math.abs(point.value.size) * areaRatio;\n                    var radius = Math.sqrt((minArea + area) / Math.PI);\n                    var baseZIndex = valueOrDefault(point.options.zIndex, 0);\n                    var zIndex = baseZIndex + (1 - radius / maxR);\n\n                    deepExtend(point.options, {\n                        zIndex: zIndex,\n                        markers: {\n                            size: radius * 2,\n                            zIndex: zIndex\n                        },\n                        labels: {\n                            zIndex: zIndex + 1\n                        }\n                    });\n                }\n            }\n        }\n    };\n\n    BubbleChart.prototype.formatPointValue = function formatPointValue (point, format) {\n        var value = point.value;\n        return this.chartService.format.auto(format, value.x, value.y, value.size, point.category);\n    };\n\n    BubbleChart.prototype.createAnimation = function createAnimation () {};\n    BubbleChart.prototype.createVisual = function createVisual () {};\n\n    return BubbleChart;\n}(ScatterChart));\n\nsetDefaultOptions(BubbleChart, {\n    tooltip: {\n        format: \"{3}\"\n    },\n    labels: {\n        format: \"{3}\"\n    }\n});\n\nexport default BubbleChart;"]},"metadata":{},"sourceType":"module"}