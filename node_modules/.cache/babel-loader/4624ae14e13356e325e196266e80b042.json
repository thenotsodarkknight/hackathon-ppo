{"ast":null,"code":"import { ChartElement, Box } from '../../core';\nimport ClipAnimationMixin from '../mixins/clip-animation-mixin';\nimport ErrorRangeCalculator from '../error-bars/error-range-calculator';\nimport ScatterErrorBar from '../error-bars/scatter-error-bar';\nimport LinePoint from '../line-chart/line-point';\nimport CategoricalChart from '../categorical-chart';\nimport hasValue from '../utils/has-value';\nimport evalOptions from '../utils/eval-options';\nimport { deepExtend, isNumber, isString, defined, isFunction, setDefaultOptions } from '../../common';\nimport { X, Y, MIN_VALUE, MAX_VALUE } from '../../common/constants';\nimport { parseDate } from '../../date-utils';\n\nvar ScatterChart = function (ChartElement) {\n  function ScatterChart(plotArea, options) {\n    ChartElement.call(this, options);\n    this.plotArea = plotArea;\n    this.chartService = plotArea.chartService;\n\n    this._initFields();\n\n    this.render();\n  }\n\n  if (ChartElement) ScatterChart.__proto__ = ChartElement;\n  ScatterChart.prototype = Object.create(ChartElement && ChartElement.prototype);\n  ScatterChart.prototype.constructor = ScatterChart;\n\n  ScatterChart.prototype._initFields = function _initFields() {\n    // X and Y axis ranges grouped by name, e.g.:\n    // primary: { min: 0, max: 1 }\n    this.xAxisRanges = {};\n    this.yAxisRanges = {};\n    this.points = [];\n    this.seriesPoints = [];\n    this.seriesOptions = [];\n    this._evalSeries = [];\n  };\n\n  ScatterChart.prototype.render = function render() {\n    this.traverseDataPoints(this.addValue.bind(this));\n  };\n\n  ScatterChart.prototype.addErrorBar = function addErrorBar(point, field, fields) {\n    var value = point.value[field];\n    var valueErrorField = field + \"Value\";\n    var lowField = field + \"ErrorLow\";\n    var highField = field + \"ErrorHigh\";\n    var seriesIx = fields.seriesIx;\n    var series = fields.series;\n    var errorBars = point.options.errorBars;\n    var lowValue = fields[lowField];\n    var highValue = fields[highField];\n\n    if (isNumber(value)) {\n      var errorRange;\n\n      if (isNumber(lowValue) && isNumber(highValue)) {\n        errorRange = {\n          low: lowValue,\n          high: highValue\n        };\n      }\n\n      if (errorBars && defined(errorBars[valueErrorField])) {\n        this.seriesErrorRanges = this.seriesErrorRanges || {\n          x: [],\n          y: []\n        };\n        this.seriesErrorRanges[field][seriesIx] = this.seriesErrorRanges[field][seriesIx] || new ErrorRangeCalculator(errorBars[valueErrorField], series, field);\n        errorRange = this.seriesErrorRanges[field][seriesIx].getErrorRange(value, errorBars[valueErrorField]);\n      }\n\n      if (errorRange) {\n        this.addPointErrorBar(errorRange, point, field);\n      }\n    }\n  };\n\n  ScatterChart.prototype.addPointErrorBar = function addPointErrorBar(errorRange, point, field) {\n    var low = errorRange.low;\n    var high = errorRange.high;\n    var series = point.series;\n    var options = point.options.errorBars;\n    var isVertical = field === Y;\n    var item = {};\n    point[field + \"Low\"] = low;\n    point[field + \"High\"] = high;\n    point.errorBars = point.errorBars || [];\n    var errorBar = new ScatterErrorBar(low, high, isVertical, this, series, options);\n    point.errorBars.push(errorBar);\n    point.append(errorBar);\n    item[field] = low;\n    this.updateRange(item, series);\n    item[field] = high;\n    this.updateRange(item, series);\n  };\n\n  ScatterChart.prototype.addValue = function addValue(value, fields) {\n    var x = value.x;\n    var y = value.y;\n    var seriesIx = fields.seriesIx;\n    var series = this.options.series[seriesIx];\n    var missingValues = this.seriesMissingValues(series);\n    var seriesPoints = this.seriesPoints[seriesIx];\n    var pointValue = value;\n\n    if (!(hasValue(x) && hasValue(y))) {\n      pointValue = this.createMissingValue(pointValue, missingValues);\n    }\n\n    var point;\n\n    if (pointValue) {\n      point = this.createPoint(pointValue, fields);\n\n      if (point) {\n        Object.assign(point, fields);\n        this.addErrorBar(point, X, fields);\n        this.addErrorBar(point, Y, fields);\n      }\n\n      this.updateRange(pointValue, fields.series);\n    }\n\n    this.points.push(point);\n    seriesPoints.push(point);\n  };\n\n  ScatterChart.prototype.seriesMissingValues = function seriesMissingValues(series) {\n    return series.missingValues;\n  };\n\n  ScatterChart.prototype.createMissingValue = function createMissingValue() {};\n\n  ScatterChart.prototype.updateRange = function updateRange(value, series) {\n    var intlService = this.chartService.intl;\n    var xAxisName = series.xAxis;\n    var yAxisName = series.yAxis;\n    var x = value.x;\n    var y = value.y;\n    var xAxisRange = this.xAxisRanges[xAxisName];\n    var yAxisRange = this.yAxisRanges[yAxisName];\n\n    if (hasValue(x)) {\n      xAxisRange = this.xAxisRanges[xAxisName] = xAxisRange || {\n        min: MAX_VALUE,\n        max: MIN_VALUE\n      };\n\n      if (isString(x)) {\n        x = parseDate(intlService, x);\n      }\n\n      xAxisRange.min = Math.min(xAxisRange.min, x);\n      xAxisRange.max = Math.max(xAxisRange.max, x);\n    }\n\n    if (hasValue(y)) {\n      yAxisRange = this.yAxisRanges[yAxisName] = yAxisRange || {\n        min: MAX_VALUE,\n        max: MIN_VALUE\n      };\n\n      if (isString(y)) {\n        y = parseDate(intlService, y);\n      }\n\n      yAxisRange.min = Math.min(yAxisRange.min, y);\n      yAxisRange.max = Math.max(yAxisRange.max, y);\n    }\n  };\n\n  ScatterChart.prototype.evalPointOptions = function evalPointOptions(options, value, fields) {\n    var series = fields.series;\n    var seriesIx = fields.seriesIx;\n    var state = {\n      defaults: series._defaults,\n      excluded: [\"data\", \"tooltip\", \"content\", \"template\", \"visual\", \"toggle\", \"_outOfRangeMinPoint\", \"_outOfRangeMaxPoint\"]\n    };\n    var doEval = this._evalSeries[seriesIx];\n\n    if (!defined(doEval)) {\n      this._evalSeries[seriesIx] = doEval = evalOptions(options, {}, state, true);\n    }\n\n    var pointOptions = options;\n\n    if (doEval) {\n      pointOptions = deepExtend({}, options);\n      evalOptions(pointOptions, {\n        value: value,\n        series: series,\n        dataItem: fields.dataItem\n      }, state);\n    }\n\n    return pointOptions;\n  };\n\n  ScatterChart.prototype.pointType = function pointType() {\n    return LinePoint;\n  };\n\n  ScatterChart.prototype.pointOptions = function pointOptions(series, seriesIx) {\n    var options = this.seriesOptions[seriesIx];\n\n    if (!options) {\n      var defaults = this.pointType().prototype.defaults;\n      this.seriesOptions[seriesIx] = options = deepExtend({}, defaults, {\n        markers: {\n          opacity: series.opacity\n        },\n        tooltip: {\n          format: this.options.tooltip.format\n        },\n        labels: {\n          format: this.options.labels.format\n        }\n      }, series);\n    }\n\n    return options;\n  };\n\n  ScatterChart.prototype.createPoint = function createPoint(value, fields) {\n    var series = fields.series;\n    var pointOptions = this.pointOptions(series, fields.seriesIx);\n    var color = fields.color || series.color;\n    pointOptions = this.evalPointOptions(pointOptions, value, fields);\n\n    if (isFunction(series.color)) {\n      color = pointOptions.color;\n    }\n\n    var point = new LinePoint(value, pointOptions);\n    point.color = color;\n    this.append(point);\n    return point;\n  };\n\n  ScatterChart.prototype.seriesAxes = function seriesAxes(series) {\n    var xAxisName = series.xAxis;\n    var yAxisName = series.yAxis;\n    var plotArea = this.plotArea;\n    var xAxis = xAxisName ? plotArea.namedXAxes[xAxisName] : plotArea.axisX;\n    var yAxis = yAxisName ? plotArea.namedYAxes[yAxisName] : plotArea.axisY;\n\n    if (!xAxis) {\n      throw new Error(\"Unable to locate X axis with name \" + xAxisName);\n    }\n\n    if (!yAxis) {\n      throw new Error(\"Unable to locate Y axis with name \" + yAxisName);\n    }\n\n    return {\n      x: xAxis,\n      y: yAxis\n    };\n  };\n\n  ScatterChart.prototype.reflow = function reflow(targetBox) {\n    var this$1 = this;\n    var chartPoints = this.points;\n    var limit = !this.options.clip;\n    var pointIx = 0;\n    this.traverseDataPoints(function (value, fields) {\n      var point = chartPoints[pointIx++];\n      var seriesAxes = this$1.seriesAxes(fields.series);\n      var slotX = seriesAxes.x.getSlot(value.x, value.x, limit);\n      var slotY = seriesAxes.y.getSlot(value.y, value.y, limit);\n\n      if (point) {\n        if (slotX && slotY) {\n          var pointSlot = this$1.pointSlot(slotX, slotY);\n          point.reflow(pointSlot);\n        } else {\n          point.visible = false;\n        }\n      }\n    });\n    this.box = targetBox;\n  };\n\n  ScatterChart.prototype.pointSlot = function pointSlot(slotX, slotY) {\n    return new Box(slotX.x1, slotY.y1, slotX.x2, slotY.y2);\n  };\n\n  ScatterChart.prototype.traverseDataPoints = function traverseDataPoints(callback) {\n    var this$1 = this;\n    var ref = this;\n    var series = ref.options.series;\n    var seriesPoints = ref.seriesPoints;\n\n    for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n      var currentSeries = series[seriesIx];\n      var currentSeriesPoints = seriesPoints[seriesIx];\n\n      if (!currentSeriesPoints) {\n        seriesPoints[seriesIx] = [];\n      }\n\n      for (var pointIx = 0; pointIx < currentSeries.data.length; pointIx++) {\n        var ref$1 = this$1._bindPoint(currentSeries, seriesIx, pointIx);\n\n        var value = ref$1.valueFields;\n        var fields = ref$1.fields;\n        callback(value, deepExtend({\n          pointIx: pointIx,\n          series: currentSeries,\n          seriesIx: seriesIx,\n          dataItem: currentSeries.data[pointIx],\n          owner: this$1\n        }, fields));\n      }\n    }\n  };\n\n  ScatterChart.prototype.formatPointValue = function formatPointValue(point, format) {\n    var value = point.value;\n    return this.chartService.format.auto(format, value.x, value.y);\n  };\n\n  ScatterChart.prototype.animationPoints = function animationPoints() {\n    var points = this.points;\n    var result = [];\n\n    for (var idx = 0; idx < points.length; idx++) {\n      result.push((points[idx] || {}).marker);\n    }\n\n    return result;\n  };\n\n  return ScatterChart;\n}(ChartElement);\n\nsetDefaultOptions(ScatterChart, {\n  series: [],\n  tooltip: {\n    format: \"{0}, {1}\"\n  },\n  labels: {\n    format: \"{0}, {1}\"\n  },\n  clip: true\n});\ndeepExtend(ScatterChart.prototype, ClipAnimationMixin, {\n  _bindPoint: CategoricalChart.prototype._bindPoint\n});\nexport default ScatterChart;","map":{"version":3,"sources":["/Users/lazybaccha/Documents/Honeywell/SBE/node_modules/@progress/kendo-charts/dist/es/chart/scatter-charts/scatter-chart.js"],"names":["ChartElement","Box","ClipAnimationMixin","ErrorRangeCalculator","ScatterErrorBar","LinePoint","CategoricalChart","hasValue","evalOptions","deepExtend","isNumber","isString","defined","isFunction","setDefaultOptions","X","Y","MIN_VALUE","MAX_VALUE","parseDate","ScatterChart","plotArea","options","call","chartService","_initFields","render","__proto__","prototype","Object","create","constructor","xAxisRanges","yAxisRanges","points","seriesPoints","seriesOptions","_evalSeries","traverseDataPoints","addValue","bind","addErrorBar","point","field","fields","value","valueErrorField","lowField","highField","seriesIx","series","errorBars","lowValue","highValue","errorRange","low","high","seriesErrorRanges","x","y","getErrorRange","addPointErrorBar","isVertical","item","errorBar","push","append","updateRange","missingValues","seriesMissingValues","pointValue","createMissingValue","createPoint","assign","intlService","intl","xAxisName","xAxis","yAxisName","yAxis","xAxisRange","yAxisRange","min","max","Math","evalPointOptions","state","defaults","_defaults","excluded","doEval","pointOptions","dataItem","pointType","markers","opacity","tooltip","format","labels","color","seriesAxes","namedXAxes","axisX","namedYAxes","axisY","Error","reflow","targetBox","this$1","chartPoints","limit","clip","pointIx","slotX","getSlot","slotY","pointSlot","visible","box","x1","y1","x2","y2","callback","ref","length","currentSeries","currentSeriesPoints","data","ref$1","_bindPoint","valueFields","owner","formatPointValue","auto","animationPoints","result","idx","marker"],"mappings":"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","sourcesContent":["import { ChartElement, Box } from '../../core';\n\nimport ClipAnimationMixin from '../mixins/clip-animation-mixin';\nimport ErrorRangeCalculator from '../error-bars/error-range-calculator';\nimport ScatterErrorBar from '../error-bars/scatter-error-bar';\nimport LinePoint from '../line-chart/line-point';\nimport CategoricalChart from '../categorical-chart';\n\nimport hasValue from '../utils/has-value';\nimport evalOptions from '../utils/eval-options';\n\nimport { deepExtend, isNumber, isString, defined, isFunction, setDefaultOptions } from '../../common';\nimport { X, Y, MIN_VALUE, MAX_VALUE } from '../../common/constants';\nimport { parseDate } from '../../date-utils';\n\nvar ScatterChart = (function (ChartElement) {\n    function ScatterChart(plotArea, options) {\n\n        ChartElement.call(this, options);\n\n        this.plotArea = plotArea;\n        this.chartService = plotArea.chartService;\n        this._initFields();\n\n        this.render();\n    }\n\n    if ( ChartElement ) ScatterChart.__proto__ = ChartElement;\n    ScatterChart.prototype = Object.create( ChartElement && ChartElement.prototype );\n    ScatterChart.prototype.constructor = ScatterChart;\n\n    ScatterChart.prototype._initFields = function _initFields () {\n        // X and Y axis ranges grouped by name, e.g.:\n        // primary: { min: 0, max: 1 }\n        this.xAxisRanges = {};\n        this.yAxisRanges = {};\n\n        this.points = [];\n        this.seriesPoints = [];\n        this.seriesOptions = [];\n        this._evalSeries = [];\n    };\n\n    ScatterChart.prototype.render = function render () {\n        this.traverseDataPoints(this.addValue.bind(this));\n    };\n\n    ScatterChart.prototype.addErrorBar = function addErrorBar (point, field, fields) {\n        var value = point.value[field];\n        var valueErrorField = field + \"Value\";\n        var lowField = field + \"ErrorLow\";\n        var highField = field + \"ErrorHigh\";\n        var seriesIx = fields.seriesIx;\n        var series = fields.series;\n        var errorBars = point.options.errorBars;\n        var lowValue = fields[lowField];\n        var highValue = fields[highField];\n\n        if (isNumber(value)) {\n            var errorRange;\n            if (isNumber(lowValue) && isNumber(highValue)) {\n                errorRange = { low: lowValue, high: highValue };\n            }\n\n            if (errorBars && defined(errorBars[valueErrorField])) {\n                this.seriesErrorRanges = this.seriesErrorRanges || { x: [], y: [] };\n                this.seriesErrorRanges[field][seriesIx] = this.seriesErrorRanges[field][seriesIx] ||\n                    new ErrorRangeCalculator(errorBars[valueErrorField], series, field);\n\n                errorRange = this.seriesErrorRanges[field][seriesIx].getErrorRange(value, errorBars[valueErrorField]);\n            }\n\n            if (errorRange) {\n                this.addPointErrorBar(errorRange, point, field);\n            }\n        }\n    };\n\n    ScatterChart.prototype.addPointErrorBar = function addPointErrorBar (errorRange, point, field) {\n        var low = errorRange.low;\n        var high = errorRange.high;\n        var series = point.series;\n        var options = point.options.errorBars;\n        var isVertical = field === Y;\n        var item = {};\n\n        point[field + \"Low\"] = low;\n        point[field + \"High\"] = high;\n\n        point.errorBars = point.errorBars || [];\n        var errorBar = new ScatterErrorBar(low, high, isVertical, this, series, options);\n        point.errorBars.push(errorBar);\n        point.append(errorBar);\n\n        item[field] = low;\n        this.updateRange(item, series);\n        item[field] = high;\n        this.updateRange(item, series);\n    };\n\n    ScatterChart.prototype.addValue = function addValue (value, fields) {\n        var x = value.x;\n        var y = value.y;\n        var seriesIx = fields.seriesIx;\n        var series = this.options.series[seriesIx];\n        var missingValues = this.seriesMissingValues(series);\n        var seriesPoints = this.seriesPoints[seriesIx];\n\n        var pointValue = value;\n        if (!(hasValue(x) && hasValue(y))) {\n            pointValue = this.createMissingValue(pointValue, missingValues);\n        }\n\n        var point;\n        if (pointValue) {\n            point = this.createPoint(pointValue, fields);\n            if (point) {\n                Object.assign(point, fields);\n                this.addErrorBar(point, X, fields);\n                this.addErrorBar(point, Y, fields);\n            }\n            this.updateRange(pointValue, fields.series);\n        }\n\n        this.points.push(point);\n        seriesPoints.push(point);\n    };\n\n    ScatterChart.prototype.seriesMissingValues = function seriesMissingValues (series) {\n        return series.missingValues;\n    };\n\n    ScatterChart.prototype.createMissingValue = function createMissingValue () {};\n\n    ScatterChart.prototype.updateRange = function updateRange (value, series) {\n        var intlService = this.chartService.intl;\n        var xAxisName = series.xAxis;\n        var yAxisName = series.yAxis;\n        var x = value.x;\n        var y = value.y;\n        var xAxisRange = this.xAxisRanges[xAxisName];\n        var yAxisRange = this.yAxisRanges[yAxisName];\n\n        if (hasValue(x)) {\n            xAxisRange = this.xAxisRanges[xAxisName] =\n                xAxisRange || { min: MAX_VALUE, max: MIN_VALUE };\n\n            if (isString(x)) {\n                x = parseDate(intlService, x);\n            }\n\n            xAxisRange.min = Math.min(xAxisRange.min, x);\n            xAxisRange.max = Math.max(xAxisRange.max, x);\n        }\n\n        if (hasValue(y)) {\n            yAxisRange = this.yAxisRanges[yAxisName] =\n                yAxisRange || { min: MAX_VALUE, max: MIN_VALUE };\n\n            if (isString(y)) {\n                y = parseDate(intlService, y);\n            }\n\n            yAxisRange.min = Math.min(yAxisRange.min, y);\n            yAxisRange.max = Math.max(yAxisRange.max, y);\n        }\n    };\n\n    ScatterChart.prototype.evalPointOptions = function evalPointOptions (options, value, fields) {\n        var series = fields.series;\n        var seriesIx = fields.seriesIx;\n        var state = { defaults: series._defaults, excluded: [ \"data\", \"tooltip\", \"content\", \"template\", \"visual\", \"toggle\", \"_outOfRangeMinPoint\", \"_outOfRangeMaxPoint\" ] };\n\n        var doEval = this._evalSeries[seriesIx];\n        if (!defined(doEval)) {\n            this._evalSeries[seriesIx] = doEval = evalOptions(options, {}, state, true);\n        }\n\n        var pointOptions = options;\n        if (doEval) {\n            pointOptions = deepExtend({}, options);\n            evalOptions(pointOptions, {\n                value: value,\n                series: series,\n                dataItem: fields.dataItem\n            }, state);\n        }\n\n        return pointOptions;\n    };\n\n    ScatterChart.prototype.pointType = function pointType () {\n        return LinePoint;\n    };\n\n    ScatterChart.prototype.pointOptions = function pointOptions (series, seriesIx) {\n        var options = this.seriesOptions[seriesIx];\n        if (!options) {\n            var defaults = this.pointType().prototype.defaults;\n            this.seriesOptions[seriesIx] = options = deepExtend({}, defaults, {\n                markers: {\n                    opacity: series.opacity\n                },\n                tooltip: {\n                    format: this.options.tooltip.format\n                },\n                labels: {\n                    format: this.options.labels.format\n                }\n            }, series);\n        }\n\n        return options;\n    };\n\n    ScatterChart.prototype.createPoint = function createPoint (value, fields) {\n        var series = fields.series;\n        var pointOptions = this.pointOptions(series, fields.seriesIx);\n        var color = fields.color || series.color;\n\n        pointOptions = this.evalPointOptions(pointOptions, value, fields);\n\n        if (isFunction(series.color)) {\n            color = pointOptions.color;\n        }\n\n        var point = new LinePoint(value, pointOptions);\n        point.color = color;\n\n        this.append(point);\n\n        return point;\n    };\n\n    ScatterChart.prototype.seriesAxes = function seriesAxes (series) {\n        var xAxisName = series.xAxis;\n        var yAxisName = series.yAxis;\n        var plotArea = this.plotArea;\n        var xAxis = xAxisName ? plotArea.namedXAxes[xAxisName] : plotArea.axisX;\n        var yAxis = yAxisName ? plotArea.namedYAxes[yAxisName] : plotArea.axisY;\n\n        if (!xAxis) {\n            throw new Error(\"Unable to locate X axis with name \" + xAxisName);\n        }\n\n        if (!yAxis) {\n            throw new Error(\"Unable to locate Y axis with name \" + yAxisName);\n        }\n\n        return {\n            x: xAxis,\n            y: yAxis\n        };\n    };\n\n    ScatterChart.prototype.reflow = function reflow (targetBox) {\n        var this$1 = this;\n\n        var chartPoints = this.points;\n        var limit = !this.options.clip;\n        var pointIx = 0;\n\n\n        this.traverseDataPoints(function (value, fields) {\n            var point = chartPoints[pointIx++];\n            var seriesAxes = this$1.seriesAxes(fields.series);\n            var slotX = seriesAxes.x.getSlot(value.x, value.x, limit);\n            var slotY = seriesAxes.y.getSlot(value.y, value.y, limit);\n\n            if (point) {\n                if (slotX && slotY) {\n                    var pointSlot = this$1.pointSlot(slotX, slotY);\n                    point.reflow(pointSlot);\n                } else {\n                    point.visible = false;\n                }\n            }\n        });\n\n        this.box = targetBox;\n    };\n\n    ScatterChart.prototype.pointSlot = function pointSlot (slotX, slotY) {\n        return new Box(slotX.x1, slotY.y1, slotX.x2, slotY.y2);\n    };\n\n    ScatterChart.prototype.traverseDataPoints = function traverseDataPoints (callback) {\n        var this$1 = this;\n\n        var ref = this;\n        var series = ref.options.series;\n        var seriesPoints = ref.seriesPoints;\n\n        for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n            var currentSeries = series[seriesIx];\n            var currentSeriesPoints = seriesPoints[seriesIx];\n            if (!currentSeriesPoints) {\n                seriesPoints[seriesIx] = [];\n            }\n\n            for (var pointIx = 0; pointIx < currentSeries.data.length; pointIx++) {\n                var ref$1 = this$1._bindPoint(currentSeries, seriesIx, pointIx);\n                var value = ref$1.valueFields;\n                var fields = ref$1.fields;\n\n                callback(value, deepExtend({\n                    pointIx: pointIx,\n                    series: currentSeries,\n                    seriesIx: seriesIx,\n                    dataItem: currentSeries.data[pointIx],\n                    owner: this$1\n                }, fields));\n            }\n        }\n    };\n\n    ScatterChart.prototype.formatPointValue = function formatPointValue (point, format) {\n        var value = point.value;\n        return this.chartService.format.auto(format, value.x, value.y);\n    };\n\n    ScatterChart.prototype.animationPoints = function animationPoints () {\n        var points = this.points;\n        var result = [];\n        for (var idx = 0; idx < points.length; idx++) {\n            result.push((points[idx] || {}).marker);\n        }\n        return result;\n    };\n\n    return ScatterChart;\n}(ChartElement));\nsetDefaultOptions(ScatterChart, {\n    series: [],\n    tooltip: {\n        format: \"{0}, {1}\"\n    },\n    labels: {\n        format: \"{0}, {1}\"\n    },\n    clip: true\n});\ndeepExtend(ScatterChart.prototype, ClipAnimationMixin, {\n    _bindPoint: CategoricalChart.prototype._bindPoint\n});\n\nexport default ScatterChart;"]},"metadata":{},"sourceType":"module"}