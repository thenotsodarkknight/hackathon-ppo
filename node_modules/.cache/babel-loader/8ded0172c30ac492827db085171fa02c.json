{"ast":null,"code":"import * as React from 'react';\nimport { isArrayEqual } from '../util';\n/**\n * @hidden\n */\n\nvar SelectionService =\n/** @class */\nfunction () {\n  function SelectionService(onSelectCallback, onFocusCallback, expandMode) {\n    var _this = this;\n\n    this.flatChildren = function (children, flattenChildren) {\n      if (flattenChildren === void 0) {\n        flattenChildren = [];\n      }\n\n      React.Children.forEach(children, function (child) {\n        if (child && child.props && !child.props.disabled) {\n          flattenChildren.push(child);\n\n          if (child.props.children) {\n            _this.flatChildren(child.props.children, flattenChildren);\n          }\n        }\n      });\n      return flattenChildren;\n    };\n\n    this.flatVisibleChildren = function (children, flattenVisibleChildren) {\n      if (flattenVisibleChildren === void 0) {\n        flattenVisibleChildren = [];\n      }\n\n      React.Children.forEach(children, function (child) {\n        if (child && child.props && !child.props.disabled && (child.props.expanded || child.props.parentExpanded)) {\n          flattenVisibleChildren.push(child);\n\n          if (child.props.children) {\n            _this.flatVisibleChildren(child.props.children, flattenVisibleChildren);\n          }\n        }\n      });\n      return flattenVisibleChildren;\n    };\n\n    this.onSelect = onSelectCallback;\n    this.onFocus = onFocusCallback;\n    this.expandMode = expandMode;\n  }\n\n  SelectionService.prototype.select = function (uniquePrivateKey, children, expanded) {\n    var flattenChildren = this.flatChildren(React.Children.toArray(children));\n    var selectedChild;\n    var newExpanded;\n    flattenChildren.forEach(function (child) {\n      if (child.props.uniquePrivateKey === uniquePrivateKey) {\n        selectedChild = child;\n      }\n    });\n\n    switch (this.expandMode) {\n      case 'single':\n        newExpanded = selectedChild.props.parentUniquePrivateKey.concat([selectedChild.props.uniquePrivateKey]);\n\n        if (isArrayEqual(expanded, newExpanded)) {\n          if (selectedChild.props.parentUniquePrivateKey) {\n            newExpanded = selectedChild.props.parentUniquePrivateKey.slice();\n          } else {\n            newExpanded = [];\n          }\n        }\n\n        break;\n\n      case 'multiple':\n        newExpanded = expanded.slice();\n        var index = newExpanded.indexOf(selectedChild.props.uniquePrivateKey);\n        index === -1 ? newExpanded.push(selectedChild.props.uniquePrivateKey) : newExpanded.splice(index, 1);\n        break;\n\n      default:\n        newExpanded = expanded.slice();\n        break;\n    }\n\n    this.onSelect(selectedChild, newExpanded);\n  };\n\n  SelectionService.prototype.focus = function (currentFocus, step, children) {\n    var flattenChildren = this.flatVisibleChildren(React.Children.toArray(children));\n    var focusedChild;\n    flattenChildren.forEach(function (child, ixd) {\n      if (child.props.uniquePrivateKey === currentFocus) {\n        var index = ixd + step < 0 ? 0 : ixd + step >= flattenChildren.length ? flattenChildren.length - 1 : ixd + step;\n        focusedChild = flattenChildren[index];\n      }\n    });\n    this.onFocus(focusedChild);\n  };\n\n  SelectionService.prototype.setExpandMode = function (expandMode) {\n    this.expandMode = expandMode;\n  };\n\n  return SelectionService;\n}();\n\nexport default SelectionService;","map":{"version":3,"sources":["../../../../src/panelbar/services/selectionService.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import * as React from 'react';\nimport { isArrayEqual } from '../util';\n/**\n * @hidden\n */\nvar SelectionService = /** @class */ (function () {\n    function SelectionService(onSelectCallback, onFocusCallback, expandMode) {\n        var _this = this;\n        this.flatChildren = function (children, flattenChildren) {\n            if (flattenChildren === void 0) { flattenChildren = []; }\n            React.Children.forEach(children, function (child) {\n                if (child && child.props && !child.props.disabled) {\n                    flattenChildren.push(child);\n                    if (child.props.children) {\n                        _this.flatChildren(child.props.children, flattenChildren);\n                    }\n                }\n            });\n            return flattenChildren;\n        };\n        this.flatVisibleChildren = function (children, flattenVisibleChildren) {\n            if (flattenVisibleChildren === void 0) { flattenVisibleChildren = []; }\n            React.Children.forEach(children, function (child) {\n                if (child && child.props && !child.props.disabled && (child.props.expanded || child.props.parentExpanded)) {\n                    flattenVisibleChildren.push(child);\n                    if (child.props.children) {\n                        _this.flatVisibleChildren(child.props.children, flattenVisibleChildren);\n                    }\n                }\n            });\n            return flattenVisibleChildren;\n        };\n        this.onSelect = onSelectCallback;\n        this.onFocus = onFocusCallback;\n        this.expandMode = expandMode;\n    }\n    SelectionService.prototype.select = function (uniquePrivateKey, children, expanded) {\n        var flattenChildren = this.flatChildren(React.Children.toArray(children));\n        var selectedChild;\n        var newExpanded;\n        flattenChildren.forEach(function (child) {\n            if (child.props.uniquePrivateKey === uniquePrivateKey) {\n                selectedChild = child;\n            }\n        });\n        switch (this.expandMode) {\n            case 'single':\n                newExpanded = selectedChild.props.parentUniquePrivateKey.concat([selectedChild.props.uniquePrivateKey]);\n                if (isArrayEqual(expanded, newExpanded)) {\n                    if (selectedChild.props.parentUniquePrivateKey) {\n                        newExpanded = selectedChild.props.parentUniquePrivateKey.slice();\n                    }\n                    else {\n                        newExpanded = [];\n                    }\n                }\n                break;\n            case 'multiple':\n                newExpanded = expanded.slice();\n                var index = newExpanded.indexOf(selectedChild.props.uniquePrivateKey);\n                index === -1 ? newExpanded.push(selectedChild.props.uniquePrivateKey) : newExpanded.splice(index, 1);\n                break;\n            default:\n                newExpanded = expanded.slice();\n                break;\n        }\n        this.onSelect(selectedChild, newExpanded);\n    };\n    SelectionService.prototype.focus = function (currentFocus, step, children) {\n        var flattenChildren = this.flatVisibleChildren(React.Children.toArray(children));\n        var focusedChild;\n        flattenChildren.forEach(function (child, ixd) {\n            if (child.props.uniquePrivateKey === currentFocus) {\n                var index = ixd + step < 0 ?\n                    0 : ixd + step >= flattenChildren.length\n                    ? flattenChildren.length - 1\n                    : ixd + step;\n                focusedChild = flattenChildren[index];\n            }\n        });\n        this.onFocus(focusedChild);\n    };\n    SelectionService.prototype.setExpandMode = function (expandMode) {\n        this.expandMode = expandMode;\n    };\n    return SelectionService;\n}());\nexport default SelectionService;\n//# sourceMappingURL=selectionService.js.map"]},"metadata":{},"sourceType":"module"}