{"ast":null,"code":"import PlotAreaBase from './plotarea-base';\nimport AxisGroupRangeTracker from '../axis-group-range-tracker';\nimport PlotAreaEventsMixin from '../mixins/plotarea-events-mixin';\nimport SeriesAggregator from '../aggregates/series-aggregator';\nimport DefaultAggregates from '../aggregates/default-aggregates';\nimport SeriesBinder from '../series-binder';\nimport BarChart from '../bar-chart/bar-chart';\nimport RangeBarChart from '../range-bar-chart/range-bar-chart';\nimport BulletChart from '../bullet-chart/bullet-chart';\nimport LineChart from '../line-chart/line-chart';\nimport AreaChart from '../area-chart/area-chart';\nimport RangeAreaChart from '../range-area-chart/range-area-chart';\nimport OHLCChart from '../ohlc-chart/ohlc-chart';\nimport CandlestickChart from '../candlestick-chart/candlestick-chart';\nimport BoxPlotChart from '../box-plot-chart/box-plot-chart';\nimport WaterfallChart from '../waterfall-chart/waterfall-chart';\nimport { CategoryAxis, DateCategoryAxis, NumericAxis, LogarithmicAxis, Point } from '../../core';\nimport { appendIfNotNull, categoriesCount, createOutOfRangePoints, equalsIgnoreCase, filterSeriesByType, getDateField, getField, isDateAxis, singleItemOrArray } from '../utils';\nimport { BAR, COLUMN, BULLET, VERTICAL_BULLET, LINE, VERTICAL_LINE, AREA, VERTICAL_AREA, RANGE_AREA, VERTICAL_RANGE_AREA, RANGE_COLUMN, RANGE_BAR, WATERFALL, HORIZONTAL_WATERFALL, BOX_PLOT, VERTICAL_BOX_PLOT, OHLC, CANDLESTICK, LOGARITHMIC, STEP, EQUALLY_SPACED_SERIES } from '../constants';\nimport { DATE, MAX_VALUE } from '../../common/constants';\nimport { setDefaultOptions, inArray, isNumber, deepExtend, defined, eventElement, grep } from '../../common';\nvar AREA_SERIES = [AREA, VERTICAL_AREA, RANGE_AREA, VERTICAL_RANGE_AREA];\nvar OUT_OF_RANGE_SERIES = [LINE, VERTICAL_LINE].concat(AREA_SERIES);\n\nvar CategoricalPlotArea = function (PlotAreaBase) {\n  function CategoricalPlotArea() {\n    PlotAreaBase.apply(this, arguments);\n  }\n\n  if (PlotAreaBase) CategoricalPlotArea.__proto__ = PlotAreaBase;\n  CategoricalPlotArea.prototype = Object.create(PlotAreaBase && PlotAreaBase.prototype);\n  CategoricalPlotArea.prototype.constructor = CategoricalPlotArea;\n\n  CategoricalPlotArea.prototype.initFields = function initFields(series) {\n    var this$1 = this;\n    this.namedCategoryAxes = {};\n    this.namedValueAxes = {};\n    this.valueAxisRangeTracker = new AxisGroupRangeTracker();\n\n    if (series.length > 0) {\n      this.invertAxes = inArray(series[0].type, [BAR, BULLET, VERTICAL_LINE, VERTICAL_AREA, VERTICAL_RANGE_AREA, RANGE_BAR, HORIZONTAL_WATERFALL, VERTICAL_BOX_PLOT]);\n\n      for (var i = 0; i < series.length; i++) {\n        var stack = series[i].stack;\n\n        if (stack && stack.type === \"100%\") {\n          this$1.stack100 = true;\n          break;\n        }\n      }\n    }\n  };\n\n  CategoricalPlotArea.prototype.render = function render(panes) {\n    if (panes === void 0) panes = this.panes;\n    this.createCategoryAxes(panes);\n    this.aggregateCategories(panes);\n    this.createCategoryAxesLabels(panes);\n    this.createCharts(panes);\n    this.createValueAxes(panes);\n  };\n\n  CategoricalPlotArea.prototype.removeAxis = function removeAxis(axis) {\n    var axisName = axis.options.name;\n    PlotAreaBase.prototype.removeAxis.call(this, axis);\n\n    if (axis instanceof CategoryAxis) {\n      delete this.namedCategoryAxes[axisName];\n    } else {\n      this.valueAxisRangeTracker.reset(axisName);\n      delete this.namedValueAxes[axisName];\n    }\n\n    if (axis === this.categoryAxis) {\n      delete this.categoryAxis;\n    }\n\n    if (axis === this.valueAxis) {\n      delete this.valueAxis;\n    }\n  };\n\n  CategoricalPlotArea.prototype.createCharts = function createCharts(panes) {\n    var this$1 = this;\n    var seriesByPane = this.groupSeriesByPane();\n\n    for (var i = 0; i < panes.length; i++) {\n      var pane = panes[i];\n      var paneSeries = seriesByPane[pane.options.name || \"default\"] || [];\n      this$1.addToLegend(paneSeries);\n      var visibleSeries = this$1.filterVisibleSeries(paneSeries);\n\n      if (!visibleSeries) {\n        continue;\n      }\n\n      var groups = this$1.groupSeriesByCategoryAxis(visibleSeries);\n\n      for (var groupIx = 0; groupIx < groups.length; groupIx++) {\n        this$1.createChartGroup(groups[groupIx], pane);\n      }\n    }\n  };\n\n  CategoricalPlotArea.prototype.createChartGroup = function createChartGroup(series, pane) {\n    this.createAreaChart(filterSeriesByType(series, [AREA, VERTICAL_AREA]), pane);\n    this.createRangeAreaChart(filterSeriesByType(series, [RANGE_AREA, VERTICAL_RANGE_AREA]), pane);\n    this.createBarChart(filterSeriesByType(series, [COLUMN, BAR]), pane);\n    this.createRangeBarChart(filterSeriesByType(series, [RANGE_COLUMN, RANGE_BAR]), pane);\n    this.createBulletChart(filterSeriesByType(series, [BULLET, VERTICAL_BULLET]), pane);\n    this.createCandlestickChart(filterSeriesByType(series, CANDLESTICK), pane);\n    this.createBoxPlotChart(filterSeriesByType(series, [BOX_PLOT, VERTICAL_BOX_PLOT]), pane);\n    this.createOHLCChart(filterSeriesByType(series, OHLC), pane);\n    this.createWaterfallChart(filterSeriesByType(series, [WATERFALL, HORIZONTAL_WATERFALL]), pane);\n    this.createLineChart(filterSeriesByType(series, [LINE, VERTICAL_LINE]), pane);\n  };\n\n  CategoricalPlotArea.prototype.aggregateCategories = function aggregateCategories(panes) {\n    var this$1 = this;\n    var series = this.srcSeries || this.series;\n    var processedSeries = [];\n    this._currentPointsCache = {};\n    this._seriesPointsCache = this._seriesPointsCache || {};\n\n    for (var i = 0; i < series.length; i++) {\n      var currentSeries = series[i];\n      var categoryAxis = this$1.seriesCategoryAxis(currentSeries);\n      var axisPane = this$1.findPane(categoryAxis.options.pane);\n      var dateAxis = equalsIgnoreCase(categoryAxis.options.type, DATE);\n\n      if ((dateAxis || currentSeries.categoryField) && inArray(axisPane, panes)) {\n        currentSeries = this$1.aggregateSeries(currentSeries, categoryAxis);\n      } else {\n        currentSeries = this$1.filterSeries(currentSeries, categoryAxis);\n      }\n\n      processedSeries.push(currentSeries);\n    }\n\n    this._seriesPointsCache = this._currentPointsCache;\n    this._currentPointsCache = null;\n    this.srcSeries = series;\n    this.series = processedSeries;\n  };\n\n  CategoricalPlotArea.prototype.filterSeries = function filterSeries(series, categoryAxis) {\n    var dataLength = (series.data || {}).length;\n    categoryAxis._seriesMax = Math.max(categoryAxis._seriesMax || 0, dataLength);\n\n    if (!(isNumber(categoryAxis.options.min) || isNumber(categoryAxis.options.max))) {\n      return series;\n    }\n\n    var range = categoryAxis.currentRangeIndices();\n    var outOfRangePoints = inArray(series.type, OUT_OF_RANGE_SERIES);\n    var currentSeries = deepExtend({}, series);\n    currentSeries.data = (currentSeries.data || []).slice(range.min, range.max + 1);\n\n    if (outOfRangePoints) {\n      createOutOfRangePoints(currentSeries, range, dataLength, function (idx) {\n        return {\n          item: series.data[idx],\n          category: categoryAxis.categoryAt(idx, true),\n          categoryIx: idx - range.min\n        };\n      }, function (idx) {\n        return defined(series.data[idx]);\n      });\n    }\n\n    return currentSeries;\n  };\n\n  CategoricalPlotArea.prototype.clearSeriesPointsCache = function clearSeriesPointsCache() {\n    this._seriesPointsCache = {};\n  };\n\n  CategoricalPlotArea.prototype.seriesSourcePoints = function seriesSourcePoints(series, categoryAxis) {\n    var this$1 = this;\n    var key = series.index + \";\" + categoryAxis.categoriesHash();\n\n    if (this._seriesPointsCache[key]) {\n      this._currentPointsCache[key] = this._seriesPointsCache[key];\n      return this._seriesPointsCache[key];\n    }\n\n    var axisOptions = categoryAxis.options;\n    var srcCategories = axisOptions.srcCategories;\n    var dateAxis = equalsIgnoreCase(axisOptions.type, DATE);\n    var srcData = series.data;\n    var getFn = dateAxis ? getDateField : getField;\n    var result = [];\n\n    if (!dateAxis) {\n      categoryAxis.mapCategories(); //fixes major performance issue caused by searching for the index for large data\n    }\n\n    for (var idx = 0; idx < srcData.length; idx++) {\n      var category = void 0;\n\n      if (series.categoryField) {\n        category = getFn(series.categoryField, srcData[idx], this$1.chartService.intl);\n      } else {\n        category = srcCategories[idx];\n      }\n\n      if (defined(category) && category !== null) {\n        var categoryIx = categoryAxis.totalIndex(category);\n        result[categoryIx] = result[categoryIx] || {\n          items: [],\n          category: category\n        };\n        result[categoryIx].items.push(idx);\n      }\n    }\n\n    this._currentPointsCache[key] = result;\n    return result;\n  };\n\n  CategoricalPlotArea.prototype.aggregateSeries = function aggregateSeries(series, categoryAxis) {\n    var srcData = series.data;\n\n    if (!srcData.length) {\n      return series;\n    }\n\n    var srcPoints = this.seriesSourcePoints(series, categoryAxis);\n    var result = deepExtend({}, series);\n    var aggregator = new SeriesAggregator(deepExtend({}, series), SeriesBinder.current, DefaultAggregates.current);\n    var data = result.data = [];\n    var dataItems = categoryAxis.options.dataItems || [];\n    var range = categoryAxis.currentRangeIndices();\n\n    var categoryItem = function (idx) {\n      var categoryIdx = idx - range.min;\n      var point = srcPoints[idx];\n\n      if (!point) {\n        point = srcPoints[idx] = {};\n      }\n\n      point.categoryIx = categoryIdx;\n\n      if (!point.item) {\n        var category = categoryAxis.categoryAt(idx, true);\n        point.category = category;\n        point.item = aggregator.aggregatePoints(point.items, category);\n      }\n\n      return point;\n    };\n\n    for (var idx = range.min; idx <= range.max; idx++) {\n      var point = categoryItem(idx);\n      data[point.categoryIx] = point.item;\n\n      if (point.items && point.items.length) {\n        dataItems[point.categoryIx] = point.item;\n      }\n    }\n\n    if (inArray(result.type, OUT_OF_RANGE_SERIES)) {\n      createOutOfRangePoints(result, range, categoryAxis.totalCount(), categoryItem, function (idx) {\n        return srcPoints[idx];\n      });\n    }\n\n    categoryAxis.options.dataItems = dataItems;\n    return result;\n  };\n\n  CategoricalPlotArea.prototype.appendChart = function appendChart(chart, pane) {\n    var series = chart.options.series;\n    var categoryAxis = this.seriesCategoryAxis(series[0]);\n    var categories = categoryAxis.options.categories;\n    var categoriesToAdd = Math.max(0, categoriesCount(series) - categories.length);\n\n    if (categoriesToAdd > 0) {\n      //consider setting an option to axis instead of adding fake categories\n      categories = categoryAxis.options.categories = categoryAxis.options.categories.slice(0);\n\n      while (categoriesToAdd--) {\n        categories.push(\"\");\n      }\n    }\n\n    this.valueAxisRangeTracker.update(chart.valueAxisRanges);\n    PlotAreaBase.prototype.appendChart.call(this, chart, pane);\n  }; // TODO: Refactor, optionally use series.pane option\n\n\n  CategoricalPlotArea.prototype.seriesPaneName = function seriesPaneName(series) {\n    var options = this.options;\n    var axisName = series.axis;\n    var axisOptions = [].concat(options.valueAxis);\n    var axis = grep(axisOptions, function (a) {\n      return a.name === axisName;\n    })[0];\n    var panes = options.panes || [{}];\n    var defaultPaneName = (panes[0] || {}).name || \"default\";\n    var paneName = (axis || {}).pane || defaultPaneName;\n    return paneName;\n  };\n\n  CategoricalPlotArea.prototype.seriesCategoryAxis = function seriesCategoryAxis(series) {\n    var axisName = series.categoryAxis;\n    var axis = axisName ? this.namedCategoryAxes[axisName] : this.categoryAxis;\n\n    if (!axis) {\n      throw new Error(\"Unable to locate category axis with name \" + axisName);\n    }\n\n    return axis;\n  };\n\n  CategoricalPlotArea.prototype.stackableChartOptions = function stackableChartOptions(firstSeries, pane) {\n    var stack = firstSeries.stack;\n    var isStacked100 = stack && stack.type === \"100%\";\n    var clip = pane.options.clip;\n    return {\n      isStacked: stack,\n      isStacked100: isStacked100,\n      clip: clip\n    };\n  };\n\n  CategoricalPlotArea.prototype.groupSeriesByCategoryAxis = function groupSeriesByCategoryAxis(series) {\n    var categoryAxes = [];\n    var unique = {};\n\n    for (var idx = 0; idx < series.length; idx++) {\n      var name = series[idx].categoryAxis || \"$$default$$\";\n\n      if (!unique.hasOwnProperty(name)) {\n        unique[name] = true;\n        categoryAxes.push(name);\n      }\n    }\n\n    var groups = [];\n\n    for (var axisIx = 0; axisIx < categoryAxes.length; axisIx++) {\n      var axis = categoryAxes[axisIx];\n      var axisSeries = groupSeries(series, axis, axisIx);\n\n      if (axisSeries.length === 0) {\n        continue;\n      }\n\n      groups.push(axisSeries);\n    }\n\n    return groups;\n  };\n\n  CategoricalPlotArea.prototype.createBarChart = function createBarChart(series, pane) {\n    if (series.length === 0) {\n      return;\n    }\n\n    var firstSeries = series[0];\n    var barChart = new BarChart(this, Object.assign({\n      series: series,\n      invertAxes: this.invertAxes,\n      gap: firstSeries.gap,\n      spacing: firstSeries.spacing\n    }, this.stackableChartOptions(firstSeries, pane)));\n    this.appendChart(barChart, pane);\n  };\n\n  CategoricalPlotArea.prototype.createRangeBarChart = function createRangeBarChart(series, pane) {\n    if (series.length === 0) {\n      return;\n    }\n\n    var firstSeries = series[0];\n    var rangeColumnChart = new RangeBarChart(this, {\n      series: series,\n      invertAxes: this.invertAxes,\n      gap: firstSeries.gap,\n      spacing: firstSeries.spacing\n    });\n    this.appendChart(rangeColumnChart, pane);\n  };\n\n  CategoricalPlotArea.prototype.createBulletChart = function createBulletChart(series, pane) {\n    if (series.length === 0) {\n      return;\n    }\n\n    var firstSeries = series[0];\n    var bulletChart = new BulletChart(this, {\n      series: series,\n      invertAxes: this.invertAxes,\n      gap: firstSeries.gap,\n      spacing: firstSeries.spacing,\n      clip: pane.options.clip\n    });\n    this.appendChart(bulletChart, pane);\n  };\n\n  CategoricalPlotArea.prototype.createLineChart = function createLineChart(series, pane) {\n    if (series.length === 0) {\n      return;\n    }\n\n    var firstSeries = series[0];\n    var lineChart = new LineChart(this, Object.assign({\n      invertAxes: this.invertAxes,\n      series: series\n    }, this.stackableChartOptions(firstSeries, pane)));\n    this.appendChart(lineChart, pane);\n  };\n\n  CategoricalPlotArea.prototype.createAreaChart = function createAreaChart(series, pane) {\n    if (series.length === 0) {\n      return;\n    }\n\n    var firstSeries = series[0];\n    var areaChart = new AreaChart(this, Object.assign({\n      invertAxes: this.invertAxes,\n      series: series\n    }, this.stackableChartOptions(firstSeries, pane)));\n    this.appendChart(areaChart, pane);\n  };\n\n  CategoricalPlotArea.prototype.createRangeAreaChart = function createRangeAreaChart(series, pane) {\n    if (series.length === 0) {\n      return;\n    }\n\n    var rangeAreaChart = new RangeAreaChart(this, {\n      invertAxes: this.invertAxes,\n      series: series,\n      clip: pane.options.clip\n    });\n    this.appendChart(rangeAreaChart, pane);\n  };\n\n  CategoricalPlotArea.prototype.createOHLCChart = function createOHLCChart(series, pane) {\n    if (series.length === 0) {\n      return;\n    }\n\n    var firstSeries = series[0];\n    var chart = new OHLCChart(this, {\n      invertAxes: this.invertAxes,\n      gap: firstSeries.gap,\n      series: series,\n      spacing: firstSeries.spacing,\n      clip: pane.options.clip\n    });\n    this.appendChart(chart, pane);\n  };\n\n  CategoricalPlotArea.prototype.createCandlestickChart = function createCandlestickChart(series, pane) {\n    if (series.length === 0) {\n      return;\n    }\n\n    var firstSeries = series[0];\n    var chart = new CandlestickChart(this, {\n      invertAxes: this.invertAxes,\n      gap: firstSeries.gap,\n      series: series,\n      spacing: firstSeries.spacing,\n      clip: pane.options.clip\n    });\n    this.appendChart(chart, pane);\n  };\n\n  CategoricalPlotArea.prototype.createBoxPlotChart = function createBoxPlotChart(series, pane) {\n    if (series.length === 0) {\n      return;\n    }\n\n    var firstSeries = series[0];\n    var chart = new BoxPlotChart(this, {\n      invertAxes: this.invertAxes,\n      gap: firstSeries.gap,\n      series: series,\n      spacing: firstSeries.spacing,\n      clip: pane.options.clip\n    });\n    this.appendChart(chart, pane);\n  };\n\n  CategoricalPlotArea.prototype.createWaterfallChart = function createWaterfallChart(series, pane) {\n    if (series.length === 0) {\n      return;\n    }\n\n    var firstSeries = series[0];\n    var waterfallChart = new WaterfallChart(this, {\n      series: series,\n      invertAxes: this.invertAxes,\n      gap: firstSeries.gap,\n      spacing: firstSeries.spacing\n    });\n    this.appendChart(waterfallChart, pane);\n  };\n\n  CategoricalPlotArea.prototype.axisRequiresRounding = function axisRequiresRounding(categoryAxisName, categoryAxisIndex) {\n    var this$1 = this;\n    var centeredSeries = filterSeriesByType(this.series, EQUALLY_SPACED_SERIES);\n\n    for (var seriesIx = 0; seriesIx < this.series.length; seriesIx++) {\n      var currentSeries = this$1.series[seriesIx];\n\n      if (inArray(currentSeries.type, AREA_SERIES)) {\n        var line = currentSeries.line;\n\n        if (line && line.style === STEP) {\n          centeredSeries.push(currentSeries);\n        }\n      }\n    }\n\n    for (var seriesIx$1 = 0; seriesIx$1 < centeredSeries.length; seriesIx$1++) {\n      var seriesAxis = centeredSeries[seriesIx$1].categoryAxis || \"\";\n\n      if (seriesAxis === categoryAxisName || !seriesAxis && categoryAxisIndex === 0) {\n        return true;\n      }\n    }\n  };\n\n  CategoricalPlotArea.prototype.aggregatedAxis = function aggregatedAxis(categoryAxisName, categoryAxisIndex) {\n    var series = this.series;\n\n    for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n      var seriesAxis = series[seriesIx].categoryAxis || \"\";\n\n      if ((seriesAxis === categoryAxisName || !seriesAxis && categoryAxisIndex === 0) && series[seriesIx].categoryField) {\n        return true;\n      }\n    }\n  };\n\n  CategoricalPlotArea.prototype.createCategoryAxesLabels = function createCategoryAxesLabels() {\n    var axes = this.axes;\n\n    for (var i = 0; i < axes.length; i++) {\n      if (axes[i] instanceof CategoryAxis) {\n        axes[i].createLabels();\n      }\n    }\n  };\n\n  CategoricalPlotArea.prototype.createCategoryAxes = function createCategoryAxes(panes) {\n    var this$1 = this;\n    var invertAxes = this.invertAxes;\n    var definitions = [].concat(this.options.categoryAxis);\n    var axes = [];\n\n    for (var i = 0; i < definitions.length; i++) {\n      var axisOptions = definitions[i];\n      var axisPane = this$1.findPane(axisOptions.pane);\n\n      if (inArray(axisPane, panes)) {\n        var name = axisOptions.name;\n        var categories = axisOptions.categories;\n        if (categories === void 0) categories = [];\n        axisOptions = deepExtend({\n          vertical: invertAxes,\n          reverse: !invertAxes && this$1.chartService.rtl,\n          axisCrossingValue: invertAxes ? MAX_VALUE : 0\n        }, axisOptions);\n\n        if (!defined(axisOptions.justified)) {\n          axisOptions.justified = this$1.isJustified();\n        }\n\n        if (this$1.axisRequiresRounding(name, i)) {\n          axisOptions.justified = false;\n        }\n\n        var categoryAxis = void 0;\n\n        if (isDateAxis(axisOptions, categories[0])) {\n          categoryAxis = new DateCategoryAxis(axisOptions, this$1.chartService);\n        } else {\n          categoryAxis = new CategoryAxis(axisOptions, this$1.chartService);\n        }\n\n        definitions[i].categories = categoryAxis.options.srcCategories;\n\n        if (name) {\n          if (this$1.namedCategoryAxes[name]) {\n            throw new Error(\"Category axis with name \" + name + \" is already defined\");\n          }\n\n          this$1.namedCategoryAxes[name] = categoryAxis;\n        }\n\n        categoryAxis.axisIndex = i;\n        axes.push(categoryAxis);\n        this$1.appendAxis(categoryAxis);\n      }\n    }\n\n    var primaryAxis = this.categoryAxis || axes[0];\n    this.categoryAxis = primaryAxis;\n\n    if (invertAxes) {\n      this.axisY = primaryAxis;\n    } else {\n      this.axisX = primaryAxis;\n    }\n  };\n\n  CategoricalPlotArea.prototype.isJustified = function isJustified() {\n    var series = this.series;\n\n    for (var i = 0; i < series.length; i++) {\n      var currentSeries = series[i];\n\n      if (!inArray(currentSeries.type, AREA_SERIES)) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  CategoricalPlotArea.prototype.createValueAxes = function createValueAxes(panes) {\n    var this$1 = this;\n    var tracker = this.valueAxisRangeTracker;\n    var defaultRange = tracker.query();\n    var definitions = [].concat(this.options.valueAxis);\n    var invertAxes = this.invertAxes;\n    var baseOptions = {\n      vertical: !invertAxes,\n      reverse: invertAxes && this.chartService.rtl\n    };\n    var axes = [];\n\n    if (this.stack100) {\n      baseOptions.roundToMajorUnit = false;\n      baseOptions.labels = {\n        format: \"P0\"\n      };\n    }\n\n    for (var i = 0; i < definitions.length; i++) {\n      var axisOptions = definitions[i];\n      var axisPane = this$1.findPane(axisOptions.pane);\n\n      if (inArray(axisPane, panes)) {\n        var name = axisOptions.name;\n        var defaultAxisRange = equalsIgnoreCase(axisOptions.type, LOGARITHMIC) ? {\n          min: 0.1,\n          max: 1\n        } : {\n          min: 0,\n          max: 1\n        };\n        var range = tracker.query(name) || defaultRange || defaultAxisRange;\n\n        if (i === 0 && range && defaultRange) {\n          range.min = Math.min(range.min, defaultRange.min);\n          range.max = Math.max(range.max, defaultRange.max);\n        }\n\n        var axisType = void 0;\n\n        if (equalsIgnoreCase(axisOptions.type, LOGARITHMIC)) {\n          axisType = LogarithmicAxis;\n        } else {\n          axisType = NumericAxis;\n        }\n\n        var valueAxis = new axisType(range.min, range.max, deepExtend({}, baseOptions, axisOptions), this$1.chartService);\n\n        if (name) {\n          if (this$1.namedValueAxes[name]) {\n            throw new Error(\"Value axis with name \" + name + \" is already defined\");\n          }\n\n          this$1.namedValueAxes[name] = valueAxis;\n        }\n\n        valueAxis.axisIndex = i;\n        axes.push(valueAxis);\n        this$1.appendAxis(valueAxis);\n      }\n    }\n\n    var primaryAxis = this.valueAxis || axes[0];\n    this.valueAxis = primaryAxis;\n\n    if (invertAxes) {\n      this.axisX = primaryAxis;\n    } else {\n      this.axisY = primaryAxis;\n    }\n  };\n\n  CategoricalPlotArea.prototype._dispatchEvent = function _dispatchEvent(chart, e, eventType) {\n    var coords = chart._eventCoordinates(e);\n\n    var point = new Point(coords.x, coords.y);\n    var pane = this.pointPane(point);\n    var categories = [];\n    var values = [];\n\n    if (!pane) {\n      return;\n    }\n\n    var allAxes = pane.axes;\n\n    for (var i = 0; i < allAxes.length; i++) {\n      var axis = allAxes[i];\n\n      if (axis.getValue) {\n        appendIfNotNull(values, axis.getValue(point));\n      } else {\n        appendIfNotNull(categories, axis.getCategory(point));\n      }\n    }\n\n    if (categories.length === 0) {\n      appendIfNotNull(categories, this.categoryAxis.getCategory(point));\n    }\n\n    if (categories.length > 0 && values.length > 0) {\n      chart.trigger(eventType, {\n        element: eventElement(e),\n        originalEvent: e,\n        category: singleItemOrArray(categories),\n        value: singleItemOrArray(values)\n      });\n    }\n  };\n\n  CategoricalPlotArea.prototype.pointPane = function pointPane(point) {\n    var panes = this.panes;\n\n    for (var i = 0; i < panes.length; i++) {\n      var currentPane = panes[i];\n\n      if (currentPane.contentBox.containsPoint(point)) {\n        return currentPane;\n      }\n    }\n  };\n\n  CategoricalPlotArea.prototype.updateAxisOptions = function updateAxisOptions$1(axis, options) {\n    updateAxisOptions(this.options, axis, options);\n    updateAxisOptions(this.originalOptions, axis, options);\n  };\n\n  return CategoricalPlotArea;\n}(PlotAreaBase);\n\nfunction updateAxisOptions(targetOptions, axis, options) {\n  var axesOptions = axis instanceof CategoryAxis ? [].concat(targetOptions.categoryAxis) : [].concat(targetOptions.valueAxis);\n  deepExtend(axesOptions[axis.axisIndex], options);\n}\n\nfunction groupSeries(series, axis, axisIx) {\n  return grep(series, function (s) {\n    return axisIx === 0 && !s.categoryAxis || s.categoryAxis === axis;\n  });\n}\n\nsetDefaultOptions(CategoricalPlotArea, {\n  categoryAxis: {},\n  valueAxis: {}\n});\ndeepExtend(CategoricalPlotArea.prototype, PlotAreaEventsMixin);\nexport default CategoricalPlotArea;","map":{"version":3,"sources":["/Users/lazybaccha/Documents/Honeywell/SBE/node_modules/@progress/kendo-charts/dist/es/chart/plotarea/categorical-plotarea.js"],"names":["PlotAreaBase","AxisGroupRangeTracker","PlotAreaEventsMixin","SeriesAggregator","DefaultAggregates","SeriesBinder","BarChart","RangeBarChart","BulletChart","LineChart","AreaChart","RangeAreaChart","OHLCChart","CandlestickChart","BoxPlotChart","WaterfallChart","CategoryAxis","DateCategoryAxis","NumericAxis","LogarithmicAxis","Point","appendIfNotNull","categoriesCount","createOutOfRangePoints","equalsIgnoreCase","filterSeriesByType","getDateField","getField","isDateAxis","singleItemOrArray","BAR","COLUMN","BULLET","VERTICAL_BULLET","LINE","VERTICAL_LINE","AREA","VERTICAL_AREA","RANGE_AREA","VERTICAL_RANGE_AREA","RANGE_COLUMN","RANGE_BAR","WATERFALL","HORIZONTAL_WATERFALL","BOX_PLOT","VERTICAL_BOX_PLOT","OHLC","CANDLESTICK","LOGARITHMIC","STEP","EQUALLY_SPACED_SERIES","DATE","MAX_VALUE","setDefaultOptions","inArray","isNumber","deepExtend","defined","eventElement","grep","AREA_SERIES","OUT_OF_RANGE_SERIES","concat","CategoricalPlotArea","apply","arguments","__proto__","prototype","Object","create","constructor","initFields","series","this$1","namedCategoryAxes","namedValueAxes","valueAxisRangeTracker","length","invertAxes","type","i","stack","stack100","render","panes","createCategoryAxes","aggregateCategories","createCategoryAxesLabels","createCharts","createValueAxes","removeAxis","axis","axisName","options","name","call","reset","categoryAxis","valueAxis","seriesByPane","groupSeriesByPane","pane","paneSeries","addToLegend","visibleSeries","filterVisibleSeries","groups","groupSeriesByCategoryAxis","groupIx","createChartGroup","createAreaChart","createRangeAreaChart","createBarChart","createRangeBarChart","createBulletChart","createCandlestickChart","createBoxPlotChart","createOHLCChart","createWaterfallChart","createLineChart","srcSeries","processedSeries","_currentPointsCache","_seriesPointsCache","currentSeries","seriesCategoryAxis","axisPane","findPane","dateAxis","categoryField","aggregateSeries","filterSeries","push","dataLength","data","_seriesMax","Math","max","min","range","currentRangeIndices","outOfRangePoints","slice","idx","item","category","categoryAt","categoryIx","clearSeriesPointsCache","seriesSourcePoints","key","index","categoriesHash","axisOptions","srcCategories","srcData","getFn","result","mapCategories","chartService","intl","totalIndex","items","srcPoints","aggregator","current","dataItems","categoryItem","categoryIdx","point","aggregatePoints","totalCount","appendChart","chart","categories","categoriesToAdd","update","valueAxisRanges","seriesPaneName","a","defaultPaneName","paneName","Error","stackableChartOptions","firstSeries","isStacked100","clip","isStacked","categoryAxes","unique","hasOwnProperty","axisIx","axisSeries","groupSeries","barChart","assign","gap","spacing","rangeColumnChart","bulletChart","lineChart","areaChart","rangeAreaChart","waterfallChart","axisRequiresRounding","categoryAxisName","categoryAxisIndex","centeredSeries","seriesIx","line","style","seriesIx$1","seriesAxis","aggregatedAxis","axes","createLabels","definitions","vertical","reverse","rtl","axisCrossingValue","justified","isJustified","axisIndex","appendAxis","primaryAxis","axisY","axisX","tracker","defaultRange","query","baseOptions","roundToMajorUnit","labels","format","defaultAxisRange","axisType","_dispatchEvent","e","eventType","coords","_eventCoordinates","x","y","pointPane","values","allAxes","getValue","getCategory","trigger","element","originalEvent","value","currentPane","contentBox","containsPoint","updateAxisOptions","updateAxisOptions$1","originalOptions","targetOptions","axesOptions","s"],"mappings":"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","sourcesContent":["import PlotAreaBase from './plotarea-base';\nimport AxisGroupRangeTracker from '../axis-group-range-tracker';\nimport PlotAreaEventsMixin from '../mixins/plotarea-events-mixin';\nimport SeriesAggregator from '../aggregates/series-aggregator';\nimport DefaultAggregates from '../aggregates/default-aggregates';\nimport SeriesBinder from '../series-binder';\nimport BarChart from '../bar-chart/bar-chart';\nimport RangeBarChart from '../range-bar-chart/range-bar-chart';\nimport BulletChart from '../bullet-chart/bullet-chart';\nimport LineChart from '../line-chart/line-chart';\nimport AreaChart from '../area-chart/area-chart';\nimport RangeAreaChart from '../range-area-chart/range-area-chart';\nimport OHLCChart from '../ohlc-chart/ohlc-chart';\nimport CandlestickChart from '../candlestick-chart/candlestick-chart';\nimport BoxPlotChart from '../box-plot-chart/box-plot-chart';\nimport WaterfallChart from '../waterfall-chart/waterfall-chart';\n\nimport { CategoryAxis, DateCategoryAxis, NumericAxis, LogarithmicAxis, Point } from '../../core';\n\nimport { appendIfNotNull, categoriesCount, createOutOfRangePoints, equalsIgnoreCase, filterSeriesByType,\n    getDateField, getField, isDateAxis, singleItemOrArray } from '../utils';\n\nimport { BAR, COLUMN, BULLET, VERTICAL_BULLET, LINE, VERTICAL_LINE, AREA, VERTICAL_AREA,\n    RANGE_AREA, VERTICAL_RANGE_AREA, RANGE_COLUMN, RANGE_BAR, WATERFALL, HORIZONTAL_WATERFALL,\n    BOX_PLOT, VERTICAL_BOX_PLOT, OHLC, CANDLESTICK, LOGARITHMIC, STEP, EQUALLY_SPACED_SERIES } from '../constants';\n\nimport { DATE, MAX_VALUE } from '../../common/constants';\nimport { setDefaultOptions, inArray, isNumber, deepExtend, defined, eventElement, grep } from '../../common';\n\nvar AREA_SERIES = [ AREA, VERTICAL_AREA, RANGE_AREA, VERTICAL_RANGE_AREA ];\nvar OUT_OF_RANGE_SERIES = [ LINE, VERTICAL_LINE ].concat(AREA_SERIES);\n\nvar CategoricalPlotArea = (function (PlotAreaBase) {\n    function CategoricalPlotArea () {\n        PlotAreaBase.apply(this, arguments);\n    }\n\n    if ( PlotAreaBase ) CategoricalPlotArea.__proto__ = PlotAreaBase;\n    CategoricalPlotArea.prototype = Object.create( PlotAreaBase && PlotAreaBase.prototype );\n    CategoricalPlotArea.prototype.constructor = CategoricalPlotArea;\n\n    CategoricalPlotArea.prototype.initFields = function initFields (series) {\n        var this$1 = this;\n\n        this.namedCategoryAxes = {};\n        this.namedValueAxes = {};\n        this.valueAxisRangeTracker = new AxisGroupRangeTracker();\n\n        if (series.length > 0) {\n            this.invertAxes = inArray(\n                series[0].type, [ BAR, BULLET, VERTICAL_LINE, VERTICAL_AREA, VERTICAL_RANGE_AREA,\n                                 RANGE_BAR, HORIZONTAL_WATERFALL, VERTICAL_BOX_PLOT ]\n            );\n\n            for (var i = 0; i < series.length; i++) {\n                var stack = series[i].stack;\n                if (stack && stack.type === \"100%\") {\n                    this$1.stack100 = true;\n                    break;\n                }\n            }\n        }\n\n    };\n\n    CategoricalPlotArea.prototype.render = function render (panes) {\n        if ( panes === void 0 ) panes = this.panes;\n\n        this.createCategoryAxes(panes);\n        this.aggregateCategories(panes);\n        this.createCategoryAxesLabels(panes);\n        this.createCharts(panes);\n        this.createValueAxes(panes);\n    };\n\n    CategoricalPlotArea.prototype.removeAxis = function removeAxis (axis) {\n        var axisName = axis.options.name;\n\n        PlotAreaBase.prototype.removeAxis.call(this, axis);\n\n        if (axis instanceof CategoryAxis) {\n            delete this.namedCategoryAxes[axisName];\n        } else {\n            this.valueAxisRangeTracker.reset(axisName);\n            delete this.namedValueAxes[axisName];\n        }\n\n        if (axis === this.categoryAxis) {\n            delete this.categoryAxis;\n        }\n\n        if (axis === this.valueAxis) {\n            delete this.valueAxis;\n        }\n    };\n\n    CategoricalPlotArea.prototype.createCharts = function createCharts (panes) {\n        var this$1 = this;\n\n        var seriesByPane = this.groupSeriesByPane();\n\n        for (var i = 0; i < panes.length; i++) {\n            var pane = panes[i];\n            var paneSeries = seriesByPane[pane.options.name || \"default\"] || [];\n            this$1.addToLegend(paneSeries);\n\n            var visibleSeries = this$1.filterVisibleSeries(paneSeries);\n            if (!visibleSeries) {\n                continue;\n            }\n\n            var groups = this$1.groupSeriesByCategoryAxis(visibleSeries);\n            for (var groupIx = 0; groupIx < groups.length; groupIx++) {\n                this$1.createChartGroup(groups[groupIx], pane);\n            }\n        }\n    };\n\n    CategoricalPlotArea.prototype.createChartGroup = function createChartGroup (series, pane) {\n        this.createAreaChart(\n            filterSeriesByType(series, [ AREA, VERTICAL_AREA ]), pane\n        );\n\n        this.createRangeAreaChart(\n            filterSeriesByType(series, [ RANGE_AREA, VERTICAL_RANGE_AREA ]), pane\n        );\n\n        this.createBarChart(\n            filterSeriesByType(series, [ COLUMN, BAR ]), pane\n        );\n\n        this.createRangeBarChart(\n            filterSeriesByType(series, [ RANGE_COLUMN, RANGE_BAR ]), pane\n        );\n\n        this.createBulletChart(\n            filterSeriesByType(series, [ BULLET, VERTICAL_BULLET ]), pane\n        );\n\n        this.createCandlestickChart(\n            filterSeriesByType(series, CANDLESTICK), pane\n        );\n\n        this.createBoxPlotChart(\n            filterSeriesByType(series, [ BOX_PLOT, VERTICAL_BOX_PLOT ]), pane\n        );\n\n        this.createOHLCChart(\n            filterSeriesByType(series, OHLC), pane\n        );\n\n        this.createWaterfallChart(\n            filterSeriesByType(series, [ WATERFALL, HORIZONTAL_WATERFALL ]), pane\n        );\n\n        this.createLineChart(\n            filterSeriesByType(series, [ LINE, VERTICAL_LINE ]), pane\n        );\n    };\n\n    CategoricalPlotArea.prototype.aggregateCategories = function aggregateCategories (panes) {\n        var this$1 = this;\n\n        var series = this.srcSeries || this.series;\n        var processedSeries = [];\n        this._currentPointsCache = {};\n        this._seriesPointsCache = this._seriesPointsCache || {};\n\n        for (var i = 0; i < series.length; i++) {\n            var currentSeries = series[i];\n            var categoryAxis = this$1.seriesCategoryAxis(currentSeries);\n            var axisPane = this$1.findPane(categoryAxis.options.pane);\n            var dateAxis = equalsIgnoreCase(categoryAxis.options.type, DATE);\n\n            if ((dateAxis || currentSeries.categoryField) && inArray(axisPane, panes)) {\n                currentSeries = this$1.aggregateSeries(currentSeries, categoryAxis);\n            } else {\n                currentSeries = this$1.filterSeries(currentSeries, categoryAxis);\n            }\n\n            processedSeries.push(currentSeries);\n        }\n\n        this._seriesPointsCache = this._currentPointsCache;\n        this._currentPointsCache = null;\n\n        this.srcSeries = series;\n        this.series = processedSeries;\n    };\n\n    CategoricalPlotArea.prototype.filterSeries = function filterSeries (series, categoryAxis) {\n        var dataLength = (series.data || {}).length;\n        categoryAxis._seriesMax = Math.max(categoryAxis._seriesMax || 0, dataLength);\n\n        if (!(isNumber(categoryAxis.options.min) || isNumber(categoryAxis.options.max))) {\n            return series;\n        }\n\n        var range = categoryAxis.currentRangeIndices();\n        var outOfRangePoints = inArray(series.type, OUT_OF_RANGE_SERIES);\n        var currentSeries = deepExtend({}, series);\n\n        currentSeries.data = (currentSeries.data || []).slice(range.min, range.max + 1);\n\n        if (outOfRangePoints) {\n            createOutOfRangePoints(currentSeries, range, dataLength, function (idx) { return ({\n                item: series.data[idx],\n                category: categoryAxis.categoryAt(idx, true),\n                categoryIx: idx - range.min\n            }); }, function (idx) { return defined(series.data[idx]); });\n        }\n\n        return currentSeries;\n    };\n\n    CategoricalPlotArea.prototype.clearSeriesPointsCache = function clearSeriesPointsCache () {\n        this._seriesPointsCache = {};\n    };\n\n    CategoricalPlotArea.prototype.seriesSourcePoints = function seriesSourcePoints (series, categoryAxis) {\n        var this$1 = this;\n\n        var key = (series.index) + \";\" + (categoryAxis.categoriesHash());\n        if (this._seriesPointsCache[key]) {\n            this._currentPointsCache[key] = this._seriesPointsCache[key];\n            return this._seriesPointsCache[key];\n        }\n\n        var axisOptions = categoryAxis.options;\n        var srcCategories = axisOptions.srcCategories;\n        var dateAxis = equalsIgnoreCase(axisOptions.type, DATE);\n        var srcData = series.data;\n        var getFn = dateAxis ? getDateField : getField;\n        var result = [];\n        if (!dateAxis) {\n            categoryAxis.mapCategories();//fixes major performance issue caused by searching for the index for large data\n        }\n\n        for (var idx = 0; idx < srcData.length; idx++) {\n            var category = (void 0);\n            if (series.categoryField) {\n                category = getFn(series.categoryField, srcData[idx], this$1.chartService.intl);\n            } else {\n                category = srcCategories[idx];\n            }\n\n            if (defined(category) && category !== null) {\n                var categoryIx = categoryAxis.totalIndex(category);\n                result[categoryIx] = result[categoryIx] || { items: [], category: category };\n                result[categoryIx].items.push(idx);\n            }\n        }\n\n        this._currentPointsCache[key] = result;\n\n        return result;\n    };\n\n    CategoricalPlotArea.prototype.aggregateSeries = function aggregateSeries (series, categoryAxis) {\n        var srcData = series.data;\n        if (!srcData.length) {\n            return series;\n        }\n\n        var srcPoints = this.seriesSourcePoints(series, categoryAxis);\n        var result = deepExtend({}, series);\n        var aggregator = new SeriesAggregator(deepExtend({}, series), SeriesBinder.current, DefaultAggregates.current);\n        var data = result.data = [];\n        var dataItems = categoryAxis.options.dataItems || [];\n\n        var range = categoryAxis.currentRangeIndices();\n        var categoryItem = function (idx) {\n            var categoryIdx = idx - range.min;\n            var point = srcPoints[idx];\n            if (!point) {\n                point = srcPoints[idx] = {};\n            }\n\n            point.categoryIx = categoryIdx;\n\n            if (!point.item) {\n                var category = categoryAxis.categoryAt(idx, true);\n                point.category = category;\n                point.item = aggregator.aggregatePoints(point.items, category);\n            }\n\n            return point;\n        };\n\n        for (var idx = range.min; idx <= range.max; idx++) {\n            var point = categoryItem(idx);\n            data[point.categoryIx] = point.item;\n\n            if (point.items && point.items.length) {\n                dataItems[point.categoryIx] = point.item;\n            }\n        }\n\n        if (inArray(result.type, OUT_OF_RANGE_SERIES)) {\n            createOutOfRangePoints(result, range, categoryAxis.totalCount(), categoryItem, function (idx) { return srcPoints[idx]; });\n        }\n\n        categoryAxis.options.dataItems = dataItems;\n\n        return result;\n    };\n\n    CategoricalPlotArea.prototype.appendChart = function appendChart (chart, pane) {\n        var series = chart.options.series;\n        var categoryAxis = this.seriesCategoryAxis(series[0]);\n        var categories = categoryAxis.options.categories;\n        var categoriesToAdd = Math.max(0, categoriesCount(series) - categories.length);\n\n        if (categoriesToAdd > 0) {//consider setting an option to axis instead of adding fake categories\n            categories = categoryAxis.options.categories = categoryAxis.options.categories.slice(0);\n            while (categoriesToAdd--) {\n                categories.push(\"\");\n            }\n        }\n\n        this.valueAxisRangeTracker.update(chart.valueAxisRanges);\n\n        PlotAreaBase.prototype.appendChart.call(this, chart, pane);\n    };\n\n    // TODO: Refactor, optionally use series.pane option\n    CategoricalPlotArea.prototype.seriesPaneName = function seriesPaneName (series) {\n        var options = this.options;\n        var axisName = series.axis;\n        var axisOptions = [].concat(options.valueAxis);\n        var axis = grep(axisOptions, function(a) { return a.name === axisName; })[0];\n        var panes = options.panes || [ {} ];\n        var defaultPaneName = (panes[0] || {}).name || \"default\";\n        var paneName = (axis || {}).pane || defaultPaneName;\n\n        return paneName;\n    };\n\n    CategoricalPlotArea.prototype.seriesCategoryAxis = function seriesCategoryAxis (series) {\n        var axisName = series.categoryAxis;\n        var axis = axisName ? this.namedCategoryAxes[axisName] : this.categoryAxis;\n\n        if (!axis) {\n            throw new Error(\"Unable to locate category axis with name \" + axisName);\n        }\n\n        return axis;\n    };\n\n    CategoricalPlotArea.prototype.stackableChartOptions = function stackableChartOptions (firstSeries, pane) {\n        var stack = firstSeries.stack;\n        var isStacked100 = stack && stack.type === \"100%\";\n        var clip = pane.options.clip;\n\n        return {\n            isStacked: stack,\n            isStacked100: isStacked100,\n            clip: clip\n        };\n    };\n\n    CategoricalPlotArea.prototype.groupSeriesByCategoryAxis = function groupSeriesByCategoryAxis (series) {\n        var categoryAxes = [];\n        var unique = {};\n        for (var idx = 0; idx < series.length; idx++) {\n            var name = series[idx].categoryAxis || \"$$default$$\";\n            if (!unique.hasOwnProperty(name)) {\n                unique[name] = true;\n                categoryAxes.push(name);\n            }\n        }\n\n        var groups = [];\n        for (var axisIx = 0; axisIx < categoryAxes.length; axisIx++) {\n            var axis = categoryAxes[axisIx];\n            var axisSeries = groupSeries(series, axis, axisIx);\n            if (axisSeries.length === 0) {\n                continue;\n            }\n\n            groups.push(axisSeries);\n        }\n\n        return groups;\n    };\n\n    CategoricalPlotArea.prototype.createBarChart = function createBarChart (series, pane) {\n        if (series.length === 0) {\n            return;\n        }\n\n        var firstSeries = series[0];\n        var barChart = new BarChart(this, Object.assign({\n            series: series,\n            invertAxes: this.invertAxes,\n            gap: firstSeries.gap,\n            spacing: firstSeries.spacing\n        }, this.stackableChartOptions(firstSeries, pane)));\n\n        this.appendChart(barChart, pane);\n    };\n\n    CategoricalPlotArea.prototype.createRangeBarChart = function createRangeBarChart (series, pane) {\n        if (series.length === 0) {\n            return;\n        }\n\n        var firstSeries = series[0];\n        var rangeColumnChart = new RangeBarChart(this, {\n            series: series,\n            invertAxes: this.invertAxes,\n            gap: firstSeries.gap,\n            spacing: firstSeries.spacing\n        });\n\n        this.appendChart(rangeColumnChart, pane);\n    };\n\n    CategoricalPlotArea.prototype.createBulletChart = function createBulletChart (series, pane) {\n        if (series.length === 0) {\n            return;\n        }\n\n        var firstSeries = series[0];\n        var bulletChart = new BulletChart(this, {\n            series: series,\n            invertAxes: this.invertAxes,\n            gap: firstSeries.gap,\n            spacing: firstSeries.spacing,\n            clip: pane.options.clip\n        });\n\n        this.appendChart(bulletChart, pane);\n    };\n\n    CategoricalPlotArea.prototype.createLineChart = function createLineChart (series, pane) {\n        if (series.length === 0) {\n            return;\n        }\n\n        var firstSeries = series[0];\n        var lineChart = new LineChart(this, Object.assign({\n            invertAxes: this.invertAxes,\n            series: series\n        }, this.stackableChartOptions(firstSeries, pane)));\n\n        this.appendChart(lineChart, pane);\n    };\n\n    CategoricalPlotArea.prototype.createAreaChart = function createAreaChart (series, pane) {\n        if (series.length === 0) {\n            return;\n        }\n\n        var firstSeries = series[0];\n        var areaChart = new AreaChart(this, Object.assign({\n            invertAxes: this.invertAxes,\n            series: series\n        }, this.stackableChartOptions(firstSeries, pane)));\n\n        this.appendChart(areaChart, pane);\n    };\n\n    CategoricalPlotArea.prototype.createRangeAreaChart = function createRangeAreaChart (series, pane) {\n        if (series.length === 0) {\n            return;\n        }\n\n        var rangeAreaChart = new RangeAreaChart(this, {\n            invertAxes: this.invertAxes,\n            series: series,\n            clip: pane.options.clip\n        });\n\n        this.appendChart(rangeAreaChart, pane);\n    };\n\n    CategoricalPlotArea.prototype.createOHLCChart = function createOHLCChart (series, pane) {\n        if (series.length === 0) {\n            return;\n        }\n\n        var firstSeries = series[0];\n        var chart = new OHLCChart(this, {\n            invertAxes: this.invertAxes,\n            gap: firstSeries.gap,\n            series: series,\n            spacing: firstSeries.spacing,\n            clip: pane.options.clip\n        });\n\n        this.appendChart(chart, pane);\n    };\n\n    CategoricalPlotArea.prototype.createCandlestickChart = function createCandlestickChart (series, pane) {\n        if (series.length === 0) {\n            return;\n        }\n\n        var firstSeries = series[0];\n        var chart = new CandlestickChart(this, {\n            invertAxes: this.invertAxes,\n            gap: firstSeries.gap,\n            series: series,\n            spacing: firstSeries.spacing,\n            clip: pane.options.clip\n        });\n\n        this.appendChart(chart, pane);\n    };\n\n    CategoricalPlotArea.prototype.createBoxPlotChart = function createBoxPlotChart (series, pane) {\n        if (series.length === 0) {\n            return;\n        }\n\n        var firstSeries = series[0];\n        var chart = new BoxPlotChart(this, {\n            invertAxes: this.invertAxes,\n            gap: firstSeries.gap,\n            series: series,\n            spacing: firstSeries.spacing,\n            clip: pane.options.clip\n        });\n\n        this.appendChart(chart, pane);\n    };\n\n    CategoricalPlotArea.prototype.createWaterfallChart = function createWaterfallChart (series, pane) {\n        if (series.length === 0) {\n            return;\n        }\n\n        var firstSeries = series[0];\n        var waterfallChart = new WaterfallChart(this, {\n            series: series,\n            invertAxes: this.invertAxes,\n            gap: firstSeries.gap,\n            spacing: firstSeries.spacing\n        });\n\n        this.appendChart(waterfallChart, pane);\n    };\n\n    CategoricalPlotArea.prototype.axisRequiresRounding = function axisRequiresRounding (categoryAxisName, categoryAxisIndex) {\n        var this$1 = this;\n\n        var centeredSeries = filterSeriesByType(this.series, EQUALLY_SPACED_SERIES);\n\n        for (var seriesIx = 0; seriesIx < this.series.length; seriesIx++) {\n            var currentSeries = this$1.series[seriesIx];\n            if (inArray(currentSeries.type, AREA_SERIES)) {\n                var line = currentSeries.line;\n                if (line && line.style === STEP) {\n                    centeredSeries.push(currentSeries);\n                }\n            }\n        }\n\n        for (var seriesIx$1 = 0; seriesIx$1 < centeredSeries.length; seriesIx$1++) {\n            var seriesAxis = centeredSeries[seriesIx$1].categoryAxis || \"\";\n            if (seriesAxis === categoryAxisName || (!seriesAxis && categoryAxisIndex === 0)) {\n                return true;\n            }\n        }\n    };\n\n    CategoricalPlotArea.prototype.aggregatedAxis = function aggregatedAxis (categoryAxisName, categoryAxisIndex) {\n        var series = this.series;\n\n        for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n            var seriesAxis = series[seriesIx].categoryAxis || \"\";\n            if ((seriesAxis === categoryAxisName || (!seriesAxis && categoryAxisIndex === 0)) && series[seriesIx].categoryField) {\n                return true;\n            }\n        }\n    };\n\n    CategoricalPlotArea.prototype.createCategoryAxesLabels = function createCategoryAxesLabels () {\n        var axes = this.axes;\n        for (var i = 0; i < axes.length; i++) {\n            if (axes[i] instanceof CategoryAxis) {\n                axes[i].createLabels();\n            }\n        }\n    };\n\n    CategoricalPlotArea.prototype.createCategoryAxes = function createCategoryAxes (panes) {\n        var this$1 = this;\n\n        var invertAxes = this.invertAxes;\n        var definitions = [].concat(this.options.categoryAxis);\n        var axes = [];\n\n        for (var i = 0; i < definitions.length; i++) {\n            var axisOptions = definitions[i];\n            var axisPane = this$1.findPane(axisOptions.pane);\n\n            if (inArray(axisPane, panes)) {\n                var name = axisOptions.name;\n                var categories = axisOptions.categories; if ( categories === void 0 ) categories = [];\n                axisOptions = deepExtend({\n                    vertical: invertAxes,\n                    reverse: !invertAxes && this$1.chartService.rtl,\n                    axisCrossingValue: invertAxes ? MAX_VALUE : 0\n                }, axisOptions);\n\n                if (!defined(axisOptions.justified)) {\n                    axisOptions.justified = this$1.isJustified();\n                }\n\n                if (this$1.axisRequiresRounding(name, i)) {\n                    axisOptions.justified = false;\n                }\n\n                var categoryAxis = (void 0);\n\n                if (isDateAxis(axisOptions, categories[0])) {\n                    categoryAxis = new DateCategoryAxis(axisOptions, this$1.chartService);\n                } else {\n                    categoryAxis = new CategoryAxis(axisOptions, this$1.chartService);\n                }\n\n                definitions[i].categories = categoryAxis.options.srcCategories;\n\n                if (name) {\n                    if (this$1.namedCategoryAxes[name]) {\n                        throw new Error((\"Category axis with name \" + name + \" is already defined\"));\n                    }\n                    this$1.namedCategoryAxes[name] = categoryAxis;\n                }\n\n                categoryAxis.axisIndex = i;\n                axes.push(categoryAxis);\n                this$1.appendAxis(categoryAxis);\n            }\n        }\n\n        var primaryAxis = this.categoryAxis || axes[0];\n        this.categoryAxis = primaryAxis;\n\n        if (invertAxes) {\n            this.axisY = primaryAxis;\n        } else {\n            this.axisX = primaryAxis;\n        }\n    };\n\n    CategoricalPlotArea.prototype.isJustified = function isJustified () {\n        var series = this.series;\n\n        for (var i = 0; i < series.length; i++) {\n            var currentSeries = series[i];\n            if (!inArray(currentSeries.type, AREA_SERIES)) {\n                return false;\n            }\n        }\n\n        return true;\n    };\n\n    CategoricalPlotArea.prototype.createValueAxes = function createValueAxes (panes) {\n        var this$1 = this;\n\n        var tracker = this.valueAxisRangeTracker;\n        var defaultRange = tracker.query();\n        var definitions = [].concat(this.options.valueAxis);\n        var invertAxes = this.invertAxes;\n        var baseOptions = { vertical: !invertAxes, reverse: invertAxes && this.chartService.rtl };\n        var axes = [];\n\n        if (this.stack100) {\n            baseOptions.roundToMajorUnit = false;\n            baseOptions.labels = { format: \"P0\" };\n        }\n\n        for (var i = 0; i < definitions.length; i++) {\n            var axisOptions = definitions[i];\n            var axisPane = this$1.findPane(axisOptions.pane);\n\n            if (inArray(axisPane, panes)) {\n                var name = axisOptions.name;\n                var defaultAxisRange = equalsIgnoreCase(axisOptions.type, LOGARITHMIC) ? { min: 0.1, max: 1 } : { min: 0, max: 1 };\n                var range = tracker.query(name) || defaultRange || defaultAxisRange;\n\n                if (i === 0 && range && defaultRange) {\n                    range.min = Math.min(range.min, defaultRange.min);\n                    range.max = Math.max(range.max, defaultRange.max);\n                }\n\n                var axisType = (void 0);\n                if (equalsIgnoreCase(axisOptions.type, LOGARITHMIC)) {\n                    axisType = LogarithmicAxis;\n                } else {\n                    axisType = NumericAxis;\n                }\n\n                var valueAxis = new axisType(range.min, range.max,\n                    deepExtend({}, baseOptions, axisOptions),\n                    this$1.chartService\n                );\n\n                if (name) {\n                    if (this$1.namedValueAxes[name]) {\n                        throw new Error((\"Value axis with name \" + name + \" is already defined\"));\n                    }\n                    this$1.namedValueAxes[name] = valueAxis;\n                }\n                valueAxis.axisIndex = i;\n\n                axes.push(valueAxis);\n                this$1.appendAxis(valueAxis);\n            }\n        }\n\n        var primaryAxis = this.valueAxis || axes[0];\n        this.valueAxis = primaryAxis;\n\n        if (invertAxes) {\n            this.axisX = primaryAxis;\n        } else {\n            this.axisY = primaryAxis;\n        }\n    };\n\n    CategoricalPlotArea.prototype._dispatchEvent = function _dispatchEvent (chart, e, eventType) {\n        var coords = chart._eventCoordinates(e);\n        var point = new Point(coords.x, coords.y);\n        var pane = this.pointPane(point);\n        var categories = [];\n        var values = [];\n\n        if (!pane) {\n            return;\n        }\n\n        var allAxes = pane.axes;\n        for (var i = 0; i < allAxes.length; i++) {\n            var axis = allAxes[i];\n            if (axis.getValue) {\n                appendIfNotNull(values, axis.getValue(point));\n            } else {\n                appendIfNotNull(categories, axis.getCategory(point));\n            }\n        }\n\n        if (categories.length === 0) {\n            appendIfNotNull(categories, this.categoryAxis.getCategory(point));\n        }\n\n        if (categories.length > 0 && values.length > 0) {\n            chart.trigger(eventType, {\n                element: eventElement(e),\n                originalEvent: e,\n                category: singleItemOrArray(categories),\n                value: singleItemOrArray(values)\n            });\n        }\n    };\n\n    CategoricalPlotArea.prototype.pointPane = function pointPane (point) {\n        var panes = this.panes;\n\n        for (var i = 0; i < panes.length; i++) {\n            var currentPane = panes[i];\n            if (currentPane.contentBox.containsPoint(point)) {\n                return currentPane;\n            }\n        }\n    };\n\n    CategoricalPlotArea.prototype.updateAxisOptions = function updateAxisOptions$1 (axis, options) {\n        updateAxisOptions(this.options, axis, options);\n        updateAxisOptions(this.originalOptions, axis, options);\n    };\n\n    return CategoricalPlotArea;\n}(PlotAreaBase));\n\nfunction updateAxisOptions(targetOptions, axis, options) {\n    var axesOptions = axis instanceof CategoryAxis ? [].concat(targetOptions.categoryAxis) : [].concat(targetOptions.valueAxis);\n    deepExtend(axesOptions[axis.axisIndex], options);\n}\n\nfunction groupSeries(series, axis, axisIx) {\n    return grep(series, function(s) {\n        return (axisIx === 0 && !s.categoryAxis) || (s.categoryAxis === axis);\n    });\n}\n\nsetDefaultOptions(CategoricalPlotArea, {\n    categoryAxis: {},\n    valueAxis: {}\n});\n\ndeepExtend(CategoricalPlotArea.prototype, PlotAreaEventsMixin);\n\nexport default CategoricalPlotArea;"]},"metadata":{},"sourceType":"module"}