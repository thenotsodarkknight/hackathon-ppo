{"ast":null,"code":"import { drawing as draw } from '@progress/kendo-drawing';\nimport { ChartElement } from '../../core';\nimport { FADEIN, INITIAL_ANIMATION_DURATION } from '../constants';\nimport { alignPathToPixel, setDefaultOptions } from '../../common';\n\nvar WaterfallSegment = function (ChartElement) {\n  function WaterfallSegment(from, to, series) {\n    ChartElement.call(this);\n    this.from = from;\n    this.to = to;\n    this.series = series;\n  }\n\n  if (ChartElement) WaterfallSegment.__proto__ = ChartElement;\n  WaterfallSegment.prototype = Object.create(ChartElement && ChartElement.prototype);\n  WaterfallSegment.prototype.constructor = WaterfallSegment;\n\n  WaterfallSegment.prototype.linePoints = function linePoints() {\n    var from = this.from;\n    var ref = this;\n    var fromBox = ref.from.box;\n    var toBox = ref.to.box;\n    var points = [];\n\n    if (from.isVertical) {\n      var y = from.aboveAxis ? fromBox.y1 : fromBox.y2;\n      points.push([fromBox.x1, y], [toBox.x2, y]);\n    } else {\n      var x = from.aboveAxis ? fromBox.x2 : fromBox.x1;\n      points.push([x, fromBox.y1], [x, toBox.y2]);\n    }\n\n    return points;\n  };\n\n  WaterfallSegment.prototype.createVisual = function createVisual() {\n    ChartElement.prototype.createVisual.call(this);\n    var line = this.series.line || {};\n    var path = draw.Path.fromPoints(this.linePoints(), {\n      stroke: {\n        color: line.color,\n        width: line.width,\n        opacity: line.opacity,\n        dashType: line.dashType\n      }\n    });\n    alignPathToPixel(path);\n    this.visual.append(path);\n  };\n\n  return WaterfallSegment;\n}(ChartElement);\n\nsetDefaultOptions(WaterfallSegment, {\n  animation: {\n    type: FADEIN,\n    delay: INITIAL_ANIMATION_DURATION\n  }\n});\nexport default WaterfallSegment;","map":{"version":3,"sources":["/Users/lazybaccha/Documents/Honeywell/SBE/node_modules/@progress/kendo-charts/dist/es/chart/waterfall-chart/waterfall-segment.js"],"names":["drawing","draw","ChartElement","FADEIN","INITIAL_ANIMATION_DURATION","alignPathToPixel","setDefaultOptions","WaterfallSegment","from","to","series","call","__proto__","prototype","Object","create","constructor","linePoints","ref","fromBox","box","toBox","points","isVertical","y","aboveAxis","y1","y2","push","x1","x2","x","createVisual","line","path","Path","fromPoints","stroke","color","width","opacity","dashType","visual","append","animation","type","delay"],"mappings":"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","sourcesContent":["import { drawing as draw } from '@progress/kendo-drawing';\n\nimport { ChartElement } from '../../core';\n\nimport { FADEIN, INITIAL_ANIMATION_DURATION } from '../constants';\n\nimport { alignPathToPixel, setDefaultOptions } from '../../common';\n\nvar WaterfallSegment = (function (ChartElement) {\n    function WaterfallSegment(from, to, series) {\n        ChartElement.call(this);\n\n        this.from = from;\n        this.to = to;\n        this.series = series;\n    }\n\n    if ( ChartElement ) WaterfallSegment.__proto__ = ChartElement;\n    WaterfallSegment.prototype = Object.create( ChartElement && ChartElement.prototype );\n    WaterfallSegment.prototype.constructor = WaterfallSegment;\n\n    WaterfallSegment.prototype.linePoints = function linePoints () {\n        var from = this.from;\n        var ref = this;\n        var fromBox = ref.from.box;\n        var toBox = ref.to.box;\n        var points = [];\n\n        if (from.isVertical) {\n            var y = from.aboveAxis ? fromBox.y1 : fromBox.y2;\n            points.push(\n                [ fromBox.x1, y ],\n                [ toBox.x2, y ]\n            );\n        } else {\n            var x = from.aboveAxis ? fromBox.x2 : fromBox.x1;\n            points.push(\n                [ x, fromBox.y1 ],\n                [ x, toBox.y2 ]\n            );\n        }\n\n        return points;\n    };\n\n    WaterfallSegment.prototype.createVisual = function createVisual () {\n        ChartElement.prototype.createVisual.call(this);\n\n        var line = this.series.line || {};\n\n        var path = draw.Path.fromPoints(this.linePoints(), {\n            stroke: {\n                color: line.color,\n                width: line.width,\n                opacity: line.opacity,\n                dashType: line.dashType\n            }\n        });\n\n        alignPathToPixel(path);\n        this.visual.append(path);\n    };\n\n    return WaterfallSegment;\n}(ChartElement));\n\nsetDefaultOptions(WaterfallSegment, {\n    animation: {\n        type: FADEIN,\n        delay: INITIAL_ANIMATION_DURATION\n    }\n});\n\nexport default WaterfallSegment;"]},"metadata":{},"sourceType":"module"}