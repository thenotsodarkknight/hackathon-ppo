{"ast":null,"code":"import BaseTooltip from './base-tooltip';\nimport { Point } from '../../core';\nimport { grep, setDefaultOptions } from '../../common';\n\nvar SharedTooltip = function (BaseTooltip) {\n  function SharedTooltip(plotArea, options) {\n    BaseTooltip.call(this, plotArea.chartService, options);\n    this.plotArea = plotArea;\n    this.formatService = plotArea.chartService.format;\n  }\n\n  if (BaseTooltip) SharedTooltip.__proto__ = BaseTooltip;\n  SharedTooltip.prototype = Object.create(BaseTooltip && BaseTooltip.prototype);\n  SharedTooltip.prototype.constructor = SharedTooltip;\n\n  SharedTooltip.prototype.showAt = function showAt(points, coords) {\n    var tooltipPoints = grep(points, function (point) {\n      var tooltip = point.series.tooltip;\n      var excluded = tooltip && tooltip.visible === false;\n      return !excluded;\n    });\n\n    if (tooltipPoints.length > 0) {\n      var point = tooltipPoints[0];\n      var slot = this.plotArea.categoryAxis.getSlot(point.categoryIx);\n      var anchor = coords ? this._slotAnchor(coords, slot) : this._defaultAnchor(point, slot);\n      this.show({\n        anchor: anchor,\n        shared: true,\n        points: points,\n        category: point.category,\n        categoryText: this.formatService.auto(this.options.categoryFormat, point.category),\n        series: this.plotArea.series\n      }, this.options);\n    }\n  };\n\n  SharedTooltip.prototype._slotAnchor = function _slotAnchor(point, slot) {\n    var axis = this.plotArea.categoryAxis;\n    var align = {\n      horizontal: \"left\",\n      vertical: \"center\"\n    };\n\n    if (!axis.options.vertical) {\n      point.x = slot.center().x;\n    }\n\n    return {\n      point: point,\n      align: align\n    };\n  };\n\n  SharedTooltip.prototype._defaultAnchor = function _defaultAnchor(point, slot) {\n    var box = point.owner.pane.chartsBox();\n    var vertical = this.plotArea.categoryAxis.options.vertical;\n    var center = box.center();\n    var slotCenter = slot.center();\n    var align = {\n      horizontal: \"center\",\n      vertical: \"center\"\n    };\n    var centerPoint;\n\n    if (vertical) {\n      centerPoint = new Point(center.x, slotCenter.y);\n    } else {\n      centerPoint = new Point(slotCenter.x, center.y);\n    }\n\n    return {\n      point: centerPoint,\n      align: align\n    };\n  };\n\n  return SharedTooltip;\n}(BaseTooltip);\n\nsetDefaultOptions(SharedTooltip, {\n  categoryFormat: '{0:d}'\n});\nexport default SharedTooltip;","map":{"version":3,"sources":["/Users/lazybaccha/Documents/Honeywell/SBE/node_modules/@progress/kendo-charts/dist/es/chart/tooltip/shared-tooltip.js"],"names":["BaseTooltip","Point","grep","setDefaultOptions","SharedTooltip","plotArea","options","call","chartService","formatService","format","__proto__","prototype","Object","create","constructor","showAt","points","coords","tooltipPoints","point","tooltip","series","excluded","visible","length","slot","categoryAxis","getSlot","categoryIx","anchor","_slotAnchor","_defaultAnchor","show","shared","category","categoryText","auto","categoryFormat","axis","align","horizontal","vertical","x","center","box","owner","pane","chartsBox","slotCenter","centerPoint","y"],"mappings":"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","sourcesContent":["import BaseTooltip from './base-tooltip';\nimport { Point } from '../../core';\n\nimport { grep, setDefaultOptions } from '../../common';\n\nvar SharedTooltip = (function (BaseTooltip) {\n    function SharedTooltip(plotArea, options) {\n        BaseTooltip.call(this, plotArea.chartService, options);\n\n        this.plotArea = plotArea;\n        this.formatService = plotArea.chartService.format;\n    }\n\n    if ( BaseTooltip ) SharedTooltip.__proto__ = BaseTooltip;\n    SharedTooltip.prototype = Object.create( BaseTooltip && BaseTooltip.prototype );\n    SharedTooltip.prototype.constructor = SharedTooltip;\n\n    SharedTooltip.prototype.showAt = function showAt (points, coords) {\n        var tooltipPoints = grep(points, function(point) {\n            var tooltip = point.series.tooltip;\n            var excluded = tooltip && tooltip.visible === false;\n\n            return !excluded;\n        });\n\n        if (tooltipPoints.length > 0) {\n            var point = tooltipPoints[0];\n            var slot = this.plotArea.categoryAxis.getSlot(point.categoryIx);\n\n            var anchor = coords ? this._slotAnchor(coords, slot) : this._defaultAnchor(point, slot);\n\n            this.show({\n                anchor: anchor,\n                shared: true,\n                points: points,\n                category: point.category,\n                categoryText: this.formatService.auto(this.options.categoryFormat, point.category),\n                series: this.plotArea.series\n            }, this.options);\n        }\n    };\n\n    SharedTooltip.prototype._slotAnchor = function _slotAnchor (point, slot) {\n        var axis = this.plotArea.categoryAxis;\n        var align = {\n            horizontal: \"left\",\n            vertical: \"center\"\n        };\n\n        if (!axis.options.vertical) {\n            point.x = slot.center().x;\n        }\n\n        return {\n            point: point,\n            align: align\n        };\n    };\n\n    SharedTooltip.prototype._defaultAnchor = function _defaultAnchor (point, slot) {\n        var box = point.owner.pane.chartsBox();\n        var vertical = this.plotArea.categoryAxis.options.vertical;\n        var center = box.center();\n        var slotCenter = slot.center();\n        var align = {\n            horizontal: \"center\",\n            vertical: \"center\"\n        };\n\n        var centerPoint;\n        if (vertical) {\n            centerPoint = new Point(center.x, slotCenter.y);\n        } else {\n            centerPoint = new Point(slotCenter.x, center.y);\n        }\n\n        return {\n            point: centerPoint,\n            align: align\n        };\n    };\n\n    return SharedTooltip;\n}(BaseTooltip));\n\nsetDefaultOptions(SharedTooltip, {\n    categoryFormat: '{0:d}'\n});\n\nexport default SharedTooltip;"]},"metadata":{},"sourceType":"module"}