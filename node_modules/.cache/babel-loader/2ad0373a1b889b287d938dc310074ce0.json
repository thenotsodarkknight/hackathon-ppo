{"ast":null,"code":"import dateEquals from './date-equals';\nexport default function lteDateIndex(date, sortedDates) {\n  var low = 0;\n  var high = sortedDates.length - 1;\n  var index;\n\n  while (low <= high) {\n    index = Math.floor((low + high) / 2);\n    var currentDate = sortedDates[index];\n\n    if (currentDate < date) {\n      low = index + 1;\n      continue;\n    }\n\n    if (currentDate > date) {\n      high = index - 1;\n      continue;\n    }\n\n    while (dateEquals(sortedDates[index - 1], date)) {\n      index--;\n    }\n\n    return index;\n  }\n\n  if (sortedDates[index] <= date) {\n    return index;\n  }\n\n  return index - 1;\n}","map":{"version":3,"sources":["/Users/lazybaccha/Documents/Honeywell/SBE/node_modules/@progress/kendo-charts/dist/es/date-utils/lte-date-index.js"],"names":["dateEquals","lteDateIndex","date","sortedDates","low","high","length","index","Math","floor","currentDate"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,eAAvB;AAEA,eAAe,SAASC,YAAT,CAAsBC,IAAtB,EAA4BC,WAA5B,EAAyC;AACpD,MAAIC,GAAG,GAAG,CAAV;AACA,MAAIC,IAAI,GAAGF,WAAW,CAACG,MAAZ,GAAqB,CAAhC;AACA,MAAIC,KAAJ;;AAEA,SAAOH,GAAG,IAAIC,IAAd,EAAoB;AAChBE,IAAAA,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACL,GAAG,GAAGC,IAAP,IAAe,CAA1B,CAAR;AACA,QAAIK,WAAW,GAAGP,WAAW,CAACI,KAAD,CAA7B;;AAEA,QAAIG,WAAW,GAAGR,IAAlB,EAAwB;AACpBE,MAAAA,GAAG,GAAGG,KAAK,GAAG,CAAd;AACA;AACH;;AAED,QAAIG,WAAW,GAAGR,IAAlB,EAAwB;AACpBG,MAAAA,IAAI,GAAGE,KAAK,GAAG,CAAf;AACA;AACH;;AAED,WAAOP,UAAU,CAACG,WAAW,CAACI,KAAK,GAAG,CAAT,CAAZ,EAAyBL,IAAzB,CAAjB,EAAiD;AAC7CK,MAAAA,KAAK;AACR;;AAED,WAAOA,KAAP;AACH;;AAED,MAAIJ,WAAW,CAACI,KAAD,CAAX,IAAsBL,IAA1B,EAAgC;AAC5B,WAAOK,KAAP;AACH;;AAED,SAAOA,KAAK,GAAG,CAAf;AACH","sourcesContent":["import dateEquals from './date-equals';\n\nexport default function lteDateIndex(date, sortedDates) {\n    var low = 0;\n    var high = sortedDates.length - 1;\n    var index;\n\n    while (low <= high) {\n        index = Math.floor((low + high) / 2);\n        var currentDate = sortedDates[index];\n\n        if (currentDate < date) {\n            low = index + 1;\n            continue;\n        }\n\n        if (currentDate > date) {\n            high = index - 1;\n            continue;\n        }\n\n        while (dateEquals(sortedDates[index - 1], date)) {\n            index--;\n        }\n\n        return index;\n    }\n\n    if (sortedDates[index] <= date) {\n        return index;\n    }\n\n    return index - 1;\n}"]},"metadata":{},"sourceType":"module"}