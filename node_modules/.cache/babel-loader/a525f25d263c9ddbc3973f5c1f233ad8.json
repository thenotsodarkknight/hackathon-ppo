{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { SplitterPane } from './SplitterPane';\nimport { SplitterBar } from './SplitterBar';\nimport { classNames } from '@progress/kendo-react-common';\n/**\n * @hidden\n */\n\nvar PANE_DEFAULTS = {\n  collapsible: false,\n  collapsed: false,\n  resizable: true,\n  scrollable: true\n};\n/**\n * @hidden\n */\n\nvar DOUBLE_CLICK_WAIT_TIME = 150;\n/**\n * Represents the [KendoReact Splitter component]({% slug overview_splitter %}).\n *\n * @example\n * ```jsx\n * class App extends React.Component {\n *    render() {\n *        return (\n *            <div>\n *                <Splitter\n *                    style={{height: 400}}\n *                    orientation={'vertical'}\n *                >\n *                    <div>Pane 1</div>\n *                    <div>Pane 2</div>\n *                    <div>Pane 3</div>\n *                </Splitter>\n *            </div>\n *        );\n *    }\n * }\n *\n * ReactDOM.render(<App />, document.querySelector('my-app'));\n * ```\n */\n\nvar Splitter =\n/** @class */\nfunction (_super) {\n  __extends(Splitter, _super);\n  /**\n   * @hidden\n   */\n\n\n  function Splitter(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.validatePanes = function (panesOptions) {\n      var withoutSize = panesOptions.filter(function (pane) {\n        return pane.size === undefined;\n      });\n\n      if (!withoutSize.length) {\n        throw new Error('The Splitter should have at least one pane without a set size.');\n      }\n    };\n\n    _this.mapPaneOptions = function (panes, panesContent) {\n      var orientation = _this.orientation;\n      var _a = _this.state,\n          dragIndex = _a.dragIndex,\n          isDragging = _a.isDragging;\n      var paneOptions = [];\n\n      for (var index = 0; index < panesContent.length; index++) {\n        var containsSplitter = false;\n        var paneContent = panesContent[index];\n\n        if (React.isValidElement(paneContent)) {\n          containsSplitter = paneContent.type.displayName === 'Splitter';\n        }\n\n        var overlay = false;\n\n        if (isDragging && dragIndex !== undefined) {\n          overlay = dragIndex === index || dragIndex + 1 === index;\n        }\n\n        paneOptions.push(__assign({}, PANE_DEFAULTS, {\n          orientation: orientation,\n          containsSplitter: containsSplitter,\n          overlay: overlay\n        }, (panes || [])[index]));\n      }\n\n      return paneOptions;\n    };\n\n    _this.mapSplitterPanes = function (panes, panesContent) {\n      return panes.map(function (pane, index) {\n        var splitterBar;\n        var paneKey = index * 2;\n        var barKey = paneKey + 1;\n\n        if (index + 1 < panes.length) {\n          var next = panes[index + 1];\n          splitterBar = React.createElement(SplitterBar, {\n            key: barKey,\n            index: index,\n            orientation: pane.orientation,\n            prev: pane,\n            next: next,\n            onDrag: _this.onBarDragResize,\n            onToggle: _this.onBarToggle,\n            onKeyboardResize: _this.onBarKeyboardResize\n          });\n        }\n\n        var splitterPane = React.createElement(SplitterPane, __assign({\n          key: paneKey\n        }, pane), panesContent[index]);\n        return [splitterPane, splitterBar];\n      });\n    };\n\n    _this.onBarToggle = function (index) {\n      var panesOptions = _this.panesOptions(_this.panesContent);\n\n      var updatedState = panesOptions.map(function (pane, idx) {\n        var paneProps = _this.getPaneProps(pane);\n\n        if (idx === index) {\n          return __assign({}, paneProps, {\n            collapsed: !pane.collapsed\n          });\n        } else {\n          return __assign({}, paneProps);\n        }\n      });\n\n      if (_this.props.onLayoutChange) {\n        _this.props.onLayoutChange(updatedState, true);\n      }\n    };\n\n    _this.onBarDragResize = function (event, barElement, index, isFirst, isLast) {\n      var time = new Date().getTime();\n      var pageX = event.pageX,\n          pageY = event.pageY;\n\n      var _a = _this.surroudingPanes(barElement),\n          prevElement = _a.prevElement,\n          nextElement = _a.nextElement;\n\n      if (!prevElement || !nextElement) {\n        return;\n      }\n\n      if (isFirst) {\n        _this.setState({\n          isDragging: true,\n          dragIndex: index,\n          startTime: time,\n          originalX: pageX,\n          originalY: pageY,\n          originalPrevSize: _this.elementSize(prevElement),\n          originalNextSize: _this.elementSize(nextElement)\n        });\n\n        return;\n      }\n\n      var _b = _this.state,\n          originalPrevSize = _b.originalPrevSize,\n          originalNextSize = _b.originalNextSize,\n          startTime = _b.startTime,\n          originalX = _b.originalX,\n          originalY = _b.originalY;\n\n      if (!isFirst && time - startTime < DOUBLE_CLICK_WAIT_TIME) {\n        if (isLast) {\n          _this.resetDragState();\n        }\n\n        return;\n      }\n\n      var delta;\n\n      if (_this.orientation === 'vertical') {\n        delta = pageY - originalY;\n      } else if (_this.isRtl) {\n        delta = originalX - pageX;\n      } else {\n        delta = pageX - originalX;\n      }\n\n      _this.resize(index, index + 1, originalPrevSize, originalNextSize, delta, isLast);\n\n      if (isLast) {\n        _this.resetDragState();\n      }\n    };\n\n    _this.onBarKeyboardResize = function (barElement, index, delta) {\n      var _a = _this.surroudingPanes(barElement),\n          prevElement = _a.prevElement,\n          nextElement = _a.nextElement;\n\n      var originalPrevSize = _this.elementSize(prevElement);\n\n      var originalNextSize = _this.elementSize(nextElement);\n\n      _this.resize(index, index + 1, originalPrevSize, originalNextSize, delta, true);\n    };\n\n    _this.containerSize = function () {\n      if (!_this._container) {\n        return 0;\n      }\n\n      return _this.elementSize(_this._container, true);\n    };\n\n    _this.panesOptions = function (panesContent) {\n      return _this.mapPaneOptions(_this.panes, panesContent);\n    };\n\n    _this.elementSize = function (el, isContainer) {\n      var sizeType = isContainer ? 'client' : 'offset';\n\n      if (_this.orientation === 'vertical') {\n        return el[sizeType + \"Height\"];\n      } else {\n        return el[sizeType + \"Width\"];\n      }\n    };\n\n    _this.clamp = function (min, max, v) {\n      return Math.min(max, Math.max(min, v));\n    };\n\n    _this.fixedSize = function (size) {\n      return size && size.length > 0;\n    };\n\n    _this.state = {\n      isDragging: false,\n      dragIndex: undefined,\n      startTime: 0,\n      originalX: 0,\n      originalY: 0,\n      originalPrevSize: 0,\n      originalNextSize: 0,\n      panes: props.defaultPanes || []\n    };\n    return _this;\n  }\n\n  Object.defineProperty(Splitter.prototype, \"isControlledState\", {\n    get: function get() {\n      return this.props.panes !== undefined;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Splitter.prototype, \"panes\", {\n    get: function get() {\n      return this.panesDuringOnChange !== undefined ? this.panesDuringOnChange : this.isControlledState ? this.props.panes : this.state.panes;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Splitter.prototype, \"orientation\", {\n    get: function get() {\n      return this.props.orientation || 'horizontal';\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Splitter.prototype, \"isRtl\", {\n    get: function get() {\n      return this._container && getComputedStyle(this._container).direction === 'rtl' || false;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Splitter.prototype, \"panesContent\", {\n    get: function get() {\n      return React.Children.toArray(this.props.children).filter(function (c) {\n        return c;\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * @hidden\n   */\n\n  Splitter.prototype.render = function () {\n    var _this = this;\n\n    var panesContent = this.panesContent;\n    var panesOptions = this.panesOptions(panesContent);\n    var className = classNames('k-widget', 'k-splitter', 'k-splitter-flex', \"k-splitter-\" + this.orientation, this.props.className);\n    this.validatePanes(panesOptions);\n    return React.createElement(\"div\", {\n      style: this.props.style,\n      ref: function ref(_ref) {\n        return _this._container = _ref;\n      },\n      className: className\n    }, this.mapSplitterPanes(panesOptions, panesContent));\n  };\n\n  Splitter.prototype.surroudingPanes = function (barElement) {\n    return {\n      prevElement: barElement.previousElementSibling,\n      nextElement: barElement.nextElementSibling\n    };\n  };\n\n  Splitter.prototype.isPercent = function (size) {\n    return /%$/.test(size);\n  };\n\n  Splitter.prototype.toPixels = function (size, splitterSize) {\n    var result = parseInt(size, 10);\n\n    if (this.isPercent(size)) {\n      result = splitterSize * result / 100;\n    }\n\n    return result;\n  };\n\n  Splitter.prototype.resetDragState = function () {\n    this.setState({\n      isDragging: false,\n      dragIndex: undefined,\n      startTime: 0,\n      originalX: 0,\n      originalY: 0,\n      originalPrevSize: 0,\n      originalNextSize: 0\n    });\n  };\n\n  Splitter.prototype.resize = function (prevIndex, nextIndex, originalPrevSize, originalNextSize, delta, isLast) {\n    var _this = this;\n\n    var panesOptions = this.panesOptions(this.panesContent);\n    var prevOptions = panesOptions[prevIndex];\n    var nextOptions = panesOptions[nextIndex];\n    var total = originalPrevSize + originalNextSize;\n    var splitterSize = this.containerSize();\n\n    var px = function px(s) {\n      return _this.toPixels(s, splitterSize);\n    };\n\n    var prevDragState = {\n      index: prevIndex,\n      initialSize: originalPrevSize,\n      min: px(prevOptions.min) || total - px(nextOptions.max) || 0,\n      max: px(prevOptions.max) || total - px(nextOptions.min) || total\n    };\n    var nextDragState = {\n      index: nextIndex,\n      initialSize: originalNextSize,\n      min: px(nextOptions.min) || total - px(prevOptions.max) || 0,\n      max: px(nextOptions.max) || total - px(prevOptions.min) || total\n    };\n\n    var resize = function resize(paneState, change) {\n      var pane = panesOptions[paneState.index];\n\n      var newSize = _this.clamp(paneState.min, paneState.max, paneState.initialSize + change);\n\n      if (_this.isPercent(pane.size || '')) {\n        return 100 * newSize / splitterSize + '%';\n      } else {\n        return newSize + 'px';\n      }\n    };\n\n    var prevSize;\n    var nextSize;\n\n    if (this.fixedSize(prevOptions.size) && this.fixedSize(nextOptions.size)) {\n      prevSize = resize(prevDragState, delta);\n      nextSize = resize(nextDragState, -delta);\n    } else if (nextOptions.collapsible || this.fixedSize(nextOptions.size)) {\n      nextSize = resize(nextDragState, -delta);\n    } else {\n      prevSize = resize(prevDragState, delta);\n    }\n\n    var updatedState = panesOptions.map(function (pane, idx) {\n      var paneProps = _this.getPaneProps(pane);\n\n      if (idx === prevIndex) {\n        return __assign({}, paneProps, {\n          size: prevSize\n        });\n      } else if (idx === nextIndex) {\n        return __assign({}, paneProps, {\n          size: nextSize\n        });\n      } else {\n        return __assign({}, paneProps);\n      }\n    });\n    this.panesDuringOnChange = updatedState;\n\n    if (!this.isControlledState) {\n      this.setState({\n        panes: updatedState\n      });\n    }\n\n    if (this.props.onLayoutChange) {\n      this.props.onLayoutChange(updatedState, isLast);\n    }\n\n    this.panesDuringOnChange = undefined;\n  };\n\n  Splitter.prototype.getPaneProps = function (pane) {\n    var orientation = pane.orientation,\n        overlay = pane.overlay,\n        containsSplitter = pane.containsSplitter,\n        others = __rest(pane, [\"orientation\", \"overlay\", \"containsSplitter\"]);\n\n    return others;\n  };\n  /**\n   * @hidden\n   */\n\n\n  Splitter.displayName = 'Splitter';\n  return Splitter;\n}(React.Component);\n\nexport { Splitter };","map":{"version":3,"sources":["../../../src/splitter/Splitter.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport * as React from 'react';\nimport { SplitterPane } from './SplitterPane';\nimport { SplitterBar } from './SplitterBar';\nimport { classNames } from '@progress/kendo-react-common';\n/**\n * @hidden\n */\nvar PANE_DEFAULTS = {\n    collapsible: false,\n    collapsed: false,\n    resizable: true,\n    scrollable: true\n};\n/**\n * @hidden\n */\nvar DOUBLE_CLICK_WAIT_TIME = 150;\n/**\n * Represents the [KendoReact Splitter component]({% slug overview_splitter %}).\n *\n * @example\n * ```jsx\n * class App extends React.Component {\n *    render() {\n *        return (\n *            <div>\n *                <Splitter\n *                    style={{height: 400}}\n *                    orientation={'vertical'}\n *                >\n *                    <div>Pane 1</div>\n *                    <div>Pane 2</div>\n *                    <div>Pane 3</div>\n *                </Splitter>\n *            </div>\n *        );\n *    }\n * }\n *\n * ReactDOM.render(<App />, document.querySelector('my-app'));\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * @hidden\n     */\n    function Splitter(props) {\n        var _this = _super.call(this, props) || this;\n        _this.validatePanes = function (panesOptions) {\n            var withoutSize = panesOptions.filter(function (pane) { return pane.size === undefined; });\n            if (!withoutSize.length) {\n                throw new Error('The Splitter should have at least one pane without a set size.');\n            }\n        };\n        _this.mapPaneOptions = function (panes, panesContent) {\n            var orientation = _this.orientation;\n            var _a = _this.state, dragIndex = _a.dragIndex, isDragging = _a.isDragging;\n            var paneOptions = [];\n            for (var index = 0; index < panesContent.length; index++) {\n                var containsSplitter = false;\n                var paneContent = panesContent[index];\n                if (React.isValidElement(paneContent)) {\n                    containsSplitter = paneContent.type.displayName === 'Splitter';\n                }\n                var overlay = false;\n                if (isDragging && dragIndex !== undefined) {\n                    overlay = dragIndex === index || dragIndex + 1 === index;\n                }\n                paneOptions.push(__assign({}, PANE_DEFAULTS, { orientation: orientation,\n                    containsSplitter: containsSplitter,\n                    overlay: overlay }, (panes || [])[index]));\n            }\n            return paneOptions;\n        };\n        _this.mapSplitterPanes = function (panes, panesContent) {\n            return panes.map(function (pane, index) {\n                var splitterBar;\n                var paneKey = index * 2;\n                var barKey = paneKey + 1;\n                if (index + 1 < panes.length) {\n                    var next = panes[index + 1];\n                    splitterBar = (React.createElement(SplitterBar, { key: barKey, index: index, orientation: pane.orientation, prev: pane, next: next, onDrag: _this.onBarDragResize, onToggle: _this.onBarToggle, onKeyboardResize: _this.onBarKeyboardResize }));\n                }\n                var splitterPane = (React.createElement(SplitterPane, __assign({ key: paneKey }, pane), panesContent[index]));\n                return [splitterPane, splitterBar];\n            });\n        };\n        _this.onBarToggle = function (index) {\n            var panesOptions = _this.panesOptions(_this.panesContent);\n            var updatedState = panesOptions.map(function (pane, idx) {\n                var paneProps = _this.getPaneProps(pane);\n                if (idx === index) {\n                    return __assign({}, paneProps, { collapsed: !pane.collapsed });\n                }\n                else {\n                    return __assign({}, paneProps);\n                }\n            });\n            if (_this.props.onLayoutChange) {\n                _this.props.onLayoutChange(updatedState, true);\n            }\n        };\n        _this.onBarDragResize = function (event, barElement, index, isFirst, isLast) {\n            var time = new Date().getTime();\n            var pageX = event.pageX, pageY = event.pageY;\n            var _a = _this.surroudingPanes(barElement), prevElement = _a.prevElement, nextElement = _a.nextElement;\n            if (!prevElement || !nextElement) {\n                return;\n            }\n            if (isFirst) {\n                _this.setState({\n                    isDragging: true,\n                    dragIndex: index,\n                    startTime: time,\n                    originalX: pageX,\n                    originalY: pageY,\n                    originalPrevSize: _this.elementSize(prevElement),\n                    originalNextSize: _this.elementSize(nextElement)\n                });\n                return;\n            }\n            var _b = _this.state, originalPrevSize = _b.originalPrevSize, originalNextSize = _b.originalNextSize, startTime = _b.startTime, originalX = _b.originalX, originalY = _b.originalY;\n            if (!isFirst && time - startTime < DOUBLE_CLICK_WAIT_TIME) {\n                if (isLast) {\n                    _this.resetDragState();\n                }\n                return;\n            }\n            var delta;\n            if (_this.orientation === 'vertical') {\n                delta = pageY - originalY;\n            }\n            else if (_this.isRtl) {\n                delta = originalX - pageX;\n            }\n            else {\n                delta = pageX - originalX;\n            }\n            _this.resize(index, index + 1, originalPrevSize, originalNextSize, delta, isLast);\n            if (isLast) {\n                _this.resetDragState();\n            }\n        };\n        _this.onBarKeyboardResize = function (barElement, index, delta) {\n            var _a = _this.surroudingPanes(barElement), prevElement = _a.prevElement, nextElement = _a.nextElement;\n            var originalPrevSize = _this.elementSize(prevElement);\n            var originalNextSize = _this.elementSize(nextElement);\n            _this.resize(index, index + 1, originalPrevSize, originalNextSize, delta, true);\n        };\n        _this.containerSize = function () {\n            if (!_this._container) {\n                return 0;\n            }\n            return _this.elementSize(_this._container, true);\n        };\n        _this.panesOptions = function (panesContent) {\n            return _this.mapPaneOptions(_this.panes, panesContent);\n        };\n        _this.elementSize = function (el, isContainer) {\n            var sizeType = isContainer ? 'client' : 'offset';\n            if (_this.orientation === 'vertical') {\n                return el[sizeType + \"Height\"];\n            }\n            else {\n                return el[sizeType + \"Width\"];\n            }\n        };\n        _this.clamp = function (min, max, v) { return Math.min(max, Math.max(min, v)); };\n        _this.fixedSize = function (size) { return size && size.length > 0; };\n        _this.state = {\n            isDragging: false,\n            dragIndex: undefined,\n            startTime: 0,\n            originalX: 0,\n            originalY: 0,\n            originalPrevSize: 0,\n            originalNextSize: 0,\n            panes: props.defaultPanes || []\n        };\n        return _this;\n    }\n    Object.defineProperty(Splitter.prototype, \"isControlledState\", {\n        get: function () {\n            return this.props.panes !== undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Splitter.prototype, \"panes\", {\n        get: function () {\n            return this.panesDuringOnChange !== undefined ?\n                this.panesDuringOnChange :\n                (this.isControlledState ? this.props.panes : this.state.panes);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Splitter.prototype, \"orientation\", {\n        get: function () {\n            return this.props.orientation || 'horizontal';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Splitter.prototype, \"isRtl\", {\n        get: function () {\n            return this._container && (getComputedStyle(this._container).direction === 'rtl') || false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Splitter.prototype, \"panesContent\", {\n        get: function () {\n            return React.Children.toArray(this.props.children).filter(function (c) { return c; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @hidden\n     */\n    Splitter.prototype.render = function () {\n        var _this = this;\n        var panesContent = this.panesContent;\n        var panesOptions = this.panesOptions(panesContent);\n        var className = classNames('k-widget', 'k-splitter', 'k-splitter-flex', \"k-splitter-\" + this.orientation, this.props.className);\n        this.validatePanes(panesOptions);\n        return (React.createElement(\"div\", { style: this.props.style, ref: function (ref) { return _this._container = ref; }, className: className }, this.mapSplitterPanes(panesOptions, panesContent)));\n    };\n    Splitter.prototype.surroudingPanes = function (barElement) {\n        return {\n            prevElement: barElement.previousElementSibling,\n            nextElement: barElement.nextElementSibling\n        };\n    };\n    Splitter.prototype.isPercent = function (size) {\n        return /%$/.test(size);\n    };\n    Splitter.prototype.toPixels = function (size, splitterSize) {\n        var result = parseInt(size, 10);\n        if (this.isPercent(size)) {\n            result = (splitterSize * result / 100);\n        }\n        return result;\n    };\n    Splitter.prototype.resetDragState = function () {\n        this.setState({\n            isDragging: false,\n            dragIndex: undefined,\n            startTime: 0,\n            originalX: 0,\n            originalY: 0,\n            originalPrevSize: 0,\n            originalNextSize: 0\n        });\n    };\n    Splitter.prototype.resize = function (prevIndex, nextIndex, originalPrevSize, originalNextSize, delta, isLast) {\n        var _this = this;\n        var panesOptions = this.panesOptions(this.panesContent);\n        var prevOptions = panesOptions[prevIndex];\n        var nextOptions = panesOptions[nextIndex];\n        var total = originalPrevSize + originalNextSize;\n        var splitterSize = this.containerSize();\n        var px = function (s) { return _this.toPixels(s, splitterSize); };\n        var prevDragState = {\n            index: prevIndex,\n            initialSize: originalPrevSize,\n            min: px(prevOptions.min) || total - px(nextOptions.max) || 0,\n            max: px(prevOptions.max) || total - px(nextOptions.min) || total\n        };\n        var nextDragState = {\n            index: nextIndex,\n            initialSize: originalNextSize,\n            min: px(nextOptions.min) || total - px(prevOptions.max) || 0,\n            max: px(nextOptions.max) || total - px(prevOptions.min) || total\n        };\n        var resize = function (paneState, change) {\n            var pane = panesOptions[paneState.index];\n            var newSize = _this.clamp(paneState.min, paneState.max, paneState.initialSize + change);\n            if (_this.isPercent(pane.size || '')) {\n                return 100 * newSize / splitterSize + '%';\n            }\n            else {\n                return newSize + 'px';\n            }\n        };\n        var prevSize;\n        var nextSize;\n        if (this.fixedSize(prevOptions.size) && this.fixedSize(nextOptions.size)) {\n            prevSize = resize(prevDragState, delta);\n            nextSize = resize(nextDragState, -delta);\n        }\n        else if (nextOptions.collapsible || this.fixedSize(nextOptions.size)) {\n            nextSize = resize(nextDragState, -delta);\n        }\n        else {\n            prevSize = resize(prevDragState, delta);\n        }\n        var updatedState = panesOptions.map(function (pane, idx) {\n            var paneProps = _this.getPaneProps(pane);\n            if (idx === prevIndex) {\n                return __assign({}, paneProps, { size: prevSize });\n            }\n            else if (idx === nextIndex) {\n                return __assign({}, paneProps, { size: nextSize });\n            }\n            else {\n                return __assign({}, paneProps);\n            }\n        });\n        this.panesDuringOnChange = updatedState;\n        if (!this.isControlledState) {\n            this.setState({\n                panes: updatedState\n            });\n        }\n        if (this.props.onLayoutChange) {\n            this.props.onLayoutChange(updatedState, isLast);\n        }\n        this.panesDuringOnChange = undefined;\n    };\n    Splitter.prototype.getPaneProps = function (pane) {\n        var orientation = pane.orientation, overlay = pane.overlay, containsSplitter = pane.containsSplitter, others = __rest(pane, [\"orientation\", \"overlay\", \"containsSplitter\"]);\n        return others;\n    };\n    /**\n     * @hidden\n     */\n    Splitter.displayName = 'Splitter';\n    return Splitter;\n}(React.Component));\nexport { Splitter };\n//# sourceMappingURL=Splitter.js.map"]},"metadata":{},"sourceType":"module"}