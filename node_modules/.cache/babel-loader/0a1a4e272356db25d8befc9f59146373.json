{"ast":null,"code":"import { geometry, drawing } from '@progress/kendo-drawing';\nimport { interpolateValue, setDefaultOptions } from '../../common';\nimport { ARROW_POINTER, LINEAR_SPEED, LINEAR } from '../constants';\n\nvar ArrowLinearPointerAnimation = function (superclass) {\n  function ArrowLinearPointerAnimation() {\n    superclass.apply(this, arguments);\n  }\n\n  if (superclass) ArrowLinearPointerAnimation.__proto__ = superclass;\n  ArrowLinearPointerAnimation.prototype = Object.create(superclass && superclass.prototype);\n  ArrowLinearPointerAnimation.prototype.constructor = ArrowLinearPointerAnimation;\n\n  ArrowLinearPointerAnimation.prototype.setup = function setup() {\n    var options = this.options;\n    var margin = options.margin;\n    var from = options.from;\n    var to = options.to;\n    var vertical = options.vertical;\n    var axis = vertical ? \"x1\" : \"y1\";\n\n    if (options.mirror === vertical) {\n      from[axis] -= margin;\n      to[axis] -= margin;\n    } else {\n      from[axis] += margin;\n      to[axis] += margin;\n    }\n\n    var fromScale = this.fromScale = new geometry.Point(from.x1, from.y1);\n    var toScale = this.toScale = new geometry.Point(to.x1, to.y1);\n\n    if (options.duration !== 0) {\n      options.duration = Math.max(fromScale.distanceTo(toScale) / options.duration * 1000, 1);\n    }\n  };\n\n  ArrowLinearPointerAnimation.prototype.step = function step(pos) {\n    var translateX = interpolateValue(this.fromScale.x, this.toScale.x, pos);\n    var translateY = interpolateValue(this.fromScale.y, this.toScale.y, pos);\n    this.element.transform(geometry.transform().translate(translateX, translateY));\n  };\n\n  return ArrowLinearPointerAnimation;\n}(drawing.Animation);\n\nsetDefaultOptions(ArrowLinearPointerAnimation, {\n  easing: LINEAR,\n  duration: LINEAR_SPEED\n});\ndrawing.AnimationFactory.current.register(ARROW_POINTER, ArrowLinearPointerAnimation);\nexport default ArrowLinearPointerAnimation;","map":{"version":3,"sources":["/Users/lazybaccha/Documents/Honeywell/SBE/node_modules/@progress/kendo-charts/dist/es/gauges/linear/arrow-linear-pointer-animation.js"],"names":["geometry","drawing","interpolateValue","setDefaultOptions","ARROW_POINTER","LINEAR_SPEED","LINEAR","ArrowLinearPointerAnimation","superclass","apply","arguments","__proto__","prototype","Object","create","constructor","setup","options","margin","from","to","vertical","axis","mirror","fromScale","Point","x1","y1","toScale","duration","Math","max","distanceTo","step","pos","translateX","x","translateY","y","element","transform","translate","Animation","easing","AnimationFactory","current","register"],"mappings":"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","sourcesContent":["import { geometry, drawing } from '@progress/kendo-drawing';\nimport { interpolateValue, setDefaultOptions } from '../../common';\nimport { ARROW_POINTER, LINEAR_SPEED, LINEAR } from '../constants';\n\nvar ArrowLinearPointerAnimation = (function (superclass) {\n    function ArrowLinearPointerAnimation () {\n        superclass.apply(this, arguments);\n    }\n\n    if ( superclass ) ArrowLinearPointerAnimation.__proto__ = superclass;\n    ArrowLinearPointerAnimation.prototype = Object.create( superclass && superclass.prototype );\n    ArrowLinearPointerAnimation.prototype.constructor = ArrowLinearPointerAnimation;\n\n    ArrowLinearPointerAnimation.prototype.setup = function setup () {\n        var options = this.options;\n        var margin = options.margin;\n        var from = options.from;\n        var to = options.to;\n        var vertical = options.vertical;\n        var axis = vertical ? \"x1\" : \"y1\";\n\n        if (options.mirror === vertical) {\n            from[axis] -= margin; to[axis] -= margin;\n        } else {\n            from[axis] += margin; to[axis] += margin;\n        }\n\n        var fromScale = this.fromScale = new geometry.Point(from.x1, from.y1);\n        var toScale = this.toScale = new geometry.Point(to.x1, to.y1);\n\n        if (options.duration !== 0) {\n            options.duration = Math.max((fromScale.distanceTo(toScale) / options.duration) * 1000, 1);\n        }\n    };\n\n    ArrowLinearPointerAnimation.prototype.step = function step (pos) {\n        var translateX = interpolateValue(this.fromScale.x, this.toScale.x, pos);\n        var translateY = interpolateValue(this.fromScale.y, this.toScale.y, pos);\n\n        this.element.transform(geometry.transform().translate(translateX, translateY));\n    };\n\n    return ArrowLinearPointerAnimation;\n}(drawing.Animation));\n\nsetDefaultOptions(ArrowLinearPointerAnimation, {\n    easing: LINEAR,\n    duration: LINEAR_SPEED\n});\n\ndrawing.AnimationFactory.current.register(ARROW_POINTER, ArrowLinearPointerAnimation);\n\nexport default ArrowLinearPointerAnimation;"]},"metadata":{},"sourceType":"module"}