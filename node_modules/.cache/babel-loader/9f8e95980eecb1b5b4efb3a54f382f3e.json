{"ast":null,"code":"import toChartAxisRanges from './to-chart-axis-ranges';\nimport { X, Y } from '../../common/constants';\nimport { Class, deepExtend } from '../../common';\n\nvar MousewheelZoom = function (Class) {\n  function MousewheelZoom(chart, options) {\n    Class.call(this);\n    this.chart = chart;\n    this.options = deepExtend({}, this.options, options);\n  }\n\n  if (Class) MousewheelZoom.__proto__ = Class;\n  MousewheelZoom.prototype = Object.create(Class && Class.prototype);\n  MousewheelZoom.prototype.constructor = MousewheelZoom;\n\n  MousewheelZoom.prototype.updateRanges = function updateRanges(delta) {\n    var lock = (this.options.lock || \"\").toLowerCase();\n    var axisRanges = [];\n    var axes = this.chart._plotArea.axes;\n\n    for (var idx = 0; idx < axes.length; idx++) {\n      var axis = axes[idx];\n      var vertical = axis.options.vertical;\n\n      if (!(lock === X && !vertical) && !(lock === Y && vertical) && axis.zoomRange) {\n        var range = axis.zoomRange(-delta);\n\n        if (range) {\n          axisRanges.push({\n            axis: axis,\n            range: range\n          });\n        }\n      }\n    }\n\n    this.axisRanges = axisRanges;\n    return toChartAxisRanges(axisRanges);\n  };\n\n  MousewheelZoom.prototype.zoom = function zoom() {\n    var axisRanges = this.axisRanges;\n    var plotArea = this.chart._plotArea;\n\n    if (axisRanges && axisRanges.length && plotArea.updateAxisOptions) {\n      for (var idx = 0; idx < axisRanges.length; idx++) {\n        var axisRange = axisRanges[idx];\n        plotArea.updateAxisOptions(axisRange.axis, axisRange.range);\n      }\n\n      plotArea.redraw(plotArea.panes);\n    }\n  };\n\n  MousewheelZoom.prototype.destroy = function destroy() {\n    delete this.chart;\n  };\n\n  return MousewheelZoom;\n}(Class);\n\nexport default MousewheelZoom;","map":{"version":3,"sources":["/Users/lazybaccha/Documents/Honeywell/SBE/node_modules/@progress/kendo-charts/dist/es/chart/pan-and-zoom/mousewheel-zoom.js"],"names":["toChartAxisRanges","X","Y","Class","deepExtend","MousewheelZoom","chart","options","call","__proto__","prototype","Object","create","constructor","updateRanges","delta","lock","toLowerCase","axisRanges","axes","_plotArea","idx","length","axis","vertical","zoomRange","range","push","zoom","plotArea","updateAxisOptions","axisRange","redraw","panes","destroy"],"mappings":"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","sourcesContent":["\nimport toChartAxisRanges from './to-chart-axis-ranges';\n\nimport { X, Y } from '../../common/constants';\nimport { Class, deepExtend } from '../../common';\n\nvar MousewheelZoom = (function (Class) {\n    function MousewheelZoom(chart, options) {\n        Class.call(this);\n\n        this.chart = chart;\n        this.options = deepExtend({}, this.options, options);\n    }\n\n    if ( Class ) MousewheelZoom.__proto__ = Class;\n    MousewheelZoom.prototype = Object.create( Class && Class.prototype );\n    MousewheelZoom.prototype.constructor = MousewheelZoom;\n\n    MousewheelZoom.prototype.updateRanges = function updateRanges (delta) {\n        var lock = (this.options.lock || \"\").toLowerCase();\n        var axisRanges = [];\n        var axes = this.chart._plotArea.axes;\n\n        for (var idx = 0; idx < axes.length; idx++) {\n            var axis = axes[idx];\n            var vertical = axis.options.vertical;\n\n            if (!(lock === X && !vertical) && !(lock === Y && vertical) && axis.zoomRange) {\n                var range = axis.zoomRange(-delta);\n\n                if (range) {\n                    axisRanges.push({\n                        axis: axis,\n                        range: range\n                    });\n                }\n            }\n        }\n\n        this.axisRanges = axisRanges;\n        return toChartAxisRanges(axisRanges);\n    };\n\n    MousewheelZoom.prototype.zoom = function zoom () {\n        var axisRanges = this.axisRanges;\n        var plotArea = this.chart._plotArea;\n\n        if (axisRanges && axisRanges.length && plotArea.updateAxisOptions) {\n            for (var idx = 0; idx < axisRanges.length; idx++) {\n                var axisRange = axisRanges[idx];\n                plotArea.updateAxisOptions(axisRange.axis, axisRange.range);\n            }\n            plotArea.redraw(plotArea.panes);\n        }\n    };\n\n    MousewheelZoom.prototype.destroy = function destroy () {\n        delete this.chart;\n    };\n\n    return MousewheelZoom;\n}(Class));\n\nexport default MousewheelZoom;"]},"metadata":{},"sourceType":"module"}