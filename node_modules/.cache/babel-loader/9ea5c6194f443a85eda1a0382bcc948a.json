{"ast":null,"code":"/**\n * @hidden\n */\nvar MouseOverHandler =\n/** @class */\nfunction () {\n  function MouseOverHandler(openOnClick, resetMenu, openItem) {\n    this.openOnClick = openOnClick;\n    this.resetMenu = resetMenu;\n    this.openItem = openItem;\n    this.openOnClick = openOnClick;\n    this.isMouseOverEnabled = openOnClick ? false : true;\n  }\n\n  Object.defineProperty(MouseOverHandler.prototype, \"OpenOnClick\", {\n    set: function set(value) {\n      if (Boolean(value) !== Boolean(this.openOnClick)) {\n        this.mouseDown = false;\n        this.isMouseOverEnabled = value ? false : true;\n      }\n\n      this.openOnClick = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  MouseOverHandler.prototype.handleItemSelectedViaKeyboard = function () {\n    if (this.openOnClick) {\n      this.isMouseOverEnabled = false;\n      this.resetMenu();\n    }\n  };\n\n  Object.defineProperty(MouseOverHandler.prototype, \"IsMouseOverEnabled\", {\n    get: function get() {\n      return this.isMouseOverEnabled;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  MouseOverHandler.prototype.handleItemMouseDown = function () {\n    this.mouseDown = true;\n  };\n\n  MouseOverHandler.prototype.handleItemFocus = function () {\n    // Keep opening on mouse over upon tabbing\n    // and keyboard navigation. However, discard the event\n    // upon click because a cycle occurs and the item does not open.\n    if (this.openOnClick && !this.mouseDown) {\n      this.isMouseOverEnabled = true;\n    }\n\n    this.mouseDown = false;\n  };\n\n  MouseOverHandler.prototype.handleItemClick = function (itemId, clickedItemIsWithDefaultClose) {\n    if (this.openOnClick) {\n      if (this.isMouseOverEnabled) {\n        if (clickedItemIsWithDefaultClose) {\n          this.isMouseOverEnabled = false;\n          this.resetMenu();\n        }\n      } else {\n        this.isMouseOverEnabled = true;\n        this.openItem(itemId);\n      }\n    }\n  };\n\n  return MouseOverHandler;\n}();\n\nexport default MouseOverHandler;","map":{"version":3,"sources":["../../../../src/menu/utils/MouseOverHandler.ts"],"names":[],"mappings":"AAAA;;;AAGA,IAAA,gBAAA;AAAA;AAAA,YAAA;AAII,WAAA,gBAAA,CACY,WADZ,EAEY,SAFZ,EAGY,QAHZ,EAGyB;AAFb,SAAA,WAAA,GAAA,WAAA;AACA,SAAA,SAAA,GAAA,SAAA;AACA,SAAA,QAAA,GAAA,QAAA;AAER,SAAK,WAAL,GAAmB,WAAnB;AACA,SAAK,kBAAL,GAA0B,WAAW,GAAG,KAAH,GAAW,IAAhD;AACH;;AAED,EAAA,MAAA,CAAA,cAAA,CAAW,gBAAA,CAAA,SAAX,EAAW,aAAX,EAAsB;SAAtB,aAAuB,KAAvB,EAAiD;AAC7C,UAAI,OAAO,CAAC,KAAD,CAAP,KAAmB,OAAO,CAAC,KAAK,WAAN,CAA9B,EAAkD;AAC9C,aAAK,SAAL,GAAiB,KAAjB;AACA,aAAK,kBAAL,GAA0B,KAAK,GAAG,KAAH,GAAW,IAA1C;AACH;;AAED,WAAK,WAAL,GAAmB,KAAnB;AACH,KAPqB;oBAAA;;AAAA,GAAtB;;AASO,EAAA,gBAAA,CAAA,SAAA,CAAA,6BAAA,GAAP,YAAA;AACI,QAAI,KAAK,WAAT,EAAsB;AAClB,WAAK,kBAAL,GAA0B,KAA1B;AACA,WAAK,SAAL;AACH;AACJ,GALM;;AAOP,EAAA,MAAA,CAAA,cAAA,CAAW,gBAAA,CAAA,SAAX,EAAW,oBAAX,EAA6B;SAA7B,eAAA;AACI,aAAO,KAAK,kBAAZ;AACH,KAF4B;oBAAA;;AAAA,GAA7B;;AAIO,EAAA,gBAAA,CAAA,SAAA,CAAA,mBAAA,GAAP,YAAA;AACI,SAAK,SAAL,GAAiB,IAAjB;AACH,GAFM;;AAIA,EAAA,gBAAA,CAAA,SAAA,CAAA,eAAA,GAAP,YAAA;AACI;AACA;AACA;AACA,QAAI,KAAK,WAAL,IAAoB,CAAC,KAAK,SAA9B,EAAyC;AACrC,WAAK,kBAAL,GAA0B,IAA1B;AACH;;AAED,SAAK,SAAL,GAAiB,KAAjB;AACH,GATM;;AAWA,EAAA,gBAAA,CAAA,SAAA,CAAA,eAAA,GAAP,UAAuB,MAAvB,EAAuC,6BAAvC,EAA6E;AACzE,QAAI,KAAK,WAAT,EAAsB;AAClB,UAAI,KAAK,kBAAT,EAA6B;AACzB,YAAI,6BAAJ,EAAmC;AAC/B,eAAK,kBAAL,GAA0B,KAA1B;AACA,eAAK,SAAL;AACH;AACJ,OALD,MAKO;AACH,aAAK,kBAAL,GAA0B,IAA1B;AACA,aAAK,QAAL,CAAc,MAAd;AACH;AACJ;AACJ,GAZM;;AAaX,SAAA,gBAAA;AAAC,CA7DD,EAAA","sourceRoot":"","sourcesContent":["/**\n * @hidden\n */\nvar MouseOverHandler = /** @class */ (function () {\n    function MouseOverHandler(openOnClick, resetMenu, openItem) {\n        this.openOnClick = openOnClick;\n        this.resetMenu = resetMenu;\n        this.openItem = openItem;\n        this.openOnClick = openOnClick;\n        this.isMouseOverEnabled = openOnClick ? false : true;\n    }\n    Object.defineProperty(MouseOverHandler.prototype, \"OpenOnClick\", {\n        set: function (value) {\n            if (Boolean(value) !== Boolean(this.openOnClick)) {\n                this.mouseDown = false;\n                this.isMouseOverEnabled = value ? false : true;\n            }\n            this.openOnClick = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MouseOverHandler.prototype.handleItemSelectedViaKeyboard = function () {\n        if (this.openOnClick) {\n            this.isMouseOverEnabled = false;\n            this.resetMenu();\n        }\n    };\n    Object.defineProperty(MouseOverHandler.prototype, \"IsMouseOverEnabled\", {\n        get: function () {\n            return this.isMouseOverEnabled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MouseOverHandler.prototype.handleItemMouseDown = function () {\n        this.mouseDown = true;\n    };\n    MouseOverHandler.prototype.handleItemFocus = function () {\n        // Keep opening on mouse over upon tabbing\n        // and keyboard navigation. However, discard the event\n        // upon click because a cycle occurs and the item does not open.\n        if (this.openOnClick && !this.mouseDown) {\n            this.isMouseOverEnabled = true;\n        }\n        this.mouseDown = false;\n    };\n    MouseOverHandler.prototype.handleItemClick = function (itemId, clickedItemIsWithDefaultClose) {\n        if (this.openOnClick) {\n            if (this.isMouseOverEnabled) {\n                if (clickedItemIsWithDefaultClose) {\n                    this.isMouseOverEnabled = false;\n                    this.resetMenu();\n                }\n            }\n            else {\n                this.isMouseOverEnabled = true;\n                this.openItem(itemId);\n            }\n        }\n    };\n    return MouseOverHandler;\n}());\nexport default MouseOverHandler;\n//# sourceMappingURL=MouseOverHandler.js.map"]},"metadata":{},"sourceType":"module"}