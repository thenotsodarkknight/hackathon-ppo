{"ast":null,"code":"import { drawing as draw } from '@progress/kendo-drawing';\nimport ChartElement from './chart-element';\nimport GRADIENTS from './gradients';\nimport Box from './box';\nimport boxDiff from './utils/box-diff';\nimport { DEFAULT_WIDTH, DEFAULT_HEIGHT, WHITE, BLACK } from '../common/constants';\nimport { getSpacing, objectKey, setDefaultOptions } from '../common';\n\nvar RootElement = function (ChartElement) {\n  function RootElement(options) {\n    ChartElement.call(this, options);\n    var rootOptions = this.options;\n    rootOptions.width = parseInt(rootOptions.width, 10);\n    rootOptions.height = parseInt(rootOptions.height, 10);\n    this.gradients = {};\n  }\n\n  if (ChartElement) RootElement.__proto__ = ChartElement;\n  RootElement.prototype = Object.create(ChartElement && ChartElement.prototype);\n  RootElement.prototype.constructor = RootElement;\n\n  RootElement.prototype.reflow = function reflow() {\n    var ref = this;\n    var options = ref.options;\n    var children = ref.children;\n    var currentBox = new Box(0, 0, options.width, options.height);\n    this.box = currentBox.unpad(options.margin);\n\n    for (var i = 0; i < children.length; i++) {\n      children[i].reflow(currentBox);\n      currentBox = boxDiff(currentBox, children[i].box) || new Box();\n    }\n  };\n\n  RootElement.prototype.createVisual = function createVisual() {\n    this.visual = new draw.Group();\n    this.createBackground();\n  };\n\n  RootElement.prototype.createBackground = function createBackground() {\n    var options = this.options;\n    var border = options.border || {};\n    var box = this.box.clone().pad(options.margin).unpad(border.width);\n    var background = draw.Path.fromRect(box.toRect(), {\n      stroke: {\n        color: border.width ? border.color : \"\",\n        width: border.width,\n        dashType: border.dashType\n      },\n      fill: {\n        color: options.background,\n        opacity: options.opacity\n      },\n      zIndex: -10\n    });\n    this.visual.append(background);\n  };\n\n  RootElement.prototype.getRoot = function getRoot() {\n    return this;\n  };\n\n  RootElement.prototype.createGradient = function createGradient(options) {\n    var gradients = this.gradients;\n    var hashCode = objectKey(options);\n    var gradient = GRADIENTS[options.gradient];\n    var drawingGradient;\n\n    if (gradients[hashCode]) {\n      drawingGradient = gradients[hashCode];\n    } else {\n      var gradientOptions = Object.assign({}, gradient, options);\n\n      if (gradient.type === \"linear\") {\n        drawingGradient = new draw.LinearGradient(gradientOptions);\n      } else {\n        if (options.innerRadius) {\n          gradientOptions.stops = innerRadialStops(gradientOptions);\n        }\n\n        drawingGradient = new draw.RadialGradient(gradientOptions);\n        drawingGradient.supportVML = gradient.supportVML !== false;\n      }\n\n      gradients[hashCode] = drawingGradient;\n    }\n\n    return drawingGradient;\n  };\n\n  RootElement.prototype.cleanGradients = function cleanGradients() {\n    var gradients = this.gradients;\n\n    for (var hashCode in gradients) {\n      gradients[hashCode]._observers = []; //add clear observers method in drawing ObserversMixin\n    }\n  };\n\n  RootElement.prototype.size = function size() {\n    var options = this.options;\n    return new Box(0, 0, options.width, options.height);\n  };\n\n  return RootElement;\n}(ChartElement);\n\nsetDefaultOptions(RootElement, {\n  width: DEFAULT_WIDTH,\n  height: DEFAULT_HEIGHT,\n  background: WHITE,\n  border: {\n    color: BLACK,\n    width: 0\n  },\n  margin: getSpacing(5),\n  zIndex: -2\n});\n\nfunction innerRadialStops(options) {\n  var stops = options.stops;\n  var usedSpace = options.innerRadius / options.radius * 100;\n  var length = stops.length;\n  var currentStops = [];\n\n  for (var i = 0; i < length; i++) {\n    var currentStop = Object.assign({}, stops[i]);\n    currentStop.offset = (currentStop.offset * (100 - usedSpace) + usedSpace) / 100;\n    currentStops.push(currentStop);\n  }\n\n  return currentStops;\n}\n\nexport default RootElement;","map":{"version":3,"sources":["/Users/lazybaccha/Documents/Honeywell/SBE/node_modules/@progress/kendo-charts/dist/es/core/root-element.js"],"names":["drawing","draw","ChartElement","GRADIENTS","Box","boxDiff","DEFAULT_WIDTH","DEFAULT_HEIGHT","WHITE","BLACK","getSpacing","objectKey","setDefaultOptions","RootElement","options","call","rootOptions","width","parseInt","height","gradients","__proto__","prototype","Object","create","constructor","reflow","ref","children","currentBox","box","unpad","margin","i","length","createVisual","visual","Group","createBackground","border","clone","pad","background","Path","fromRect","toRect","stroke","color","dashType","fill","opacity","zIndex","append","getRoot","createGradient","hashCode","gradient","drawingGradient","gradientOptions","assign","type","LinearGradient","innerRadius","stops","innerRadialStops","RadialGradient","supportVML","cleanGradients","_observers","size","usedSpace","radius","currentStops","currentStop","offset","push"],"mappings":"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","sourcesContent":["import { drawing as draw } from '@progress/kendo-drawing';\n\nimport ChartElement from './chart-element';\nimport GRADIENTS from './gradients';\nimport Box from './box';\n\nimport boxDiff from './utils/box-diff';\n\nimport { DEFAULT_WIDTH, DEFAULT_HEIGHT, WHITE, BLACK } from '../common/constants';\nimport { getSpacing, objectKey, setDefaultOptions } from '../common';\n\nvar RootElement = (function (ChartElement) {\n    function RootElement(options) {\n        ChartElement.call(this, options);\n\n        var rootOptions = this.options;\n        rootOptions.width = parseInt(rootOptions.width, 10);\n        rootOptions.height = parseInt(rootOptions.height, 10);\n\n        this.gradients = {};\n    }\n\n    if ( ChartElement ) RootElement.__proto__ = ChartElement;\n    RootElement.prototype = Object.create( ChartElement && ChartElement.prototype );\n    RootElement.prototype.constructor = RootElement;\n\n    RootElement.prototype.reflow = function reflow () {\n        var ref = this;\n        var options = ref.options;\n        var children = ref.children;\n        var currentBox = new Box(0, 0, options.width, options.height);\n\n        this.box = currentBox.unpad(options.margin);\n\n        for (var i = 0; i < children.length; i++) {\n            children[i].reflow(currentBox);\n            currentBox = boxDiff(currentBox, children[i].box) || new Box();\n        }\n    };\n\n    RootElement.prototype.createVisual = function createVisual () {\n        this.visual = new draw.Group();\n        this.createBackground();\n    };\n\n    RootElement.prototype.createBackground = function createBackground () {\n        var options = this.options;\n        var border = options.border || {};\n        var box = this.box.clone().pad(options.margin).unpad(border.width);\n\n        var background = draw.Path.fromRect(box.toRect(), {\n            stroke: {\n                color: border.width ? border.color : \"\",\n                width: border.width,\n                dashType: border.dashType\n            },\n            fill: {\n                color: options.background,\n                opacity: options.opacity\n            },\n            zIndex: -10\n        });\n\n        this.visual.append(background);\n    };\n\n    RootElement.prototype.getRoot = function getRoot () {\n        return this;\n    };\n\n    RootElement.prototype.createGradient = function createGradient (options) {\n        var gradients = this.gradients;\n        var hashCode = objectKey(options);\n        var gradient = GRADIENTS[options.gradient];\n        var drawingGradient;\n\n        if (gradients[hashCode]) {\n            drawingGradient = gradients[hashCode];\n        } else {\n            var gradientOptions = Object.assign({}, gradient, options);\n            if (gradient.type === \"linear\") {\n                drawingGradient = new draw.LinearGradient(gradientOptions);\n            } else {\n                if (options.innerRadius) {\n                    gradientOptions.stops = innerRadialStops(gradientOptions);\n                }\n                drawingGradient = new draw.RadialGradient(gradientOptions);\n                drawingGradient.supportVML = gradient.supportVML !== false;\n            }\n            gradients[hashCode] = drawingGradient;\n        }\n\n        return drawingGradient;\n    };\n\n    RootElement.prototype.cleanGradients = function cleanGradients () {\n        var gradients = this.gradients;\n        for (var hashCode in gradients) {\n            gradients[hashCode]._observers = [];//add clear observers method in drawing ObserversMixin\n        }\n    };\n\n    RootElement.prototype.size = function size () {\n        var options = this.options;\n        return new Box(0, 0, options.width, options.height);\n    };\n\n    return RootElement;\n}(ChartElement));\n\nsetDefaultOptions(RootElement, {\n    width: DEFAULT_WIDTH,\n    height: DEFAULT_HEIGHT,\n    background: WHITE,\n    border: {\n        color: BLACK,\n        width: 0\n    },\n    margin: getSpacing(5),\n    zIndex: -2\n});\n\nfunction innerRadialStops(options) {\n    var stops = options.stops;\n    var usedSpace = ((options.innerRadius / options.radius) * 100);\n    var length = stops.length;\n    var currentStops = [];\n\n    for (var i = 0; i < length; i++) {\n        var currentStop = Object.assign({}, stops[i]);\n        currentStop.offset = (currentStop.offset * (100 - usedSpace) + usedSpace) / 100;\n        currentStops.push(currentStop);\n    }\n\n    return currentStops;\n}\n\nexport default RootElement;"]},"metadata":{},"sourceType":"module"}