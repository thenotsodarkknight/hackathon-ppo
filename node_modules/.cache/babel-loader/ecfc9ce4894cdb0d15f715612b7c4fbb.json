{"ast":null,"code":"import BaseTooltip from '../tooltip/base-tooltip';\nimport { HIDE_TOOLTIP } from '../constants';\nimport { TOP, BOTTOM, LEFT, RIGHT, CENTER, DATE } from '../../common/constants';\nimport { setDefaultOptions } from '../../common';\n\nvar CrosshairTooltip = function (BaseTooltip) {\n  function CrosshairTooltip(chartService, crosshair, options) {\n    BaseTooltip.call(this, chartService, options);\n    this.crosshair = crosshair;\n    this.formatService = chartService.format;\n    this.initAxisName();\n  }\n\n  if (BaseTooltip) CrosshairTooltip.__proto__ = BaseTooltip;\n  CrosshairTooltip.prototype = Object.create(BaseTooltip && BaseTooltip.prototype);\n  CrosshairTooltip.prototype.constructor = CrosshairTooltip;\n\n  CrosshairTooltip.prototype.initAxisName = function initAxisName() {\n    var axis = this.crosshair.axis;\n    var plotArea = axis.plotArea;\n    var name;\n\n    if (plotArea.categoryAxis) {\n      name = axis.getCategory ? \"categoryAxis\" : \"valueAxis\";\n    } else {\n      name = axis.options.vertical ? \"yAxis\" : \"xAxis\";\n    }\n\n    this.axisName = name;\n  };\n\n  CrosshairTooltip.prototype.showAt = function showAt(point) {\n    var ref = this;\n    var axis = ref.crosshair.axis;\n    var options = ref.options;\n    var value = axis[options.stickyMode ? \"getCategory\" : \"getValue\"](point);\n    var formattedValue = value;\n\n    if (options.format) {\n      formattedValue = this.formatService.auto(options.format, value);\n    } else if (axis.options.type === DATE) {\n      formattedValue = this.formatService.auto(axis.options.labels.dateFormats[axis.options.baseUnit], value);\n    }\n\n    this.show({\n      point: point,\n      anchor: this.getAnchor(),\n      crosshair: this.crosshair,\n      value: formattedValue,\n      axisName: this.axisName,\n      axisIndex: this.crosshair.axis.axisIndex\n    }, this.options);\n  };\n\n  CrosshairTooltip.prototype.hide = function hide() {\n    this.chartService.notify(HIDE_TOOLTIP, {\n      crosshair: this.crosshair,\n      axisName: this.axisName,\n      axisIndex: this.crosshair.axis.axisIndex\n    });\n  };\n\n  CrosshairTooltip.prototype.getAnchor = function getAnchor() {\n    var ref = this;\n    var crosshair = ref.crosshair;\n    var ref_options = ref.options;\n    var position = ref_options.position;\n    var padding = ref_options.padding;\n    var vertical = !crosshair.axis.options.vertical;\n    var lineBox = crosshair.line.bbox();\n    var horizontalAlign, verticalAlign, point;\n\n    if (vertical) {\n      horizontalAlign = CENTER;\n\n      if (position === BOTTOM) {\n        verticalAlign = TOP;\n        point = lineBox.bottomLeft().translate(0, padding);\n      } else {\n        verticalAlign = BOTTOM;\n        point = lineBox.topLeft().translate(0, -padding);\n      }\n    } else {\n      verticalAlign = CENTER;\n\n      if (position === LEFT) {\n        horizontalAlign = RIGHT;\n        point = lineBox.topLeft().translate(-padding, 0);\n      } else {\n        horizontalAlign = LEFT;\n        point = lineBox.topRight().translate(padding, 0);\n      }\n    }\n\n    return {\n      point: point,\n      align: {\n        horizontal: horizontalAlign,\n        vertical: verticalAlign\n      }\n    };\n  };\n\n  return CrosshairTooltip;\n}(BaseTooltip);\n\nsetDefaultOptions(CrosshairTooltip, {\n  padding: 10\n});\nexport default CrosshairTooltip;","map":{"version":3,"sources":["/Users/lazybaccha/Documents/Honeywell/SBE/node_modules/@progress/kendo-charts/dist/es/chart/crosshair/crosshair-tooltip.js"],"names":["BaseTooltip","HIDE_TOOLTIP","TOP","BOTTOM","LEFT","RIGHT","CENTER","DATE","setDefaultOptions","CrosshairTooltip","chartService","crosshair","options","call","formatService","format","initAxisName","__proto__","prototype","Object","create","constructor","axis","plotArea","name","categoryAxis","getCategory","vertical","axisName","showAt","point","ref","value","stickyMode","formattedValue","auto","type","labels","dateFormats","baseUnit","show","anchor","getAnchor","axisIndex","hide","notify","ref_options","position","padding","lineBox","line","bbox","horizontalAlign","verticalAlign","bottomLeft","translate","topLeft","topRight","align","horizontal"],"mappings":"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","sourcesContent":["import BaseTooltip from '../tooltip/base-tooltip';\n\nimport { HIDE_TOOLTIP } from '../constants';\nimport { TOP, BOTTOM, LEFT, RIGHT, CENTER, DATE } from '../../common/constants';\nimport { setDefaultOptions } from '../../common';\n\nvar CrosshairTooltip = (function (BaseTooltip) {\n    function CrosshairTooltip(chartService, crosshair, options) {\n        BaseTooltip.call(this, chartService, options);\n\n        this.crosshair = crosshair;\n        this.formatService = chartService.format;\n        this.initAxisName();\n    }\n\n    if ( BaseTooltip ) CrosshairTooltip.__proto__ = BaseTooltip;\n    CrosshairTooltip.prototype = Object.create( BaseTooltip && BaseTooltip.prototype );\n    CrosshairTooltip.prototype.constructor = CrosshairTooltip;\n\n    CrosshairTooltip.prototype.initAxisName = function initAxisName () {\n        var axis = this.crosshair.axis;\n        var plotArea = axis.plotArea;\n        var name;\n        if (plotArea.categoryAxis) {\n            name = axis.getCategory ? \"categoryAxis\" : \"valueAxis\";\n        } else {\n            name = axis.options.vertical ? \"yAxis\" : \"xAxis\";\n        }\n        this.axisName = name;\n    };\n\n    CrosshairTooltip.prototype.showAt = function showAt (point) {\n        var ref = this;\n        var axis = ref.crosshair.axis;\n        var options = ref.options;\n        var value = axis[options.stickyMode ? \"getCategory\" : \"getValue\"](point);\n        var formattedValue = value;\n\n        if (options.format) {\n            formattedValue = this.formatService.auto(options.format, value);\n        } else if (axis.options.type === DATE) {\n            formattedValue = this.formatService.auto(axis.options.labels.dateFormats[axis.options.baseUnit], value);\n        }\n\n        this.show({\n            point: point,\n            anchor: this.getAnchor(),\n            crosshair: this.crosshair,\n            value: formattedValue,\n            axisName: this.axisName,\n            axisIndex: this.crosshair.axis.axisIndex\n        }, this.options);\n    };\n\n    CrosshairTooltip.prototype.hide = function hide () {\n        this.chartService.notify(HIDE_TOOLTIP, {\n            crosshair: this.crosshair,\n            axisName: this.axisName,\n            axisIndex: this.crosshair.axis.axisIndex\n        });\n    };\n\n    CrosshairTooltip.prototype.getAnchor = function getAnchor () {\n        var ref = this;\n        var crosshair = ref.crosshair;\n        var ref_options = ref.options;\n        var position = ref_options.position;\n        var padding = ref_options.padding;\n        var vertical = !crosshair.axis.options.vertical;\n        var lineBox = crosshair.line.bbox();\n        var horizontalAlign, verticalAlign, point;\n\n        if (vertical) {\n            horizontalAlign = CENTER;\n            if (position === BOTTOM) {\n                verticalAlign = TOP;\n                point = lineBox.bottomLeft().translate(0, padding);\n            } else {\n                verticalAlign = BOTTOM;\n                point = lineBox.topLeft().translate(0, -padding);\n            }\n        } else {\n            verticalAlign = CENTER;\n            if (position === LEFT) {\n                horizontalAlign = RIGHT;\n                point = lineBox.topLeft().translate(-padding, 0);\n            } else {\n                horizontalAlign = LEFT;\n                point = lineBox.topRight().translate(padding, 0);\n            }\n        }\n\n        return {\n            point: point,\n            align: {\n                horizontal: horizontalAlign,\n                vertical: verticalAlign\n            }\n        };\n    };\n\n    return CrosshairTooltip;\n}(BaseTooltip));\n\nsetDefaultOptions(CrosshairTooltip, {\n    padding: 10\n});\n\nexport default CrosshairTooltip;\n\n"]},"metadata":{},"sourceType":"module"}