{"ast":null,"code":"var _jsxFileName = \"/Users/lazybaccha/Documents/Honeywell/SBE/src/panels/PositionsPanel.tsx\";\nimport React from \"react\";\nimport { Grid, GridColumn } from \"@progress/kendo-react-grid\";\nimport { getPositions } from \"../services/dataService\";\nimport Loading from \"../layout/Loading\";\n\nconst NumberCell = props => {\n  const field = props.field || \"\";\n  const startingValue = props.dataItem[field];\n  let finalValue;\n\n  if (startingValue > 1000000) {\n    finalValue = (startingValue / 1000000).toFixed(2) + \"M\";\n  }\n\n  if (startingValue > 1000000000) {\n    finalValue = (startingValue / 1000000000).toFixed(2) + \"M\";\n  }\n\n  return /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 10\n    }\n  }, finalValue);\n};\n\nconst ChangeCell = props => {\n  const field = props.field || \"\";\n  const value = props.dataItem[field];\n  return /*#__PURE__*/React.createElement(\"td\", {\n    className: value > 0 ? \"change-up\" : \"change-down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, value, \"%\");\n};\n\nexport default function PositionsPanel() {\n  const [positions, setPositions] = React.useState();\n  React.useEffect(() => {\n    getPositions().then(data => {\n      setPositions(data);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, !positions && /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 22\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    data: positions,\n    style: {\n      height: 700,\n      opacity: positions ? \"1\" : \"0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(GridColumn, {\n    title: \"Symbol\",\n    field: \"symbol\",\n    locked: true,\n    width: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(GridColumn, {\n    title: \"Name\",\n    field: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(GridColumn, {\n    title: \"Change\",\n    field: \"day_change\",\n    cell: ChangeCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(GridColumn, {\n    title: \"% Change\",\n    field: \"change_pct\",\n    cell: ChangeCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(GridColumn, {\n    title: \"Volume\",\n    field: \"volume\",\n    cell: NumberCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(GridColumn, {\n    title: \"Market Cap\",\n    field: \"market_cap\",\n    cell: NumberCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/lazybaccha/Documents/Honeywell/SBE/src/panels/PositionsPanel.tsx"],"names":["React","Grid","GridColumn","getPositions","Loading","NumberCell","props","field","startingValue","dataItem","finalValue","toFixed","ChangeCell","value","PositionsPanel","positions","setPositions","useState","useEffect","then","data","height","opacity"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAA8BC,UAA9B,QAAgD,4BAAhD;AAEA,SAASC,YAAT,QAA6B,yBAA7B;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAGA,MAAMC,UAAU,GAAIC,KAAD,IAA0B;AAC3C,QAAMC,KAAK,GAAGD,KAAK,CAACC,KAAN,IAAe,EAA7B;AACA,QAAMC,aAAa,GAAGF,KAAK,CAACG,QAAN,CAAeF,KAAf,CAAtB;AACA,MAAIG,UAAJ;;AAEA,MAAIF,aAAa,GAAG,OAApB,EAA6B;AAC3BE,IAAAA,UAAU,GAAG,CAACF,aAAa,GAAG,OAAjB,EAA0BG,OAA1B,CAAkC,CAAlC,IAAuC,GAApD;AACD;;AACD,MAAIH,aAAa,GAAG,UAApB,EAAgC;AAC9BE,IAAAA,UAAU,GAAG,CAACF,aAAa,GAAG,UAAjB,EAA6BG,OAA7B,CAAqC,CAArC,IAA0C,GAAvD;AACD;;AAED,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,UAAL,CAAP;AACD,CAbD;;AAeA,MAAME,UAAU,GAAIN,KAAD,IAA0B;AAC3C,QAAMC,KAAK,GAAGD,KAAK,CAACC,KAAN,IAAe,EAA7B;AACA,QAAMM,KAAK,GAAGP,KAAK,CAACG,QAAN,CAAeF,KAAf,CAAd;AACA,sBACE;AAAI,IAAA,SAAS,EAAEM,KAAK,GAAG,CAAR,GAAY,WAAZ,GAA0B,aAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KADH,MADF;AAKD,CARD;;AAUA,eAAe,SAASC,cAAT,GAA0B;AACvC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BhB,KAAK,CAACiB,QAAN,EAAlC;AAEAjB,EAAAA,KAAK,CAACkB,SAAN,CAAgB,MAAM;AACpBf,IAAAA,YAAY,GAAGgB,IAAf,CAAqBC,IAAD,IAAsB;AACxCJ,MAAAA,YAAY,CAACI,IAAD,CAAZ;AACD,KAFD;AAGD,GAJD,EAIG,EAJH;AAMA,sBACE,0CACG,CAACL,SAAD,iBAAc,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADjB,eAEE,oBAAC,IAAD;AACE,IAAA,IAAI,EAAEA,SADR;AAEE,IAAA,KAAK,EAAE;AAAEM,MAAAA,MAAM,EAAE,GAAV;AAAeC,MAAAA,OAAO,EAAEP,SAAS,GAAG,GAAH,GAAS;AAA1C,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,QAAlB;AAA2B,IAAA,KAAK,EAAC,QAAjC;AAA0C,IAAA,MAAM,EAAE,IAAlD;AAAwD,IAAA,KAAK,EAAE,GAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,MAAlB;AAAyB,IAAA,KAAK,EAAC,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAME,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,QAAlB;AAA2B,IAAA,KAAK,EAAC,YAAjC;AAA8C,IAAA,IAAI,EAAEH,UAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAOE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,UAAlB;AAA6B,IAAA,KAAK,EAAC,YAAnC;AAAgD,IAAA,IAAI,EAAEA,UAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAQE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,QAAlB;AAA2B,IAAA,KAAK,EAAC,QAAjC;AAA0C,IAAA,IAAI,EAAEP,UAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,eASE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,YAAlB;AAA+B,IAAA,KAAK,EAAC,YAArC;AAAkD,IAAA,IAAI,EAAEA,UAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CAFF,CADF;AAgBD","sourcesContent":["import React from \"react\";\nimport { Grid, GridCellProps, GridColumn } from \"@progress/kendo-react-grid\";\n\nimport { getPositions } from \"../services/dataService\";\nimport Loading from \"../layout/Loading\";\nimport { Position } from \"../data/models\";\n\nconst NumberCell = (props: GridCellProps) => {\n  const field = props.field || \"\";\n  const startingValue = props.dataItem[field];\n  let finalValue;\n\n  if (startingValue > 1000000) {\n    finalValue = (startingValue / 1000000).toFixed(2) + \"M\";\n  }\n  if (startingValue > 1000000000) {\n    finalValue = (startingValue / 1000000000).toFixed(2) + \"M\";\n  }\n\n  return <td>{finalValue}</td>\n}\n\nconst ChangeCell = (props: GridCellProps) => {\n  const field = props.field || \"\";\n  const value = props.dataItem[field];\n  return (\n    <td className={value > 0 ? \"change-up\" : \"change-down\"}>\n      {value}%\n    </td>\n  );\n}\n\nexport default function PositionsPanel() {\n  const [positions, setPositions] = React.useState<Position[]>();\n\n  React.useEffect(() => {\n    getPositions().then((data: Position[]) => {\n      setPositions(data);\n    });\n  }, []);\n\n  return (\n    <>\n      {!positions && <Loading />}\n      <Grid\n        data={positions}\n        style={{ height: 700, opacity: positions ? \"1\" : \"0\" }}\n      >\n        <GridColumn title=\"Symbol\" field=\"symbol\" locked={true} width={100} />\n        <GridColumn title=\"Name\" field=\"name\" />\n        <GridColumn title=\"Change\" field=\"day_change\" cell={ChangeCell} />\n        <GridColumn title=\"% Change\" field=\"change_pct\" cell={ChangeCell} />\n        <GridColumn title=\"Volume\" field=\"volume\" cell={NumberCell} />\n        <GridColumn title=\"Market Cap\" field=\"market_cap\" cell={NumberCell} />\n      </Grid>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}