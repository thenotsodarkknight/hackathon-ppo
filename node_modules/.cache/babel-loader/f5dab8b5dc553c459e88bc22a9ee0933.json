{"ast":null,"code":"import { geometry as geo, drawing } from '@progress/kendo-drawing';\nimport { Class, elementSize, setDefaultOptions, deepExtend, isArray, isNumber } from '../common';\nimport { DEFAULT_WIDTH, DEFAULT_HEIGHT } from './constants';\nimport { ChartService } from '../services';\nimport { unpad } from './utils';\nvar DEFAULT_MARGIN = 5;\nvar Path = drawing.Path;\nvar Surface = drawing.Surface;\n\nvar Gauge = function (Class) {\n  function Gauge(element, userOptions, theme, context) {\n    if (context === void 0) context = {};\n    Class.call(this);\n    this.element = element;\n    this.theme = theme;\n    this.contextService = new ChartService(this, context);\n    this._originalOptions = deepExtend({}, this.options, userOptions);\n    this.options = deepExtend({}, this._originalOptions);\n\n    this._initTheme(theme);\n\n    this.redraw();\n  }\n\n  if (Class) Gauge.__proto__ = Class;\n  Gauge.prototype = Object.create(Class && Class.prototype);\n  Gauge.prototype.constructor = Gauge;\n\n  Gauge.prototype.destroy = function destroy() {\n    if (this.surface) {\n      this.surface.destroy();\n      this.surface = null;\n    }\n\n    delete this.element;\n    delete this.surfaceElement;\n  };\n\n  Gauge.prototype.value = function value(pointerValue) {\n    var pointer = this.pointers[0];\n\n    if (arguments.length === 0) {\n      return pointer.value();\n    }\n\n    pointer.value(pointerValue);\n\n    this._setValueOptions(pointerValue);\n  };\n\n  Gauge.prototype._draw = function _draw() {\n    var surface = this.surface;\n    surface.clear();\n    surface.draw(this._visuals);\n  };\n\n  Gauge.prototype.exportVisual = function exportVisual() {\n    return this._visuals;\n  };\n\n  Gauge.prototype.allValues = function allValues(values) {\n    var pointers = this.pointers;\n    var allValues = [];\n\n    if (arguments.length === 0) {\n      for (var i = 0; i < pointers.length; i++) {\n        allValues.push(pointers[i].value());\n      }\n\n      return allValues;\n    }\n\n    if (isArray(values)) {\n      for (var i$1 = 0; i$1 < values.length; i$1++) {\n        if (isNumber(values[i$1])) {\n          pointers[i$1].value(values[i$1]);\n        }\n      }\n    }\n\n    this._setValueOptions(values);\n  };\n\n  Gauge.prototype._setValueOptions = function _setValueOptions(values) {\n    var pointers = [].concat(this.options.pointer);\n    var arrayValues = [].concat(values);\n\n    for (var i = 0; i < arrayValues.length; i++) {\n      pointers[i].value = arrayValues[i];\n    }\n  };\n\n  Gauge.prototype.resize = function resize() {\n    this.noTransitionsRedraw();\n  };\n\n  Gauge.prototype.noTransitionsRedraw = function noTransitionsRedraw() {\n    var transitions = this.options.transitions;\n\n    this._toggleTransitions(false);\n\n    this.redraw();\n\n    this._toggleTransitions(transitions);\n  };\n\n  Gauge.prototype.redraw = function redraw() {\n    var size = this._surfaceSize();\n\n    var wrapper = new geo.Rect([0, 0], [size.width, size.height]);\n\n    this._initSurface();\n\n    this.gaugeArea = this._createGaugeArea();\n\n    this._createModel();\n\n    var bbox = unpad(wrapper.bbox(), this._gaugeAreaMargin);\n    this.reflow(bbox);\n  };\n\n  Gauge.prototype.setOptions = function setOptions(options, theme) {\n    this._originalOptions = deepExtend(this._originalOptions, options);\n    this.options = deepExtend({}, this._originalOptions);\n\n    this._initTheme(theme);\n\n    this.redraw();\n  };\n\n  Gauge.prototype.setDirection = function setDirection(rtl) {\n    this.contextService.rtl = Boolean(rtl);\n\n    if (this.surface && this.surface.type === 'svg') {\n      this.surface.destroy();\n      this.surface = null;\n    }\n  };\n\n  Gauge.prototype.setIntlService = function setIntlService(intl) {\n    this.contextService.intl = intl;\n  };\n\n  Gauge.prototype._initTheme = function _initTheme(theme) {\n    var currentTheme = theme || this.theme || {};\n    this.theme = currentTheme;\n    this.options = deepExtend({}, currentTheme, this.options);\n    var options = this.options;\n    var pointer = options.pointer;\n\n    if (isArray(pointer)) {\n      var pointers = [];\n\n      for (var i = 0; i < pointer.length; i++) {\n        pointers.push(deepExtend({}, currentTheme.pointer, pointer[i]));\n      }\n\n      options.pointer = pointers;\n    }\n  };\n\n  Gauge.prototype._createGaugeArea = function _createGaugeArea() {\n    var options = this.options.gaugeArea;\n    var size = this.surface.size();\n    var border = options.border || {};\n    var areaGeometry = new geo.Rect([0, 0], [size.width, size.height]);\n    this._gaugeAreaMargin = options.margin || DEFAULT_MARGIN;\n\n    if (border.width > 0) {\n      areaGeometry = unpad(areaGeometry, border.width);\n    }\n\n    var gaugeArea = Path.fromRect(areaGeometry, {\n      stroke: {\n        color: border.width ? border.color : \"\",\n        width: border.width,\n        dashType: border.dashType,\n        lineJoin: \"round\",\n        lineCap: \"round\"\n      },\n      fill: {\n        color: options.background\n      }\n    });\n    return gaugeArea;\n  };\n\n  Gauge.prototype._initSurface = function _initSurface() {\n    var ref = this;\n    var options = ref.options;\n    var surface = ref.surface;\n\n    var element = this._surfaceElement();\n\n    var size = this._surfaceSize();\n\n    elementSize(element, size);\n\n    if (!surface || surface.options.type !== options.renderAs) {\n      if (surface) {\n        surface.destroy();\n      }\n\n      this.surface = Surface.create(element, {\n        type: options.renderAs\n      });\n    } else {\n      this.surface.clear();\n      this.surface.resize();\n    }\n  };\n\n  Gauge.prototype._surfaceSize = function _surfaceSize() {\n    var options = this.options;\n\n    var size = this._getSize();\n\n    if (options.gaugeArea) {\n      deepExtend(size, options.gaugeArea);\n    }\n\n    return size;\n  };\n\n  Gauge.prototype._surfaceElement = function _surfaceElement() {\n    if (!this.surfaceElement) {\n      this.surfaceElement = document.createElement('div');\n      this.element.appendChild(this.surfaceElement);\n    }\n\n    return this.surfaceElement;\n  };\n\n  Gauge.prototype.getSize = function getSize() {\n    return this._getSize();\n  };\n\n  Gauge.prototype._getSize = function _getSize() {\n    var element = this.element;\n\n    var defaultSize = this._defaultSize();\n\n    var width = element.offsetWidth;\n    var height = element.offsetHeight;\n\n    if (!width) {\n      width = defaultSize.width;\n    }\n\n    if (!height) {\n      height = defaultSize.height;\n    }\n\n    return {\n      width: width,\n      height: height\n    };\n  };\n\n  Gauge.prototype._defaultSize = function _defaultSize() {\n    return {\n      width: DEFAULT_WIDTH,\n      height: DEFAULT_HEIGHT\n    };\n  };\n\n  Gauge.prototype._toggleTransitions = function _toggleTransitions(value) {\n    var this$1 = this;\n    this.options.transitions = value;\n\n    for (var i = 0; i < this.pointers.length; i++) {\n      this$1.pointers[i].options.animation.transitions = value;\n    }\n  };\n\n  return Gauge;\n}(Class);\n\nsetDefaultOptions(Gauge, {\n  plotArea: {},\n  theme: \"default\",\n  renderAs: \"\",\n  pointer: {},\n  scale: {},\n  gaugeArea: {}\n});\nexport default Gauge;","map":{"version":3,"sources":["/Users/lazybaccha/Documents/Honeywell/SBE/node_modules/@progress/kendo-charts/dist/es/gauges/gauge.js"],"names":["geometry","geo","drawing","Class","elementSize","setDefaultOptions","deepExtend","isArray","isNumber","DEFAULT_WIDTH","DEFAULT_HEIGHT","ChartService","unpad","DEFAULT_MARGIN","Path","Surface","Gauge","element","userOptions","theme","context","call","contextService","_originalOptions","options","_initTheme","redraw","__proto__","prototype","Object","create","constructor","destroy","surface","surfaceElement","value","pointerValue","pointer","pointers","arguments","length","_setValueOptions","_draw","clear","draw","_visuals","exportVisual","allValues","values","i","push","i$1","concat","arrayValues","resize","noTransitionsRedraw","transitions","_toggleTransitions","size","_surfaceSize","wrapper","Rect","width","height","_initSurface","gaugeArea","_createGaugeArea","_createModel","bbox","_gaugeAreaMargin","reflow","setOptions","setDirection","rtl","Boolean","type","setIntlService","intl","currentTheme","border","areaGeometry","margin","fromRect","stroke","color","dashType","lineJoin","lineCap","fill","background","ref","_surfaceElement","renderAs","_getSize","document","createElement","appendChild","getSize","defaultSize","_defaultSize","offsetWidth","offsetHeight","this$1","animation","plotArea","scale"],"mappings":"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","sourcesContent":["import { geometry as geo, drawing } from '@progress/kendo-drawing';\nimport { Class, elementSize, setDefaultOptions, deepExtend, isArray, isNumber } from '../common';\nimport { DEFAULT_WIDTH, DEFAULT_HEIGHT } from './constants';\nimport { ChartService } from '../services';\nimport { unpad } from './utils';\n\nvar DEFAULT_MARGIN = 5;\nvar Path = drawing.Path;\nvar Surface = drawing.Surface;\n\nvar Gauge = (function (Class) {\n    function Gauge(element, userOptions, theme, context) {\n        if ( context === void 0 ) context = {};\n\n        Class.call(this);\n\n        this.element = element;\n        this.theme = theme;\n        this.contextService = new ChartService(this, context);\n        this._originalOptions = deepExtend({}, this.options, userOptions);\n        this.options = deepExtend({}, this._originalOptions);\n        this._initTheme(theme);\n\n        this.redraw();\n    }\n\n    if ( Class ) Gauge.__proto__ = Class;\n    Gauge.prototype = Object.create( Class && Class.prototype );\n    Gauge.prototype.constructor = Gauge;\n\n    Gauge.prototype.destroy = function destroy () {\n        if (this.surface) {\n            this.surface.destroy();\n            this.surface = null;\n        }\n\n        delete this.element;\n        delete this.surfaceElement;\n    };\n\n    Gauge.prototype.value = function value (pointerValue) {\n        var pointer = this.pointers[0];\n\n        if (arguments.length === 0) {\n            return pointer.value();\n        }\n\n        pointer.value(pointerValue);\n        this._setValueOptions(pointerValue);\n    };\n\n    Gauge.prototype._draw = function _draw () {\n        var surface = this.surface;\n\n        surface.clear();\n        surface.draw(this._visuals);\n    };\n\n    Gauge.prototype.exportVisual = function exportVisual () {\n        return this._visuals;\n    };\n\n    Gauge.prototype.allValues = function allValues (values) {\n        var pointers = this.pointers;\n        var allValues = [];\n\n        if (arguments.length === 0) {\n            for (var i = 0; i < pointers.length; i++) {\n                allValues.push(pointers[i].value());\n            }\n\n            return allValues;\n        }\n\n        if (isArray(values)) {\n            for (var i$1 = 0; i$1 < values.length; i$1++) {\n                if (isNumber(values[i$1])) {\n                    pointers[i$1].value(values[i$1]);\n                }\n            }\n        }\n\n        this._setValueOptions(values);\n    };\n\n    Gauge.prototype._setValueOptions = function _setValueOptions (values) {\n        var pointers = [].concat(this.options.pointer);\n        var arrayValues = [].concat(values);\n\n        for (var i = 0; i < arrayValues.length; i++) {\n            pointers[i].value = arrayValues[i];\n        }\n    };\n\n    Gauge.prototype.resize = function resize () {\n        this.noTransitionsRedraw();\n    };\n\n    Gauge.prototype.noTransitionsRedraw = function noTransitionsRedraw () {\n        var transitions = this.options.transitions;\n\n        this._toggleTransitions(false);\n\n        this.redraw();\n\n        this._toggleTransitions(transitions);\n    };\n\n    Gauge.prototype.redraw = function redraw () {\n        var size = this._surfaceSize();\n        var wrapper = new geo.Rect([ 0, 0 ], [ size.width, size.height ]);\n\n        this._initSurface();\n\n        this.gaugeArea = this._createGaugeArea();\n\n        this._createModel();\n\n        var bbox = unpad(wrapper.bbox(), this._gaugeAreaMargin);\n        this.reflow(bbox);\n    };\n\n    Gauge.prototype.setOptions = function setOptions (options, theme) {\n        this._originalOptions = deepExtend(this._originalOptions, options);\n        this.options = deepExtend({}, this._originalOptions);\n\n        this._initTheme(theme);\n\n        this.redraw();\n    };\n\n    Gauge.prototype.setDirection = function setDirection (rtl) {\n        this.contextService.rtl = Boolean(rtl);\n        if (this.surface && this.surface.type === 'svg') {\n            this.surface.destroy();\n            this.surface = null;\n        }\n    };\n\n    Gauge.prototype.setIntlService = function setIntlService (intl) {\n        this.contextService.intl = intl;\n    };\n\n    Gauge.prototype._initTheme = function _initTheme (theme) {\n        var currentTheme = theme || this.theme || {};\n        this.theme = currentTheme;\n\n        this.options = deepExtend({}, currentTheme, this.options);\n        var options = this.options;\n        var pointer = options.pointer;\n\n        if (isArray(pointer)) {\n            var pointers = [];\n            for (var i = 0; i < pointer.length; i++) {\n                pointers.push(deepExtend({}, currentTheme.pointer, pointer[i]));\n            }\n            options.pointer = pointers;\n        }\n    };\n\n    Gauge.prototype._createGaugeArea = function _createGaugeArea () {\n        var options = this.options.gaugeArea;\n        var size = this.surface.size();\n        var border = options.border || {};\n        var areaGeometry = new geo.Rect([ 0, 0 ], [ size.width, size.height ]);\n\n        this._gaugeAreaMargin = options.margin || DEFAULT_MARGIN;\n\n        if (border.width > 0) {\n            areaGeometry = unpad(areaGeometry, border.width);\n        }\n\n        var gaugeArea = Path.fromRect(areaGeometry, {\n            stroke: {\n                color: border.width ? border.color : \"\",\n                width: border.width,\n                dashType: border.dashType,\n                lineJoin: \"round\",\n                lineCap: \"round\"\n            },\n            fill: {\n                color: options.background\n            }\n        });\n\n        return gaugeArea;\n    };\n\n    Gauge.prototype._initSurface = function _initSurface () {\n        var ref = this;\n        var options = ref.options;\n        var surface = ref.surface;\n        var element = this._surfaceElement();\n        var size = this._surfaceSize();\n\n        elementSize(element, size);\n\n        if (!surface || surface.options.type !== options.renderAs) {\n            if (surface) {\n                surface.destroy();\n            }\n\n            this.surface = Surface.create(element, {\n                type: options.renderAs\n            });\n        } else {\n            this.surface.clear();\n            this.surface.resize();\n        }\n    };\n\n    Gauge.prototype._surfaceSize = function _surfaceSize () {\n        var options = this.options;\n        var size = this._getSize();\n\n        if (options.gaugeArea) {\n            deepExtend(size, options.gaugeArea);\n        }\n\n        return size;\n    };\n\n    Gauge.prototype._surfaceElement = function _surfaceElement () {\n        if (!this.surfaceElement) {\n            this.surfaceElement = document.createElement('div');\n            this.element.appendChild(this.surfaceElement);\n        }\n\n        return this.surfaceElement;\n    };\n\n    Gauge.prototype.getSize = function getSize () {\n        return this._getSize();\n    };\n\n    Gauge.prototype._getSize = function _getSize () {\n        var element = this.element;\n        var defaultSize = this._defaultSize();\n        var width = element.offsetWidth;\n        var height = element.offsetHeight;\n\n        if (!width) {\n            width = defaultSize.width;\n        }\n\n        if (!height) {\n            height = defaultSize.height;\n        }\n\n        return { width: width, height: height };\n    };\n\n    Gauge.prototype._defaultSize = function _defaultSize () {\n        return {\n            width: DEFAULT_WIDTH,\n            height: DEFAULT_HEIGHT\n        };\n    };\n\n    Gauge.prototype._toggleTransitions = function _toggleTransitions (value) {\n        var this$1 = this;\n\n        this.options.transitions = value;\n        for (var i = 0; i < this.pointers.length; i++) {\n            this$1.pointers[i].options.animation.transitions = value;\n        }\n    };\n\n    return Gauge;\n}(Class));\n\nsetDefaultOptions(Gauge, {\n    plotArea: {},\n    theme: \"default\",\n    renderAs: \"\",\n    pointer: {},\n    scale: {},\n    gaugeArea: {}\n});\n\nexport default Gauge;"]},"metadata":{},"sourceType":"module"}