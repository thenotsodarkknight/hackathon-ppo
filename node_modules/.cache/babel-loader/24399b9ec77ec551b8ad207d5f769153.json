{"ast":null,"code":"import { Chart } from '../chart';\nimport { BAR, BULLET, PIE, COLUMN, VERTICAL_BULLET } from '../chart/constants';\nimport { addClass, deepExtend, elementSize, getSpacing, inArray, isArray, isNumber, setDefaultOptions } from '../common';\nimport SharedTooltip from './shared-tooltip';\nvar DEAULT_BAR_WIDTH = 150;\nvar DEAULT_BULLET_WIDTH = 150;\nvar NO_CROSSHAIR = [BAR, BULLET];\n\nfunction hide(children) {\n  var state = [];\n\n  for (var idx = 0; idx < children.length; idx++) {\n    var child = children[idx];\n    state[idx] = child.style.display;\n    child.style.display = \"none\";\n  }\n\n  return state;\n}\n\nfunction show(children, state) {\n  for (var idx = 0; idx < children.length; idx++) {\n    children[idx].style.display = state[idx];\n  }\n}\n\nfunction wrapNumber(value) {\n  return isNumber(value) ? [value] : value;\n}\n\nvar Sparkline = function (Chart) {\n  function Sparkline() {\n    Chart.apply(this, arguments);\n  }\n\n  if (Chart) Sparkline.__proto__ = Chart;\n  Sparkline.prototype = Object.create(Chart && Chart.prototype);\n  Sparkline.prototype.constructor = Sparkline;\n\n  Sparkline.prototype._setElementClass = function _setElementClass(element) {\n    addClass(element, 'k-sparkline');\n  };\n\n  Sparkline.prototype._initElement = function _initElement(element) {\n    Chart.prototype._initElement.call(this, element);\n\n    this._initialWidth = Math.floor(elementSize(element).width);\n  };\n\n  Sparkline.prototype._resize = function _resize() {\n    var element = this.element;\n    var state = hide(element.childNodes);\n    this._initialWidth = Math.floor(elementSize(element).width);\n    show(element.childNodes, state);\n\n    Chart.prototype._resize.call(this);\n  };\n\n  Sparkline.prototype._modelOptions = function _modelOptions() {\n    var chartOptions = this.options;\n\n    var stage = this._surfaceWrap();\n\n    var displayState = hide(stage.childNodes);\n    var space = document.createElement('span');\n    space.innerHTML = '&nbsp;';\n    stage.appendChild(space);\n    var options = deepExtend({\n      width: this._autoWidth,\n      height: elementSize(stage).height,\n      transitions: chartOptions.transitions\n    }, chartOptions.chartArea, {\n      inline: true,\n      align: false\n    });\n    elementSize(stage, {\n      width: options.width,\n      height: options.height\n    });\n    stage.removeChild(space);\n    show(stage.childNodes, displayState);\n\n    if (this.surface) {\n      this.surface.resize();\n    }\n\n    return options;\n  };\n\n  Sparkline.prototype._surfaceWrap = function _surfaceWrap() {\n    if (!this.stage) {\n      var stage = this.stage = document.createElement('span');\n      this.element.appendChild(stage);\n    }\n\n    return this.stage;\n  };\n\n  Sparkline.prototype._createPlotArea = function _createPlotArea(skipSeries) {\n    var plotArea = Chart.prototype._createPlotArea.call(this, skipSeries);\n\n    this._autoWidth = this._initialWidth || this._calculateWidth(plotArea);\n    return plotArea;\n  };\n\n  Sparkline.prototype._calculateWidth = function _calculateWidth(plotArea) {\n    var options = this.options;\n    var margin = getSpacing(options.chartArea.margin);\n    var charts = plotArea.charts;\n\n    var stage = this._surfaceWrap();\n\n    var total = 0;\n\n    for (var i = 0; i < charts.length; i++) {\n      var currentChart = charts[i];\n      var firstSeries = (currentChart.options.series || [])[0];\n\n      if (!firstSeries) {\n        continue;\n      }\n\n      if (firstSeries.type === BAR) {\n        return DEAULT_BAR_WIDTH;\n      }\n\n      if (firstSeries.type === BULLET) {\n        return DEAULT_BULLET_WIDTH;\n      }\n\n      if (firstSeries.type === PIE) {\n        return elementSize(stage).height;\n      }\n\n      var categoryAxis = currentChart.categoryAxis;\n\n      if (categoryAxis) {\n        var pointsCount = categoryAxis.categoriesCount() * (!currentChart.options.isStacked && inArray(firstSeries.type, [COLUMN, VERTICAL_BULLET]) ? currentChart.seriesOptions.length : 1);\n        total = Math.max(total, pointsCount);\n      }\n    }\n\n    var size = total * options.pointWidth;\n\n    if (size > 0) {\n      size += margin.left + margin.right;\n    }\n\n    return size;\n  };\n\n  Sparkline.prototype._createSharedTooltip = function _createSharedTooltip(options) {\n    return new SharedTooltip(this._plotArea, options);\n  };\n\n  Sparkline.normalizeOptions = function normalizeOptions(userOptions) {\n    var options = wrapNumber(userOptions);\n\n    if (isArray(options)) {\n      options = {\n        seriesDefaults: {\n          data: options\n        }\n      };\n    } else {\n      options = deepExtend({}, options);\n    }\n\n    if (!options.series) {\n      options.series = [{\n        data: wrapNumber(options.data)\n      }];\n    }\n\n    deepExtend(options, {\n      seriesDefaults: {\n        type: options.type\n      }\n    });\n\n    if (inArray(options.series[0].type, NO_CROSSHAIR) || inArray(options.seriesDefaults.type, NO_CROSSHAIR)) {\n      options = deepExtend({}, {\n        categoryAxis: {\n          crosshair: {\n            visible: false\n          }\n        }\n      }, options);\n    }\n\n    return options;\n  };\n\n  return Sparkline;\n}(Chart);\n\nsetDefaultOptions(Sparkline, {\n  chartArea: {\n    margin: 2\n  },\n  axisDefaults: {\n    visible: false,\n    majorGridLines: {\n      visible: false\n    },\n    valueAxis: {\n      narrowRange: true\n    }\n  },\n  seriesDefaults: {\n    type: \"line\",\n    area: {\n      line: {\n        width: 0.5\n      }\n    },\n    bar: {\n      stack: true\n    },\n    padding: 2,\n    width: 0.5,\n    overlay: {\n      gradient: null\n    },\n    highlight: {\n      visible: false\n    },\n    border: {\n      width: 0\n    },\n    markers: {\n      size: 2,\n      visible: false\n    }\n  },\n  tooltip: {\n    visible: true,\n    shared: true\n  },\n  categoryAxis: {\n    crosshair: {\n      visible: true,\n      tooltip: {\n        visible: false\n      }\n    }\n  },\n  legend: {\n    visible: false\n  },\n  transitions: false,\n  pointWidth: 5,\n  panes: [{\n    clip: false\n  }]\n});\nexport default Sparkline;","map":{"version":3,"sources":["/Users/lazybaccha/Documents/Honeywell/SBE/node_modules/@progress/kendo-charts/dist/es/sparkline/sparkline.js"],"names":["Chart","BAR","BULLET","PIE","COLUMN","VERTICAL_BULLET","addClass","deepExtend","elementSize","getSpacing","inArray","isArray","isNumber","setDefaultOptions","SharedTooltip","DEAULT_BAR_WIDTH","DEAULT_BULLET_WIDTH","NO_CROSSHAIR","hide","children","state","idx","length","child","style","display","show","wrapNumber","value","Sparkline","apply","arguments","__proto__","prototype","Object","create","constructor","_setElementClass","element","_initElement","call","_initialWidth","Math","floor","width","_resize","childNodes","_modelOptions","chartOptions","options","stage","_surfaceWrap","displayState","space","document","createElement","innerHTML","appendChild","_autoWidth","height","transitions","chartArea","inline","align","removeChild","surface","resize","_createPlotArea","skipSeries","plotArea","_calculateWidth","margin","charts","total","i","currentChart","firstSeries","series","type","categoryAxis","pointsCount","categoriesCount","isStacked","seriesOptions","max","size","pointWidth","left","right","_createSharedTooltip","_plotArea","normalizeOptions","userOptions","seriesDefaults","data","crosshair","visible","axisDefaults","majorGridLines","valueAxis","narrowRange","area","line","bar","stack","padding","overlay","gradient","highlight","border","markers","tooltip","shared","legend","panes","clip"],"mappings":"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","sourcesContent":["import { Chart } from '../chart';\nimport { BAR, BULLET, PIE, COLUMN, VERTICAL_BULLET } from '../chart/constants';\nimport{ addClass, deepExtend, elementSize, getSpacing, inArray, isArray, isNumber, setDefaultOptions } from '../common';\nimport SharedTooltip from './shared-tooltip';\n\nvar DEAULT_BAR_WIDTH = 150;\nvar DEAULT_BULLET_WIDTH = 150;\nvar NO_CROSSHAIR = [ BAR, BULLET ];\n\nfunction hide(children) {\n    var state = [];\n    for (var idx = 0; idx < children.length; idx++) {\n        var child = children[idx];\n        state[idx] = child.style.display;\n        child.style.display = \"none\";\n    }\n\n    return state;\n}\n\nfunction show(children, state) {\n    for (var idx = 0; idx < children.length; idx++) {\n        children[idx].style.display = state[idx];\n    }\n}\n\nfunction wrapNumber(value) {\n    return isNumber(value) ? [ value ] : value;\n}\n\nvar Sparkline = (function (Chart) {\n    function Sparkline () {\n        Chart.apply(this, arguments);\n    }\n\n    if ( Chart ) Sparkline.__proto__ = Chart;\n    Sparkline.prototype = Object.create( Chart && Chart.prototype );\n    Sparkline.prototype.constructor = Sparkline;\n\n    Sparkline.prototype._setElementClass = function _setElementClass (element) {\n        addClass(element, 'k-sparkline');\n    };\n\n    Sparkline.prototype._initElement = function _initElement (element) {\n        Chart.prototype._initElement.call(this, element);\n\n        this._initialWidth = Math.floor(elementSize(element).width);\n    };\n\n    Sparkline.prototype._resize = function _resize () {\n        var element = this.element;\n        var state = hide(element.childNodes);\n\n        this._initialWidth = Math.floor(elementSize(element).width);\n\n        show(element.childNodes, state);\n\n        Chart.prototype._resize.call(this);\n    };\n\n    Sparkline.prototype._modelOptions = function _modelOptions () {\n        var chartOptions = this.options;\n        var stage = this._surfaceWrap();\n        var displayState = hide(stage.childNodes);\n\n        var space = document.createElement('span');\n        space.innerHTML = '&nbsp;';\n\n        stage.appendChild(space);\n\n        var options = deepExtend({\n            width: this._autoWidth,\n            height: elementSize(stage).height,\n            transitions: chartOptions.transitions\n        }, chartOptions.chartArea, {\n            inline: true,\n            align: false\n        });\n\n        elementSize(stage, {\n            width: options.width,\n            height: options.height\n        });\n\n        stage.removeChild(space);\n\n        show(stage.childNodes, displayState);\n\n        if (this.surface) {\n            this.surface.resize();\n        }\n\n        return options;\n    };\n\n    Sparkline.prototype._surfaceWrap = function _surfaceWrap () {\n        if (!this.stage) {\n            var stage = this.stage = document.createElement('span');\n            this.element.appendChild(stage);\n        }\n        return this.stage;\n    };\n\n    Sparkline.prototype._createPlotArea = function _createPlotArea (skipSeries) {\n        var plotArea = Chart.prototype._createPlotArea.call(this, skipSeries);\n        this._autoWidth = this._initialWidth || this._calculateWidth(plotArea);\n\n        return plotArea;\n    };\n\n    Sparkline.prototype._calculateWidth = function _calculateWidth (plotArea) {\n        var options = this.options;\n        var margin = getSpacing(options.chartArea.margin);\n        var charts = plotArea.charts;\n        var stage = this._surfaceWrap();\n        var total = 0;\n\n\n        for (var i = 0; i < charts.length; i++) {\n            var currentChart = charts[i];\n            var firstSeries = (currentChart.options.series || [])[0];\n            if (!firstSeries) {\n                continue;\n            }\n\n            if (firstSeries.type === BAR) {\n                return DEAULT_BAR_WIDTH;\n            }\n\n            if (firstSeries.type === BULLET) {\n                return DEAULT_BULLET_WIDTH;\n            }\n\n            if (firstSeries.type === PIE) {\n                return elementSize(stage).height;\n            }\n\n            var categoryAxis = currentChart.categoryAxis;\n            if (categoryAxis) {\n                var pointsCount = categoryAxis.categoriesCount() *\n                    (!currentChart.options.isStacked && inArray(firstSeries.type, [ COLUMN, VERTICAL_BULLET ]) ? currentChart.seriesOptions.length : 1);\n\n                total = Math.max(total, pointsCount);\n            }\n        }\n\n        var size = total * options.pointWidth;\n        if (size > 0) {\n            size += margin.left + margin.right;\n        }\n\n        return size;\n    };\n\n    Sparkline.prototype._createSharedTooltip = function _createSharedTooltip (options) {\n        return new SharedTooltip(this._plotArea, options);\n    };\n\n    Sparkline.normalizeOptions = function normalizeOptions (userOptions) {\n        var options = wrapNumber(userOptions);\n\n        if (isArray(options)) {\n            options = { seriesDefaults: { data: options } };\n        } else {\n            options = deepExtend({}, options);\n        }\n\n        if (!options.series) {\n            options.series = [ { data: wrapNumber(options.data) } ];\n        }\n\n        deepExtend(options, {\n            seriesDefaults: {\n                type: options.type\n            }\n        });\n\n        if (inArray(options.series[0].type, NO_CROSSHAIR) ||\n            inArray(options.seriesDefaults.type, NO_CROSSHAIR)) {\n            options = deepExtend({}, {\n                categoryAxis: {\n                    crosshair: {\n                        visible: false\n                    }\n                }\n            }, options);\n        }\n\n        return options;\n    };\n\n    return Sparkline;\n}(Chart));\n\nsetDefaultOptions(Sparkline, {\n    chartArea: {\n        margin: 2\n    },\n    axisDefaults: {\n        visible: false,\n        majorGridLines: {\n            visible: false\n        },\n        valueAxis: {\n            narrowRange: true\n        }\n    },\n    seriesDefaults: {\n        type: \"line\",\n        area: {\n            line: {\n                width: 0.5\n            }\n        },\n        bar: {\n            stack: true\n        },\n        padding: 2,\n        width: 0.5,\n        overlay: {\n            gradient: null\n        },\n        highlight: {\n            visible: false\n        },\n        border: {\n            width: 0\n        },\n        markers: {\n            size: 2,\n            visible: false\n        }\n    },\n    tooltip: {\n        visible: true,\n        shared: true\n    },\n    categoryAxis: {\n        crosshair: {\n            visible: true,\n            tooltip: {\n                visible: false\n            }\n        }\n    },\n    legend: {\n        visible: false\n    },\n    transitions: false,\n\n    pointWidth: 5,\n\n    panes: [ { clip: false } ]\n});\n\nexport default Sparkline;"]},"metadata":{},"sourceType":"module"}