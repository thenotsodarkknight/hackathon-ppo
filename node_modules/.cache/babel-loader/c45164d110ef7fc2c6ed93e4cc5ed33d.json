{"ast":null,"code":"import { geometry as geo, drawing } from '@progress/kendo-drawing';\nimport pad from './pad';\nvar Group = drawing.Group;\nvar Path = drawing.Path;\nvar Text = drawing.Text;\nexport default function buildLabelElement(label, options) {\n  var labelBox = label.box;\n  var textBox = label.children[0].box;\n  var border = options.border || {};\n  var background = options.background || \"\";\n  var wrapper = Path.fromRect(new geo.Rect([labelBox.x1, labelBox.y1], [labelBox.width(), labelBox.height()]), {\n    stroke: {}\n  });\n  var text = new Text(label.text, new geo.Point(textBox.x1, textBox.y1), {\n    font: options.font,\n    fill: {\n      color: options.color\n    }\n  });\n  var styleGeometry = pad(text.bbox().clone(), options.padding);\n  var styleBox = Path.fromRect(styleGeometry, {\n    stroke: {\n      color: border.width ? border.color : \"\",\n      width: border.width,\n      opacity: border.opacity,\n      dashType: border.dashType,\n      lineJoin: \"round\",\n      lineCap: \"round\"\n    },\n    fill: {\n      color: background\n    }\n  });\n  var elements = new Group();\n  elements.append(wrapper);\n  elements.append(styleBox);\n  elements.append(text);\n  return elements;\n}","map":{"version":3,"sources":["/Users/lazybaccha/Documents/Honeywell/SBE/node_modules/@progress/kendo-charts/dist/es/gauges/utils/build-label-element.js"],"names":["geometry","geo","drawing","pad","Group","Path","Text","buildLabelElement","label","options","labelBox","box","textBox","children","border","background","wrapper","fromRect","Rect","x1","y1","width","height","stroke","text","Point","font","fill","color","styleGeometry","bbox","clone","padding","styleBox","opacity","dashType","lineJoin","lineCap","elements","append"],"mappings":"AAAA,SAASA,QAAQ,IAAIC,GAArB,EAA0BC,OAA1B,QAAyC,yBAAzC;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAEA,IAAIC,KAAK,GAAGF,OAAO,CAACE,KAApB;AACA,IAAIC,IAAI,GAAGH,OAAO,CAACG,IAAnB;AACA,IAAIC,IAAI,GAAGJ,OAAO,CAACI,IAAnB;AAEA,eAAe,SAASC,iBAAT,CAA2BC,KAA3B,EAAkCC,OAAlC,EAA2C;AACtD,MAAIC,QAAQ,GAAGF,KAAK,CAACG,GAArB;AACA,MAAIC,OAAO,GAAGJ,KAAK,CAACK,QAAN,CAAe,CAAf,EAAkBF,GAAhC;AACA,MAAIG,MAAM,GAAGL,OAAO,CAACK,MAAR,IAAkB,EAA/B;AACA,MAAIC,UAAU,GAAGN,OAAO,CAACM,UAAR,IAAsB,EAAvC;AAEA,MAAIC,OAAO,GAAGX,IAAI,CAACY,QAAL,CAAc,IAAIhB,GAAG,CAACiB,IAAR,CAAa,CAAER,QAAQ,CAACS,EAAX,EAAeT,QAAQ,CAACU,EAAxB,CAAb,EAA2C,CAAEV,QAAQ,CAACW,KAAT,EAAF,EAAoBX,QAAQ,CAACY,MAAT,EAApB,CAA3C,CAAd,EAAmG;AAC7GC,IAAAA,MAAM,EAAE;AADqG,GAAnG,CAAd;AAIA,MAAIC,IAAI,GAAG,IAAIlB,IAAJ,CAASE,KAAK,CAACgB,IAAf,EAAqB,IAAIvB,GAAG,CAACwB,KAAR,CAAcb,OAAO,CAACO,EAAtB,EAA0BP,OAAO,CAACQ,EAAlC,CAArB,EAA4D;AACnEM,IAAAA,IAAI,EAAEjB,OAAO,CAACiB,IADqD;AAEnEC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,KAAK,EAAEnB,OAAO,CAACmB;AAAjB;AAF6D,GAA5D,CAAX;AAKA,MAAIC,aAAa,GAAG1B,GAAG,CAACqB,IAAI,CAACM,IAAL,GAAYC,KAAZ,EAAD,EAAsBtB,OAAO,CAACuB,OAA9B,CAAvB;AAEA,MAAIC,QAAQ,GAAG5B,IAAI,CAACY,QAAL,CAAcY,aAAd,EAA6B;AACxCN,IAAAA,MAAM,EAAE;AACJK,MAAAA,KAAK,EAAEd,MAAM,CAACO,KAAP,GAAeP,MAAM,CAACc,KAAtB,GAA8B,EADjC;AAEJP,MAAAA,KAAK,EAAEP,MAAM,CAACO,KAFV;AAGJa,MAAAA,OAAO,EAAEpB,MAAM,CAACoB,OAHZ;AAIJC,MAAAA,QAAQ,EAAErB,MAAM,CAACqB,QAJb;AAKJC,MAAAA,QAAQ,EAAE,OALN;AAMJC,MAAAA,OAAO,EAAE;AANL,KADgC;AASxCV,IAAAA,IAAI,EAAE;AACFC,MAAAA,KAAK,EAAEb;AADL;AATkC,GAA7B,CAAf;AAcA,MAAIuB,QAAQ,GAAG,IAAIlC,KAAJ,EAAf;AACAkC,EAAAA,QAAQ,CAACC,MAAT,CAAgBvB,OAAhB;AACAsB,EAAAA,QAAQ,CAACC,MAAT,CAAgBN,QAAhB;AACAK,EAAAA,QAAQ,CAACC,MAAT,CAAgBf,IAAhB;AAEA,SAAOc,QAAP;AACH","sourcesContent":["import { geometry as geo, drawing } from '@progress/kendo-drawing';\nimport pad from './pad';\n\nvar Group = drawing.Group;\nvar Path = drawing.Path;\nvar Text = drawing.Text;\n\nexport default function buildLabelElement(label, options) {\n    var labelBox = label.box;\n    var textBox = label.children[0].box;\n    var border = options.border || {};\n    var background = options.background || \"\";\n\n    var wrapper = Path.fromRect(new geo.Rect([ labelBox.x1, labelBox.y1 ], [ labelBox.width(), labelBox.height() ]), {\n        stroke: {}\n    });\n\n    var text = new Text(label.text, new geo.Point(textBox.x1, textBox.y1), {\n        font: options.font,\n        fill: { color: options.color }\n    });\n\n    var styleGeometry = pad(text.bbox().clone(), options.padding);\n\n    var styleBox = Path.fromRect(styleGeometry, {\n        stroke: {\n            color: border.width ? border.color : \"\",\n            width: border.width,\n            opacity: border.opacity,\n            dashType: border.dashType,\n            lineJoin: \"round\",\n            lineCap: \"round\"\n        },\n        fill: {\n            color: background\n        }\n    });\n\n    var elements = new Group();\n    elements.append(wrapper);\n    elements.append(styleBox);\n    elements.append(text);\n\n    return elements;\n}"]},"metadata":{},"sourceType":"module"}