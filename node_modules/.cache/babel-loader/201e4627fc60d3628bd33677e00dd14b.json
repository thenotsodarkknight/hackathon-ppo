{"ast":null,"code":"import { ChartElement } from '../../core';\nimport { setDefaultOptions } from '../../common';\nimport { forEach, forEachReverse } from './utils';\n\nvar RadarClusterLayout = function (ChartElement) {\n  function RadarClusterLayout(options) {\n    ChartElement.call(this, options);\n    this.forEach = options.rtl ? forEachReverse : forEach;\n  }\n\n  if (ChartElement) RadarClusterLayout.__proto__ = ChartElement;\n  RadarClusterLayout.prototype = Object.create(ChartElement && ChartElement.prototype);\n  RadarClusterLayout.prototype.constructor = RadarClusterLayout;\n\n  RadarClusterLayout.prototype.reflow = function reflow(sector) {\n    var ref = this;\n    var options = ref.options;\n    var children = ref.children;\n    var gap = options.gap;\n    var spacing = options.spacing;\n    var count = children.length;\n    var slots = count + gap + spacing * (count - 1);\n    var slotAngle = sector.angle / slots;\n    var angle = sector.startAngle + slotAngle * (gap / 2);\n    this.forEach(children, function (child) {\n      var slotSector = sector.clone();\n      slotSector.startAngle = angle;\n      slotSector.angle = slotAngle;\n\n      if (child.sector) {\n        slotSector.radius = child.sector.radius;\n      }\n\n      child.reflow(slotSector);\n      child.sector = slotSector;\n      angle += slotAngle + slotAngle * spacing;\n    });\n  };\n\n  return RadarClusterLayout;\n}(ChartElement);\n\nsetDefaultOptions(RadarClusterLayout, {\n  gap: 1,\n  spacing: 0\n});\nexport default RadarClusterLayout;","map":{"version":3,"sources":["/Users/lazybaccha/Documents/Honeywell/SBE/node_modules/@progress/kendo-charts/dist/es/chart/layout/radar-cluster-layout.js"],"names":["ChartElement","setDefaultOptions","forEach","forEachReverse","RadarClusterLayout","options","call","rtl","__proto__","prototype","Object","create","constructor","reflow","sector","ref","children","gap","spacing","count","length","slots","slotAngle","angle","startAngle","child","slotSector","clone","radius"],"mappings":"AAAA,SAASA,YAAT,QAA6B,YAA7B;AAEA,SAASC,iBAAT,QAAkC,cAAlC;AAEA,SAASC,OAAT,EAAkBC,cAAlB,QAAwC,SAAxC;;AAEA,IAAIC,kBAAkB,GAAI,UAAUJ,YAAV,EAAwB;AAC9C,WAASI,kBAAT,CAA4BC,OAA5B,EAAqC;AACjCL,IAAAA,YAAY,CAACM,IAAb,CAAkB,IAAlB,EAAwBD,OAAxB;AAEA,SAAKH,OAAL,GAAeG,OAAO,CAACE,GAAR,GAAcJ,cAAd,GAA+BD,OAA9C;AACH;;AAED,MAAKF,YAAL,EAAoBI,kBAAkB,CAACI,SAAnB,GAA+BR,YAA/B;AACpBI,EAAAA,kBAAkB,CAACK,SAAnB,GAA+BC,MAAM,CAACC,MAAP,CAAeX,YAAY,IAAIA,YAAY,CAACS,SAA5C,CAA/B;AACAL,EAAAA,kBAAkB,CAACK,SAAnB,CAA6BG,WAA7B,GAA2CR,kBAA3C;;AAEAA,EAAAA,kBAAkB,CAACK,SAAnB,CAA6BI,MAA7B,GAAsC,SAASA,MAAT,CAAiBC,MAAjB,EAAyB;AAC3D,QAAIC,GAAG,GAAG,IAAV;AACA,QAAIV,OAAO,GAAGU,GAAG,CAACV,OAAlB;AACA,QAAIW,QAAQ,GAAGD,GAAG,CAACC,QAAnB;AACA,QAAIC,GAAG,GAAGZ,OAAO,CAACY,GAAlB;AACA,QAAIC,OAAO,GAAGb,OAAO,CAACa,OAAtB;AACA,QAAIC,KAAK,GAAGH,QAAQ,CAACI,MAArB;AACA,QAAIC,KAAK,GAAGF,KAAK,GAAGF,GAAR,GAAeC,OAAO,IAAIC,KAAK,GAAG,CAAZ,CAAlC;AACA,QAAIG,SAAS,GAAGR,MAAM,CAACS,KAAP,GAAeF,KAA/B;AACA,QAAIE,KAAK,GAAGT,MAAM,CAACU,UAAP,GAAoBF,SAAS,IAAIL,GAAG,GAAG,CAAV,CAAzC;AAEA,SAAKf,OAAL,CAAac,QAAb,EAAuB,UAAUS,KAAV,EAAiB;AACpC,UAAIC,UAAU,GAAGZ,MAAM,CAACa,KAAP,EAAjB;AACAD,MAAAA,UAAU,CAACF,UAAX,GAAwBD,KAAxB;AACAG,MAAAA,UAAU,CAACH,KAAX,GAAmBD,SAAnB;;AAEA,UAAIG,KAAK,CAACX,MAAV,EAAkB;AACdY,QAAAA,UAAU,CAACE,MAAX,GAAoBH,KAAK,CAACX,MAAN,CAAac,MAAjC;AACH;;AAEDH,MAAAA,KAAK,CAACZ,MAAN,CAAaa,UAAb;AACAD,MAAAA,KAAK,CAACX,MAAN,GAAeY,UAAf;AAEAH,MAAAA,KAAK,IAAID,SAAS,GAAIA,SAAS,GAAGJ,OAAlC;AACH,KAbD;AAcH,GAzBD;;AA2BA,SAAOd,kBAAP;AACH,CAvCyB,CAuCxBJ,YAvCwB,CAA1B;;AAyCAC,iBAAiB,CAACG,kBAAD,EAAqB;AAClCa,EAAAA,GAAG,EAAE,CAD6B;AAElCC,EAAAA,OAAO,EAAE;AAFyB,CAArB,CAAjB;AAKA,eAAed,kBAAf","sourcesContent":["import { ChartElement } from '../../core';\n\nimport { setDefaultOptions } from '../../common';\n\nimport { forEach, forEachReverse } from './utils';\n\nvar RadarClusterLayout = (function (ChartElement) {\n    function RadarClusterLayout(options) {\n        ChartElement.call(this, options);\n\n        this.forEach = options.rtl ? forEachReverse : forEach;\n    }\n\n    if ( ChartElement ) RadarClusterLayout.__proto__ = ChartElement;\n    RadarClusterLayout.prototype = Object.create( ChartElement && ChartElement.prototype );\n    RadarClusterLayout.prototype.constructor = RadarClusterLayout;\n\n    RadarClusterLayout.prototype.reflow = function reflow (sector) {\n        var ref = this;\n        var options = ref.options;\n        var children = ref.children;\n        var gap = options.gap;\n        var spacing = options.spacing;\n        var count = children.length;\n        var slots = count + gap + (spacing * (count - 1));\n        var slotAngle = sector.angle / slots;\n        var angle = sector.startAngle + slotAngle * (gap / 2);\n\n        this.forEach(children, function (child) {\n            var slotSector = sector.clone();\n            slotSector.startAngle = angle;\n            slotSector.angle = slotAngle;\n\n            if (child.sector) {\n                slotSector.radius = child.sector.radius;\n            }\n\n            child.reflow(slotSector);\n            child.sector = slotSector;\n\n            angle += slotAngle + (slotAngle * spacing);\n        });\n    };\n\n    return RadarClusterLayout;\n}(ChartElement));\n\nsetDefaultOptions(RadarClusterLayout, {\n    gap: 1,\n    spacing: 0\n});\n\nexport default RadarClusterLayout;"]},"metadata":{},"sourceType":"module"}