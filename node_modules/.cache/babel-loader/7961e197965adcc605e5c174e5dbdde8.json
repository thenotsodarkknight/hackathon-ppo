{"ast":null,"code":"import { geometry as geo, drawing } from '@progress/kendo-drawing';\nimport { deepExtend, defined } from '../../common';\nimport { ARROW_POINTER } from '../constants';\nimport LinearPointer from './linear-pointer';\nimport ArrowLinearPointerAnimation from './arrow-linear-pointer-animation';\nvar Point = geo.Point;\nvar Path = drawing.Path;\n\nvar ArrowLinearPointer = function (LinearPointer) {\n  function ArrowLinearPointer(scale, options) {\n    LinearPointer.call(this, scale, options);\n\n    if (!defined(this.options.size)) {\n      this.options.size = this.scale.options.majorTicks.size * 0.6;\n    }\n  }\n\n  if (LinearPointer) ArrowLinearPointer.__proto__ = LinearPointer;\n  ArrowLinearPointer.prototype = Object.create(LinearPointer && LinearPointer.prototype);\n  ArrowLinearPointer.prototype.constructor = ArrowLinearPointer;\n\n  ArrowLinearPointer.prototype.pointerShape = function pointerShape() {\n    var ref = this;\n    var scale = ref.scale;\n    var size = ref.options.size;\n    var halfSize = size / 2;\n    var sign = scale.options.mirror ? -1 : 1;\n    var shape;\n\n    if (scale.options.vertical) {\n      shape = [new Point(0, 0 - halfSize), new Point(0 - sign * size, 0), new Point(0, 0 + halfSize)];\n    } else {\n      shape = [new Point(0 - halfSize, 0), new Point(0, 0 + sign * size), new Point(0 + halfSize, 0)];\n    }\n\n    return shape;\n  };\n\n  ArrowLinearPointer.prototype.repaint = function repaint() {\n    var ref = this;\n    var scale = ref.scale;\n    var options = ref.options;\n    var animation = new ArrowLinearPointerAnimation(this.elements, deepExtend(options.animation, {\n      vertical: scale.options.vertical,\n      mirror: scale.options.mirror,\n      margin: this._margin(options.margin),\n      from: scale.getSlot(options._oldValue),\n      to: scale.getSlot(options.value)\n    }));\n\n    if (options.animation.transitions === false) {\n      animation.options.duration = 0;\n    }\n\n    animation.setup();\n    animation.play();\n  };\n\n  ArrowLinearPointer.prototype.render = function render() {\n    var ref = this;\n    var scale = ref.scale;\n    var options = ref.options;\n    var elementOptions = this.getElementOptions();\n    var shape = this.pointerShape(options.value);\n    options.animation.type = ARROW_POINTER;\n    var elements = new Path({\n      stroke: elementOptions.stroke,\n      fill: elementOptions.fill\n    }).moveTo(shape[0]).lineTo(shape[1]).lineTo(shape[2]).close();\n    var slot = scale.getSlot(options.value);\n    elements.transform(geo.transform().translate(slot.x1, slot.y1));\n    this.elements = elements;\n    return elements;\n  };\n\n  return ArrowLinearPointer;\n}(LinearPointer);\n\nexport default ArrowLinearPointer;","map":{"version":3,"sources":["/Users/lazybaccha/Documents/Honeywell/SBE/node_modules/@progress/kendo-charts/dist/es/gauges/linear/arrow-linear-pointer.js"],"names":["geometry","geo","drawing","deepExtend","defined","ARROW_POINTER","LinearPointer","ArrowLinearPointerAnimation","Point","Path","ArrowLinearPointer","scale","options","call","size","majorTicks","__proto__","prototype","Object","create","constructor","pointerShape","ref","halfSize","sign","mirror","shape","vertical","repaint","animation","elements","margin","_margin","from","getSlot","_oldValue","to","value","transitions","duration","setup","play","render","elementOptions","getElementOptions","type","stroke","fill","moveTo","lineTo","close","slot","transform","translate","x1","y1"],"mappings":"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","sourcesContent":["import { geometry as geo, drawing } from '@progress/kendo-drawing';\nimport { deepExtend, defined } from '../../common';\nimport { ARROW_POINTER } from '../constants';\nimport LinearPointer from './linear-pointer';\nimport ArrowLinearPointerAnimation from './arrow-linear-pointer-animation';\n\nvar Point = geo.Point;\nvar Path = drawing.Path;\n\nvar ArrowLinearPointer = (function (LinearPointer) {\n    function ArrowLinearPointer(scale, options) {\n        LinearPointer.call(this, scale, options);\n\n        if (!defined(this.options.size)) {\n            this.options.size = this.scale.options.majorTicks.size * 0.6;\n        }\n    }\n\n    if ( LinearPointer ) ArrowLinearPointer.__proto__ = LinearPointer;\n    ArrowLinearPointer.prototype = Object.create( LinearPointer && LinearPointer.prototype );\n    ArrowLinearPointer.prototype.constructor = ArrowLinearPointer;\n\n    ArrowLinearPointer.prototype.pointerShape = function pointerShape () {\n        var ref = this;\n        var scale = ref.scale;\n        var size = ref.options.size;\n        var halfSize = size / 2;\n        var sign = (scale.options.mirror ? -1 : 1);\n        var shape;\n\n        if (scale.options.vertical) {\n            shape = [\n                new Point(0, 0 - halfSize), new Point(0 - sign * size, 0), new Point(0, 0 + halfSize)\n            ];\n        } else {\n            shape = [\n                new Point(0 - halfSize, 0), new Point(0, 0 + sign * size), new Point(0 + halfSize, 0)\n            ];\n        }\n\n        return shape;\n    };\n\n    ArrowLinearPointer.prototype.repaint = function repaint () {\n        var ref = this;\n        var scale = ref.scale;\n        var options = ref.options;\n        var animation = new ArrowLinearPointerAnimation(this.elements, deepExtend(options.animation, {\n            vertical: scale.options.vertical,\n            mirror: scale.options.mirror,\n            margin: this._margin(options.margin),\n            from: scale.getSlot(options._oldValue),\n            to: scale.getSlot(options.value)\n        }));\n\n        if (options.animation.transitions === false) {\n            animation.options.duration = 0;\n        }\n\n        animation.setup();\n        animation.play();\n    };\n\n    ArrowLinearPointer.prototype.render = function render () {\n        var ref = this;\n        var scale = ref.scale;\n        var options = ref.options;\n        var elementOptions = this.getElementOptions();\n        var shape = this.pointerShape(options.value);\n\n        options.animation.type = ARROW_POINTER;\n\n        var elements = new Path({\n            stroke: elementOptions.stroke,\n            fill: elementOptions.fill\n        }).moveTo(shape[0]).lineTo(shape[1]).lineTo(shape[2]).close();\n\n        var slot = scale.getSlot(options.value);\n        elements.transform(geo.transform().translate(slot.x1, slot.y1));\n\n        this.elements = elements;\n\n        return elements;\n    };\n\n    return ArrowLinearPointer;\n}(LinearPointer));\n\nexport default ArrowLinearPointer;"]},"metadata":{},"sourceType":"module"}