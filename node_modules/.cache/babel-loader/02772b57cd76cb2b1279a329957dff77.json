{"ast":null,"code":"import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { DrawerContext } from './context/DrawerContext';\nimport { DrawerNavigation } from './DrawerNavigation';\nimport { classNames, useRtl } from '@progress/kendo-react-common';\n/**\n * Represents the [KendoReact Drawer component]({% slug overview_drawer %}).\n *\n * @example\n * ```jsx\n * const App = () => {\n *   const items = [\n *       { text: 'Inbox', icon: 'k-i-inbox', selected: true },\n *       { separator: true },\n *       { text: 'Notifications', icon: 'k-i-bell', disabled: true },\n *       { text: 'Calendar', icon: 'k-i-calendar' },\n *       { separator: true },\n *       { text: 'Attachments', icon: 'k-i-hyperlink-email' },\n *       { text: 'Favourites', icon: 'k-i-star-outline' }\n *   ];\n *\n *   const [expanded, setExpanded] = React.useState(true);\n *   const handleClick = () => setExpanded(prevState => !prevState);\n *\n *   return (\n *       <Drawer expanded={expanded} position='start' mode='push' items={items}>\n *           <DrawerContent>\n *               <button className=\"k-button\" onClick={handleClick}>Toggle the drawer state</button>\n *           </DrawerContent>\n *       </Drawer>\n *   );\n * };\n *    ReactDOM.render(<App />, document.querySelector('my-app'));\n * ```\n */\n\nexport var Drawer = React.forwardRef(function (props, target) {\n  var expanded = props.expanded,\n      mode = props.mode,\n      position = props.position,\n      className = props.className,\n      children = props.children,\n      style = props.style,\n      animation = props.animation,\n      mini = props.mini,\n      width = props.width,\n      miniWidth = props.miniWidth,\n      items = props.items,\n      item = props.item,\n      tabIndex = props.tabIndex,\n      onOverlayClick = props.onOverlayClick,\n      onSelect = props.onSelect;\n  var elementRef = React.useRef(null);\n  var focusElement = React.useCallback(function () {\n    if (elementRef.current) {\n      elementRef.current.focus();\n    }\n  }, []);\n  React.useImperativeHandle(target, function () {\n    return {\n      element: elementRef,\n      focus: focusElement\n    };\n  });\n  var handleSelect = React.useCallback(function (itemTarget, itemIndex) {\n    if (items && onSelect) {\n      onSelect.call(undefined, {\n        itemTarget: itemTarget,\n        itemIndex: itemIndex\n      });\n    }\n  }, [items, onSelect]);\n  var dir = useRtl(elementRef, props.dir);\n  var drawerClassNames = classNames({\n    'k-drawer-container': true,\n    'k-drawer-expanded': expanded,\n    'k-drawer-overlay': mode === 'overlay',\n    'k-drawer-push': mode === 'push',\n    'k-drawer-mini': mini\n  }, className);\n  return React.createElement(DrawerContext.Provider, {\n    value: {\n      animation: animation,\n      expanded: expanded,\n      mode: mode,\n      position: position,\n      mini: mini,\n      dir: dir,\n      items: items,\n      item: item,\n      width: width,\n      miniWidth: miniWidth,\n      onOverlayClick: onOverlayClick,\n      onSelect: handleSelect\n    }\n  }, React.createElement(\"div\", {\n    className: drawerClassNames,\n    ref: elementRef,\n    dir: dir,\n    style: style,\n    tabIndex: tabIndex\n  }, items && React.createElement(DrawerNavigation, null), children));\n});\nDrawer.propTypes = {\n  animation: PropTypes.any,\n  expanded: PropTypes.bool,\n  children: PropTypes.any,\n  className: PropTypes.string,\n  dir: PropTypes.string,\n  mode: PropTypes.string,\n  position: PropTypes.string,\n  mini: PropTypes.bool,\n  style: PropTypes.object,\n  tabIndex: PropTypes.number,\n  width: PropTypes.number,\n  miniWidth: PropTypes.number,\n  selected: PropTypes.number,\n  onSelect: PropTypes.func,\n  onOverlayClick: PropTypes.func\n};\nvar defaultProps = {\n  animation: true,\n  expanded: false,\n  mode: 'overlay',\n  position: 'start',\n  mini: false,\n  dir: 'ltr',\n  width: 240,\n  miniWidth: 50\n};\nDrawer.defaultProps = defaultProps;\nDrawer.displayName = 'KendoDrawer';","map":{"version":3,"sources":["../../../src/drawer/Drawer.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { DrawerContext } from './context/DrawerContext';\nimport { DrawerNavigation } from './DrawerNavigation';\nimport { classNames, useRtl } from '@progress/kendo-react-common';\n/**\n * Represents the [KendoReact Drawer component]({% slug overview_drawer %}).\n *\n * @example\n * ```jsx\n * const App = () => {\n *   const items = [\n *       { text: 'Inbox', icon: 'k-i-inbox', selected: true },\n *       { separator: true },\n *       { text: 'Notifications', icon: 'k-i-bell', disabled: true },\n *       { text: 'Calendar', icon: 'k-i-calendar' },\n *       { separator: true },\n *       { text: 'Attachments', icon: 'k-i-hyperlink-email' },\n *       { text: 'Favourites', icon: 'k-i-star-outline' }\n *   ];\n *\n *   const [expanded, setExpanded] = React.useState(true);\n *   const handleClick = () => setExpanded(prevState => !prevState);\n *\n *   return (\n *       <Drawer expanded={expanded} position='start' mode='push' items={items}>\n *           <DrawerContent>\n *               <button className=\"k-button\" onClick={handleClick}>Toggle the drawer state</button>\n *           </DrawerContent>\n *       </Drawer>\n *   );\n * };\n *    ReactDOM.render(<App />, document.querySelector('my-app'));\n * ```\n */\nexport var Drawer = React.forwardRef(function (props, target) {\n    var expanded = props.expanded, mode = props.mode, position = props.position, className = props.className, children = props.children, style = props.style, animation = props.animation, mini = props.mini, width = props.width, miniWidth = props.miniWidth, items = props.items, item = props.item, tabIndex = props.tabIndex, onOverlayClick = props.onOverlayClick, onSelect = props.onSelect;\n    var elementRef = React.useRef(null);\n    var focusElement = React.useCallback(function () {\n        if (elementRef.current) {\n            elementRef.current.focus();\n        }\n    }, []);\n    React.useImperativeHandle(target, function () { return ({\n        element: elementRef,\n        focus: focusElement\n    }); });\n    var handleSelect = React.useCallback(function (itemTarget, itemIndex) {\n        if (items && onSelect) {\n            onSelect.call(undefined, {\n                itemTarget: itemTarget,\n                itemIndex: itemIndex\n            });\n        }\n    }, [items, onSelect]);\n    var dir = useRtl(elementRef, props.dir);\n    var drawerClassNames = classNames({\n        'k-drawer-container': true,\n        'k-drawer-expanded': expanded,\n        'k-drawer-overlay': mode === 'overlay',\n        'k-drawer-push': mode === 'push',\n        'k-drawer-mini': mini\n    }, className);\n    return (React.createElement(DrawerContext.Provider, { value: {\n            animation: animation,\n            expanded: expanded,\n            mode: mode,\n            position: position,\n            mini: mini,\n            dir: dir,\n            items: items,\n            item: item,\n            width: width,\n            miniWidth: miniWidth,\n            onOverlayClick: onOverlayClick,\n            onSelect: handleSelect\n        } },\n        React.createElement(\"div\", { className: drawerClassNames, ref: elementRef, dir: dir, style: style, tabIndex: tabIndex },\n            items && React.createElement(DrawerNavigation, null),\n            children)));\n});\nDrawer.propTypes = {\n    animation: PropTypes.any,\n    expanded: PropTypes.bool,\n    children: PropTypes.any,\n    className: PropTypes.string,\n    dir: PropTypes.string,\n    mode: PropTypes.string,\n    position: PropTypes.string,\n    mini: PropTypes.bool,\n    style: PropTypes.object,\n    tabIndex: PropTypes.number,\n    width: PropTypes.number,\n    miniWidth: PropTypes.number,\n    selected: PropTypes.number,\n    onSelect: PropTypes.func,\n    onOverlayClick: PropTypes.func\n};\nvar defaultProps = {\n    animation: true,\n    expanded: false,\n    mode: 'overlay',\n    position: 'start',\n    mini: false,\n    dir: 'ltr',\n    width: 240,\n    miniWidth: 50\n};\nDrawer.defaultProps = defaultProps;\nDrawer.displayName = 'KendoDrawer';\n//# sourceMappingURL=Drawer.js.map"]},"metadata":{},"sourceType":"module"}