{"ast":null,"code":"import { ChartElement, TextBox, Box } from '../../core';\nimport { FADEIN, INITIAL_ANIMATION_DURATION, INSIDE_END, INSIDE_BASE, OUTSIDE_END } from '../constants';\nimport { CENTER, TOP, BOTTOM, LEFT, RIGHT, X, Y, BLACK } from '../../common/constants';\nimport { getSpacing, setDefaultOptions } from '../../common';\n\nvar BarLabel = function (ChartElement) {\n  function BarLabel(content, options, pointData) {\n    ChartElement.call(this, options);\n    this.textBox = new TextBox(content, this.options, pointData);\n    this.append(this.textBox);\n  }\n\n  if (ChartElement) BarLabel.__proto__ = ChartElement;\n  BarLabel.prototype = Object.create(ChartElement && ChartElement.prototype);\n  BarLabel.prototype.constructor = BarLabel;\n\n  BarLabel.prototype.createVisual = function createVisual() {\n    this.textBox.options.noclip = this.options.noclip;\n  };\n\n  BarLabel.prototype.reflow = function reflow(targetBox) {\n    var options = this.options;\n    var vertical = options.vertical;\n    var aboveAxis = options.aboveAxis;\n    var text = this.children[0];\n    var textOptions = text.options;\n    var box = text.box;\n    var padding = text.options.padding;\n    var labelBox = targetBox;\n    textOptions.align = vertical ? CENTER : LEFT;\n    textOptions.vAlign = vertical ? TOP : CENTER;\n\n    if (options.position === INSIDE_END) {\n      if (vertical) {\n        textOptions.vAlign = TOP;\n\n        if (!aboveAxis && box.height() < targetBox.height()) {\n          textOptions.vAlign = BOTTOM;\n        }\n      } else {\n        textOptions.align = aboveAxis ? RIGHT : LEFT;\n      }\n    } else if (options.position === CENTER) {\n      textOptions.vAlign = CENTER;\n      textOptions.align = CENTER;\n    } else if (options.position === INSIDE_BASE) {\n      if (vertical) {\n        textOptions.vAlign = aboveAxis ? BOTTOM : TOP;\n      } else {\n        textOptions.align = aboveAxis ? LEFT : RIGHT;\n      }\n    } else if (options.position === OUTSIDE_END) {\n      if (vertical) {\n        if (aboveAxis) {\n          labelBox = new Box(targetBox.x1, targetBox.y1 - box.height(), targetBox.x2, targetBox.y1);\n        } else {\n          labelBox = new Box(targetBox.x1, targetBox.y2, targetBox.x2, targetBox.y2 + box.height());\n        }\n      } else {\n        textOptions.align = CENTER;\n\n        if (aboveAxis) {\n          labelBox = new Box(targetBox.x2, targetBox.y1, targetBox.x2 + box.width(), targetBox.y2);\n        } else {\n          labelBox = new Box(targetBox.x1 - box.width(), targetBox.y1, targetBox.x1, targetBox.y2);\n        }\n      }\n    }\n\n    if (!options.rotation) {\n      if (vertical) {\n        padding.left = padding.right = (labelBox.width() - text.contentBox.width()) / 2;\n      } else {\n        padding.top = padding.bottom = (labelBox.height() - text.contentBox.height()) / 2;\n      }\n    }\n\n    text.reflow(labelBox);\n  };\n\n  BarLabel.prototype.alignToClipBox = function alignToClipBox(clipBox) {\n    var vertical = this.options.vertical;\n    var field = vertical ? Y : X;\n    var start = field + \"1\";\n    var end = field + \"2\";\n    var text = this.children[0];\n    var parentBox = this.parent.box;\n\n    if (parentBox[start] < clipBox[start] || clipBox[end] < parentBox[end]) {\n      var targetBox = text.paddingBox.clone();\n      targetBox[start] = Math.max(parentBox[start], clipBox[start]);\n      targetBox[end] = Math.min(parentBox[end], clipBox[end]);\n      this.reflow(targetBox);\n    }\n  };\n\n  return BarLabel;\n}(ChartElement);\n\nsetDefaultOptions(BarLabel, {\n  position: OUTSIDE_END,\n  margin: getSpacing(3),\n  padding: getSpacing(4),\n  color: BLACK,\n  background: \"\",\n  border: {\n    width: 1,\n    color: \"\"\n  },\n  aboveAxis: true,\n  vertical: false,\n  animation: {\n    type: FADEIN,\n    delay: INITIAL_ANIMATION_DURATION\n  },\n  zIndex: 2\n});\nexport default BarLabel;","map":{"version":3,"sources":["/Users/lazybaccha/Documents/Honeywell/SBE/node_modules/@progress/kendo-charts/dist/es/chart/bar-chart/bar-label.js"],"names":["ChartElement","TextBox","Box","FADEIN","INITIAL_ANIMATION_DURATION","INSIDE_END","INSIDE_BASE","OUTSIDE_END","CENTER","TOP","BOTTOM","LEFT","RIGHT","X","Y","BLACK","getSpacing","setDefaultOptions","BarLabel","content","options","pointData","call","textBox","append","__proto__","prototype","Object","create","constructor","createVisual","noclip","reflow","targetBox","vertical","aboveAxis","text","children","textOptions","box","padding","labelBox","align","vAlign","position","height","x1","y1","x2","y2","width","rotation","left","right","contentBox","top","bottom","alignToClipBox","clipBox","field","start","end","parentBox","parent","paddingBox","clone","Math","max","min","margin","color","background","border","animation","type","delay","zIndex"],"mappings":"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","sourcesContent":["import { ChartElement, TextBox, Box } from '../../core';\nimport { FADEIN, INITIAL_ANIMATION_DURATION, INSIDE_END, INSIDE_BASE, OUTSIDE_END } from '../constants';\n\nimport { CENTER, TOP, BOTTOM, LEFT, RIGHT, X, Y, BLACK } from '../../common/constants';\nimport { getSpacing, setDefaultOptions } from '../../common';\n\nvar BarLabel = (function (ChartElement) {\n    function BarLabel(content, options, pointData) {\n        ChartElement.call(this, options);\n\n        this.textBox = new TextBox(content, this.options, pointData);\n        this.append(this.textBox);\n    }\n\n    if ( ChartElement ) BarLabel.__proto__ = ChartElement;\n    BarLabel.prototype = Object.create( ChartElement && ChartElement.prototype );\n    BarLabel.prototype.constructor = BarLabel;\n\n    BarLabel.prototype.createVisual = function createVisual () {\n        this.textBox.options.noclip = this.options.noclip;\n    };\n\n    BarLabel.prototype.reflow = function reflow (targetBox) {\n        var options = this.options;\n        var vertical = options.vertical;\n        var aboveAxis = options.aboveAxis;\n        var text = this.children[0];\n        var textOptions = text.options;\n        var box = text.box;\n        var padding = text.options.padding;\n        var labelBox = targetBox;\n\n        textOptions.align = vertical ? CENTER : LEFT;\n        textOptions.vAlign = vertical ? TOP : CENTER;\n\n        if (options.position === INSIDE_END) {\n            if (vertical) {\n                textOptions.vAlign = TOP;\n\n                if (!aboveAxis && box.height() < targetBox.height()) {\n                    textOptions.vAlign = BOTTOM;\n                }\n            } else {\n                textOptions.align = aboveAxis ? RIGHT : LEFT;\n            }\n        } else if (options.position === CENTER) {\n            textOptions.vAlign = CENTER;\n            textOptions.align = CENTER;\n        } else if (options.position === INSIDE_BASE) {\n            if (vertical) {\n                textOptions.vAlign = aboveAxis ? BOTTOM : TOP;\n            } else {\n                textOptions.align = aboveAxis ? LEFT : RIGHT;\n            }\n        } else if (options.position === OUTSIDE_END) {\n            if (vertical) {\n                if (aboveAxis) {\n                    labelBox = new Box(\n                        targetBox.x1, targetBox.y1 - box.height(),\n                        targetBox.x2, targetBox.y1\n                    );\n                } else {\n                    labelBox = new Box(\n                        targetBox.x1, targetBox.y2,\n                        targetBox.x2, targetBox.y2 + box.height()\n                    );\n                }\n            } else {\n                textOptions.align = CENTER;\n                if (aboveAxis) {\n                    labelBox = new Box(\n                        targetBox.x2, targetBox.y1,\n                        targetBox.x2 + box.width(), targetBox.y2\n                    );\n                } else {\n                    labelBox = new Box(\n                        targetBox.x1 - box.width(), targetBox.y1,\n                        targetBox.x1, targetBox.y2\n                    );\n                }\n            }\n        }\n\n        if (!options.rotation) {\n            if (vertical) {\n                padding.left = padding.right =\n                    (labelBox.width() - text.contentBox.width()) / 2;\n            } else {\n                padding.top = padding.bottom =\n                    (labelBox.height() - text.contentBox.height()) / 2;\n            }\n        }\n\n        text.reflow(labelBox);\n    };\n\n    BarLabel.prototype.alignToClipBox = function alignToClipBox (clipBox) {\n        var vertical = this.options.vertical;\n        var field = vertical ? Y : X;\n        var start = field + \"1\";\n        var end = field + \"2\";\n        var text = this.children[0];\n        var parentBox = this.parent.box;\n\n        if (parentBox[start] < clipBox[start] || clipBox[end] < parentBox[end]) {\n            var targetBox = text.paddingBox.clone();\n            targetBox[start] = Math.max(parentBox[start], clipBox[start]);\n            targetBox[end] = Math.min(parentBox[end], clipBox[end]);\n\n            this.reflow(targetBox);\n        }\n    };\n\n    return BarLabel;\n}(ChartElement));\n\nsetDefaultOptions(BarLabel, {\n    position: OUTSIDE_END,\n    margin: getSpacing(3),\n    padding: getSpacing(4),\n    color: BLACK,\n    background: \"\",\n    border: {\n        width: 1,\n        color: \"\"\n    },\n    aboveAxis: true,\n    vertical: false,\n    animation: {\n        type: FADEIN,\n        delay: INITIAL_ANIMATION_DURATION\n    },\n    zIndex: 2\n});\n\nexport default BarLabel;"]},"metadata":{},"sourceType":"module"}