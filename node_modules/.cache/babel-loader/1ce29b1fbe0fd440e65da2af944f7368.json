{"ast":null,"code":"import { MILLISECONDS, SECONDS, MINUTES, HOURS, DAYS, WEEKS, MONTHS, YEARS, TIME_PER_SECOND, TIME_PER_MINUTE, TIME_PER_HOUR } from './constants';\nimport addTicks from './add-ticks';\nimport toDate from './to-date';\nimport startOfWeek from './start-of-week';\n\nfunction adjustDST(date, hours) {\n  if (hours === 0 && date.getHours() === 23) {\n    date.setHours(date.getHours() + 2);\n    return true;\n  }\n\n  return false;\n}\n\nfunction addHours(date, hours) {\n  var roundedDate = new Date(date);\n  roundedDate.setMinutes(0, 0, 0);\n  var tzDiff = (date.getTimezoneOffset() - roundedDate.getTimezoneOffset()) * TIME_PER_MINUTE;\n  return addTicks(roundedDate, tzDiff + hours * TIME_PER_HOUR);\n}\n\nexport default function addDuration(dateValue, value, unit, weekStartDay) {\n  var result = dateValue;\n\n  if (dateValue) {\n    var date = toDate(dateValue);\n    var hours = date.getHours();\n\n    if (unit === YEARS) {\n      result = new Date(date.getFullYear() + value, 0, 1);\n      adjustDST(result, 0);\n    } else if (unit === MONTHS) {\n      result = new Date(date.getFullYear(), date.getMonth() + value, 1);\n      adjustDST(result, hours);\n    } else if (unit === WEEKS) {\n      result = addDuration(startOfWeek(date, weekStartDay), value * 7, DAYS);\n      adjustDST(result, hours);\n    } else if (unit === DAYS) {\n      result = new Date(date.getFullYear(), date.getMonth(), date.getDate() + value);\n      adjustDST(result, hours);\n    } else if (unit === HOURS) {\n      result = addHours(date, value);\n    } else if (unit === MINUTES) {\n      result = addTicks(date, value * TIME_PER_MINUTE);\n\n      if (result.getSeconds() > 0) {\n        result.setSeconds(0);\n      }\n    } else if (unit === SECONDS) {\n      result = addTicks(date, value * TIME_PER_SECOND);\n    } else if (unit === MILLISECONDS) {\n      result = addTicks(date, value);\n    }\n\n    if (unit !== MILLISECONDS && result.getMilliseconds() > 0) {\n      result.setMilliseconds(0);\n    }\n  }\n\n  return result;\n}","map":{"version":3,"sources":["/Users/lazybaccha/Documents/Honeywell/SBE/node_modules/@progress/kendo-charts/dist/es/date-utils/add-duration.js"],"names":["MILLISECONDS","SECONDS","MINUTES","HOURS","DAYS","WEEKS","MONTHS","YEARS","TIME_PER_SECOND","TIME_PER_MINUTE","TIME_PER_HOUR","addTicks","toDate","startOfWeek","adjustDST","date","hours","getHours","setHours","addHours","roundedDate","Date","setMinutes","tzDiff","getTimezoneOffset","addDuration","dateValue","value","unit","weekStartDay","result","getFullYear","getMonth","getDate","getSeconds","setSeconds","getMilliseconds","setMilliseconds"],"mappings":"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","sourcesContent":["import { MILLISECONDS, SECONDS, MINUTES, HOURS, DAYS, WEEKS, MONTHS, YEARS,\n    TIME_PER_SECOND, TIME_PER_MINUTE, TIME_PER_HOUR } from './constants';\nimport addTicks from './add-ticks';\nimport toDate from './to-date';\nimport startOfWeek from './start-of-week';\n\nfunction adjustDST(date, hours) {\n    if (hours === 0 && date.getHours() === 23) {\n        date.setHours(date.getHours() + 2);\n        return true;\n    }\n\n    return false;\n}\n\nfunction addHours(date, hours) {\n    var roundedDate = new Date(date);\n\n    roundedDate.setMinutes(0, 0, 0);\n\n    var tzDiff = (date.getTimezoneOffset() - roundedDate.getTimezoneOffset()) * TIME_PER_MINUTE;\n\n    return addTicks(roundedDate, tzDiff + hours * TIME_PER_HOUR);\n}\n\nexport default function addDuration(dateValue, value, unit, weekStartDay) {\n    var result = dateValue;\n\n    if (dateValue) {\n        var date = toDate(dateValue);\n        var hours = date.getHours();\n\n        if (unit === YEARS) {\n            result = new Date(date.getFullYear() + value, 0, 1);\n            adjustDST(result, 0);\n        } else if (unit === MONTHS) {\n            result = new Date(date.getFullYear(), date.getMonth() + value, 1);\n            adjustDST(result, hours);\n        } else if (unit === WEEKS) {\n            result = addDuration(startOfWeek(date, weekStartDay), value * 7, DAYS);\n            adjustDST(result, hours);\n        } else if (unit === DAYS) {\n            result = new Date(date.getFullYear(), date.getMonth(), date.getDate() + value);\n            adjustDST(result, hours);\n        } else if (unit === HOURS) {\n            result = addHours(date, value);\n        } else if (unit === MINUTES) {\n            result = addTicks(date, value * TIME_PER_MINUTE);\n\n            if (result.getSeconds() > 0) {\n                result.setSeconds(0);\n            }\n        } else if (unit === SECONDS) {\n            result = addTicks(date, value * TIME_PER_SECOND);\n        } else if (unit === MILLISECONDS) {\n            result = addTicks(date, value);\n        }\n\n        if (unit !== MILLISECONDS && result.getMilliseconds() > 0) {\n            result.setMilliseconds(0);\n        }\n    }\n\n    return result;\n}"]},"metadata":{},"sourceType":"module"}