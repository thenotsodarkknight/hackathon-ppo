{"ast":null,"code":"import { ChartElement, BoxElement, Title, Box } from '../core';\nimport { ChartPane } from './api-elements';\nimport ChartContainer from './chart-container';\nimport { PANE_RENDER } from './constants';\nimport { TOP, LEFT, X, Y } from '../common/constants';\nimport { append, deepExtend, isObject, last, setDefaultOptions } from '../common';\n\nvar Pane = function (BoxElement) {\n  function Pane(options) {\n    BoxElement.call(this, options);\n    this.id = paneID();\n    this.createTitle();\n    this.content = new ChartElement();\n    this.chartContainer = new ChartContainer({}, this);\n    this.append(this.content);\n    this.axes = [];\n    this.charts = [];\n  }\n\n  if (BoxElement) Pane.__proto__ = BoxElement;\n  Pane.prototype = Object.create(BoxElement && BoxElement.prototype);\n  Pane.prototype.constructor = Pane;\n\n  Pane.prototype.createTitle = function createTitle() {\n    var titleOptions = this.options.title;\n\n    if (isObject(titleOptions)) {\n      titleOptions = deepExtend({}, titleOptions, {\n        align: titleOptions.position,\n        position: TOP\n      });\n    }\n\n    this.title = Title.buildTitle(titleOptions, this, Pane.prototype.options.title);\n  };\n\n  Pane.prototype.appendAxis = function appendAxis(axis) {\n    this.content.append(axis);\n    this.axes.push(axis);\n    axis.pane = this;\n  };\n\n  Pane.prototype.appendAxisAt = function appendAxisAt(axis, pos) {\n    this.content.append(axis);\n    this.axes.splice(pos, 0, axis);\n    axis.pane = this;\n  };\n\n  Pane.prototype.appendChart = function appendChart(chart) {\n    if (this.chartContainer.parent !== this.content) {\n      this.content.append(this.chartContainer);\n    }\n\n    this.charts.push(chart);\n    this.chartContainer.append(chart);\n    chart.pane = this;\n  };\n\n  Pane.prototype.empty = function empty() {\n    var this$1 = this;\n    var plotArea = this.parent;\n\n    if (plotArea) {\n      for (var i = 0; i < this.axes.length; i++) {\n        plotArea.removeAxis(this$1.axes[i]);\n      }\n\n      for (var i$1 = 0; i$1 < this.charts.length; i$1++) {\n        plotArea.removeChart(this$1.charts[i$1]);\n      }\n    }\n\n    this.axes = [];\n    this.charts = [];\n    this.content.destroy();\n    this.content.children = [];\n    this.chartContainer.children = [];\n  };\n\n  Pane.prototype.reflow = function reflow(targetBox) {\n    // Content (such as charts) is rendered, but excluded from reflows\n    var content;\n\n    if (last(this.children) === this.content) {\n      content = this.children.pop();\n    }\n\n    BoxElement.prototype.reflow.call(this, targetBox);\n\n    if (content) {\n      this.children.push(content);\n    }\n\n    if (this.title) {\n      this.contentBox.y1 += this.title.box.height();\n    }\n  };\n\n  Pane.prototype.visualStyle = function visualStyle() {\n    var style = BoxElement.prototype.visualStyle.call(this);\n    style.zIndex = -10;\n    return style;\n  };\n\n  Pane.prototype.renderComplete = function renderComplete() {\n    if (this.options.visible) {\n      this.createGridLines();\n    }\n  };\n\n  Pane.prototype.stackRoot = function stackRoot() {\n    return this;\n  };\n\n  Pane.prototype.clipRoot = function clipRoot() {\n    return this;\n  };\n\n  Pane.prototype.createGridLines = function createGridLines() {\n    var axes = this.axes;\n    var allAxes = axes.concat(this.parent.axes);\n    var vGridLines = [];\n    var hGridLines = []; // TODO\n    // Is full combination really necessary?\n\n    for (var i = 0; i < axes.length; i++) {\n      var axis = axes[i];\n      var vertical = axis.options.vertical;\n      var gridLines = vertical ? vGridLines : hGridLines;\n\n      for (var j = 0; j < allAxes.length; j++) {\n        if (gridLines.length === 0) {\n          var altAxis = allAxes[j];\n\n          if (vertical !== altAxis.options.vertical) {\n            append(gridLines, axis.createGridLines(altAxis));\n          }\n        }\n      }\n    }\n  };\n\n  Pane.prototype.refresh = function refresh() {\n    this.visual.clear();\n    this.content.parent = null;\n    this.content.createGradient = this.createGradient.bind(this);\n    this.content.renderVisual();\n    this.content.parent = this;\n\n    if (this.title) {\n      this.visual.append(this.title.visual);\n    }\n\n    this.visual.append(this.content.visual);\n    this.renderComplete();\n    this.notifyRender();\n  };\n\n  Pane.prototype.chartsBox = function chartsBox() {\n    var axes = this.axes;\n    var length = axes.length;\n    var chartsBox = new Box();\n\n    for (var idx = 0; idx < length; idx++) {\n      var axis = axes[idx];\n      var axisValueField = axis.options.vertical ? Y : X;\n      var lineBox = axis.lineBox();\n      chartsBox[axisValueField + 1] = lineBox[axisValueField + 1];\n      chartsBox[axisValueField + 2] = lineBox[axisValueField + 2];\n    }\n\n    if (chartsBox.x2 === 0) {\n      var allAxes = this.parent.axes;\n      var length$1 = allAxes.length;\n\n      for (var idx$1 = 0; idx$1 < length$1; idx$1++) {\n        var axis$1 = allAxes[idx$1];\n\n        if (!axis$1.options.vertical) {\n          var lineBox$1 = axis$1.lineBox();\n          chartsBox.x1 = lineBox$1.x1;\n          chartsBox.x2 = lineBox$1.x2;\n        }\n      }\n    }\n\n    return chartsBox;\n  };\n\n  Pane.prototype.clipBox = function clipBox() {\n    return this.chartContainer.clipBox;\n  };\n\n  Pane.prototype.notifyRender = function notifyRender() {\n    var service = this.getService();\n\n    if (service) {\n      service.notify(PANE_RENDER, {\n        pane: new ChartPane(this),\n        index: this.paneIndex,\n        name: this.options.name\n      });\n    }\n  };\n\n  return Pane;\n}(BoxElement);\n\nvar ID = 1;\n\nfunction paneID() {\n  return \"pane\" + ID++;\n}\n\nPane.prototype.isStackRoot = true;\nsetDefaultOptions(Pane, {\n  zIndex: -1,\n  shrinkToFit: true,\n  title: {\n    align: LEFT\n  },\n  visible: true\n});\nexport default Pane;","map":{"version":3,"sources":["/Users/lazybaccha/Documents/Honeywell/SBE/node_modules/@progress/kendo-charts/dist/es/chart/pane.js"],"names":["ChartElement","BoxElement","Title","Box","ChartPane","ChartContainer","PANE_RENDER","TOP","LEFT","X","Y","append","deepExtend","isObject","last","setDefaultOptions","Pane","options","call","id","paneID","createTitle","content","chartContainer","axes","charts","__proto__","prototype","Object","create","constructor","titleOptions","title","align","position","buildTitle","appendAxis","axis","push","pane","appendAxisAt","pos","splice","appendChart","chart","parent","empty","this$1","plotArea","i","length","removeAxis","i$1","removeChart","destroy","children","reflow","targetBox","pop","contentBox","y1","box","height","visualStyle","style","zIndex","renderComplete","visible","createGridLines","stackRoot","clipRoot","allAxes","concat","vGridLines","hGridLines","vertical","gridLines","j","altAxis","refresh","visual","clear","createGradient","bind","renderVisual","notifyRender","chartsBox","idx","axisValueField","lineBox","x2","length$1","idx$1","axis$1","lineBox$1","x1","clipBox","service","getService","notify","index","paneIndex","name","ID","isStackRoot","shrinkToFit"],"mappings":"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","sourcesContent":["import { ChartElement, BoxElement, Title, Box } from '../core';\nimport { ChartPane } from './api-elements';\nimport ChartContainer from './chart-container';\n\nimport { PANE_RENDER } from './constants';\nimport { TOP, LEFT, X, Y } from '../common/constants';\nimport { append, deepExtend, isObject, last, setDefaultOptions } from '../common';\n\nvar Pane = (function (BoxElement) {\n    function Pane(options) {\n        BoxElement.call(this, options);\n\n        this.id = paneID();\n\n        this.createTitle();\n\n        this.content = new ChartElement();\n\n        this.chartContainer = new ChartContainer({}, this);\n        this.append(this.content);\n\n        this.axes = [];\n        this.charts = [];\n    }\n\n    if ( BoxElement ) Pane.__proto__ = BoxElement;\n    Pane.prototype = Object.create( BoxElement && BoxElement.prototype );\n    Pane.prototype.constructor = Pane;\n\n    Pane.prototype.createTitle = function createTitle () {\n        var titleOptions = this.options.title;\n        if (isObject(titleOptions)) {\n            titleOptions = deepExtend({}, titleOptions, {\n                align: titleOptions.position,\n                position: TOP\n            });\n        }\n\n        this.title = Title.buildTitle(titleOptions, this, Pane.prototype.options.title);\n    };\n\n    Pane.prototype.appendAxis = function appendAxis (axis) {\n        this.content.append(axis);\n        this.axes.push(axis);\n        axis.pane = this;\n    };\n\n    Pane.prototype.appendAxisAt = function appendAxisAt (axis, pos) {\n        this.content.append(axis);\n        this.axes.splice(pos, 0, axis);\n        axis.pane = this;\n    };\n\n    Pane.prototype.appendChart = function appendChart (chart) {\n        if (this.chartContainer.parent !== this.content) {\n            this.content.append(this.chartContainer);\n        }\n\n        this.charts.push(chart);\n        this.chartContainer.append(chart);\n        chart.pane = this;\n    };\n\n    Pane.prototype.empty = function empty () {\n        var this$1 = this;\n\n        var plotArea = this.parent;\n\n        if (plotArea) {\n            for (var i = 0; i < this.axes.length; i++) {\n                plotArea.removeAxis(this$1.axes[i]);\n            }\n\n            for (var i$1 = 0; i$1 < this.charts.length; i$1++) {\n                plotArea.removeChart(this$1.charts[i$1]);\n            }\n        }\n\n        this.axes = [];\n        this.charts = [];\n\n        this.content.destroy();\n        this.content.children = [];\n        this.chartContainer.children = [];\n    };\n\n    Pane.prototype.reflow = function reflow (targetBox) {\n        // Content (such as charts) is rendered, but excluded from reflows\n        var content;\n        if (last(this.children) === this.content) {\n            content = this.children.pop();\n        }\n\n        BoxElement.prototype.reflow.call(this, targetBox);\n\n        if (content) {\n            this.children.push(content);\n        }\n\n        if (this.title) {\n            this.contentBox.y1 += this.title.box.height();\n        }\n    };\n\n    Pane.prototype.visualStyle = function visualStyle () {\n        var style = BoxElement.prototype.visualStyle.call(this);\n        style.zIndex = -10;\n\n        return style;\n    };\n\n    Pane.prototype.renderComplete = function renderComplete () {\n        if (this.options.visible) {\n            this.createGridLines();\n        }\n    };\n\n    Pane.prototype.stackRoot = function stackRoot () {\n        return this;\n    };\n\n    Pane.prototype.clipRoot = function clipRoot () {\n        return this;\n    };\n\n    Pane.prototype.createGridLines = function createGridLines () {\n        var axes = this.axes;\n        var allAxes = axes.concat(this.parent.axes);\n        var vGridLines = [];\n        var hGridLines = [];\n\n        // TODO\n        // Is full combination really necessary?\n        for (var i = 0; i < axes.length; i++) {\n            var axis = axes[i];\n            var vertical = axis.options.vertical;\n            var gridLines = vertical ? vGridLines : hGridLines;\n            for (var j = 0; j < allAxes.length; j++) {\n                if (gridLines.length === 0) {\n                    var altAxis = allAxes[j];\n                    if (vertical !== altAxis.options.vertical) {\n                        append(gridLines, axis.createGridLines(altAxis));\n                    }\n                }\n            }\n        }\n    };\n\n    Pane.prototype.refresh = function refresh () {\n        this.visual.clear();\n\n        this.content.parent = null;\n        this.content.createGradient = this.createGradient.bind(this);\n        this.content.renderVisual();\n        this.content.parent = this;\n\n        if (this.title) {\n            this.visual.append(this.title.visual);\n        }\n\n        this.visual.append(this.content.visual);\n\n        this.renderComplete();\n        this.notifyRender();\n    };\n\n    Pane.prototype.chartsBox = function chartsBox () {\n        var axes = this.axes;\n        var length = axes.length;\n        var chartsBox = new Box();\n\n        for (var idx = 0; idx < length; idx++) {\n            var axis = axes[idx];\n            var axisValueField = axis.options.vertical ? Y : X;\n            var lineBox = axis.lineBox();\n            chartsBox[axisValueField + 1] = lineBox[axisValueField + 1];\n            chartsBox[axisValueField + 2] = lineBox[axisValueField + 2];\n        }\n\n        if (chartsBox.x2 === 0) {\n            var allAxes = this.parent.axes;\n            var length$1 = allAxes.length;\n\n            for (var idx$1 = 0; idx$1 < length$1; idx$1++) {\n                var axis$1 = allAxes[idx$1];\n                if (!axis$1.options.vertical) {\n                    var lineBox$1 = axis$1.lineBox();\n                    chartsBox.x1 = lineBox$1.x1;\n                    chartsBox.x2 = lineBox$1.x2;\n                }\n            }\n        }\n        return chartsBox;\n    };\n\n    Pane.prototype.clipBox = function clipBox () {\n        return this.chartContainer.clipBox;\n    };\n\n    Pane.prototype.notifyRender = function notifyRender () {\n        var service = this.getService();\n        if (service) {\n            service.notify(PANE_RENDER, {\n                pane: new ChartPane(this),\n                index: this.paneIndex,\n                name: this.options.name\n            });\n        }\n    };\n\n    return Pane;\n}(BoxElement));\n\nvar ID = 1;\n\nfunction paneID() {\n    return \"pane\" + ID++;\n}\n\nPane.prototype.isStackRoot = true;\n\nsetDefaultOptions(Pane, {\n    zIndex: -1,\n    shrinkToFit: true,\n    title: {\n        align: LEFT\n    },\n    visible: true\n});\n\nexport default Pane;\n"]},"metadata":{},"sourceType":"module"}