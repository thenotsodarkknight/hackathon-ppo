{"ast":null,"code":"import { drawing as draw } from '@progress/kendo-drawing';\nimport { alignPathToPixel } from '../../common';\nexport default function createAxisTick(options, tickOptions) {\n  var tickX = options.tickX;\n  var tickY = options.tickY;\n  var position = options.position;\n  var tick = new draw.Path({\n    stroke: {\n      width: tickOptions.width,\n      color: tickOptions.color\n    }\n  });\n\n  if (options.vertical) {\n    tick.moveTo(tickX, position).lineTo(tickX + tickOptions.size, position);\n  } else {\n    tick.moveTo(position, tickY).lineTo(position, tickY + tickOptions.size);\n  }\n\n  alignPathToPixel(tick);\n  return tick;\n}","map":{"version":3,"sources":["/Users/lazybaccha/Documents/Honeywell/SBE/node_modules/@progress/kendo-charts/dist/es/core/utils/create-axis-tick.js"],"names":["drawing","draw","alignPathToPixel","createAxisTick","options","tickOptions","tickX","tickY","position","tick","Path","stroke","width","color","vertical","moveTo","lineTo","size"],"mappings":"AAAA,SAASA,OAAO,IAAIC,IAApB,QAAgC,yBAAhC;AAEA,SAASC,gBAAT,QAAiC,cAAjC;AAEA,eAAe,SAASC,cAAT,CAAwBC,OAAxB,EAAiCC,WAAjC,EAA8C;AACzD,MAAIC,KAAK,GAAGF,OAAO,CAACE,KAApB;AACA,MAAIC,KAAK,GAAGH,OAAO,CAACG,KAApB;AACA,MAAIC,QAAQ,GAAGJ,OAAO,CAACI,QAAvB;AAEA,MAAIC,IAAI,GAAG,IAAIR,IAAI,CAACS,IAAT,CAAc;AACrBC,IAAAA,MAAM,EAAE;AACJC,MAAAA,KAAK,EAAEP,WAAW,CAACO,KADf;AAEJC,MAAAA,KAAK,EAAER,WAAW,CAACQ;AAFf;AADa,GAAd,CAAX;;AAOA,MAAIT,OAAO,CAACU,QAAZ,EAAsB;AAClBL,IAAAA,IAAI,CAACM,MAAL,CAAYT,KAAZ,EAAmBE,QAAnB,EACKQ,MADL,CACYV,KAAK,GAAGD,WAAW,CAACY,IADhC,EACsCT,QADtC;AAEH,GAHD,MAGO;AACHC,IAAAA,IAAI,CAACM,MAAL,CAAYP,QAAZ,EAAsBD,KAAtB,EACKS,MADL,CACYR,QADZ,EACsBD,KAAK,GAAGF,WAAW,CAACY,IAD1C;AAEH;;AAEDf,EAAAA,gBAAgB,CAACO,IAAD,CAAhB;AAEA,SAAOA,IAAP;AACH","sourcesContent":["import { drawing as draw } from '@progress/kendo-drawing';\n\nimport { alignPathToPixel } from '../../common';\n\nexport default function createAxisTick(options, tickOptions) {\n    var tickX = options.tickX;\n    var tickY = options.tickY;\n    var position = options.position;\n\n    var tick = new draw.Path({\n        stroke: {\n            width: tickOptions.width,\n            color: tickOptions.color\n        }\n    });\n\n    if (options.vertical) {\n        tick.moveTo(tickX, position)\n            .lineTo(tickX + tickOptions.size, position);\n    } else {\n        tick.moveTo(position, tickY)\n            .lineTo(position, tickY + tickOptions.size);\n    }\n\n    alignPathToPixel(tick);\n\n    return tick;\n}"]},"metadata":{},"sourceType":"module"}